import os
import re
import warnings
import numpy as np
import faiss
import json
import random
import time
from typing import List, Dict, Tuple, Optional, Type, Any
from pathlib import Path
from sentence_transformers import SentenceTransformer
import nltk
from nltk.tokenize import sent_tokenize
from transformers import AutoTokenizer, AutoModelForCausalLM, BitsAndBytesConfig
import torch
from torch.cuda.amp import autocast
import gradio as gr
from ddgs import DDGS

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

warnings.filterwarnings('ignore')

try:
    nltk.data.find('tokenizers/punkt')
except LookupError:
    nltk.download('punkt', quiet=True)

STOP_WORDS = {
    "–¥–æ–±—Ä—ã–π", "–¥–µ–Ω—å", "–ø—Ä–æ—à—É", "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞", "–º–µ—Ä—ã", "–ø—Ä–∏–º–∏—Ç–µ", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ",
    "—Å–ø–∞—Å–∏–±–æ", "–≤–µ—á–µ—Ä", "—É—Ç—Ä–æ", "—Ö–æ—á—É", "–Ω–∞–ø–æ–º–∏–Ω–∞—é", "—É–≤–µ–¥–æ–º–ª—è—é"
}

# ---------------------------
# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π
# ---------------------------

print("üß† –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π...")

print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ ViktorZver/FRIDA...")
embedding_model = SentenceTransformer("ViktorZver/FRIDA", device=str(device))
print("‚úÖ FRIDA –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∏–∑–∞—Ç–æ—Ä–∞ YandexGPT-5-Lite...")
tokenizer = AutoTokenizer.from_pretrained("yandex/YandexGPT-5-Lite-8B-instruct")
model_name = "yandex/YandexGPT-5-Lite-8B-instruct"

if tokenizer.pad_token is None:
    tokenizer.pad_token = tokenizer.eos_token

def estimate_tokens(text: str) -> int:
    return len(tokenizer.encode(text, add_special_tokens=False))

print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ YandexGPT-5-Lite-8B-instruct –≤ 4-bit...")
bnb_config = BitsAndBytesConfig(
    load_in_4bit=True,
    bnb_4bit_quant_type="nf4",
    bnb_4bit_compute_dtype=torch.float16,
    bnb_4bit_use_double_quant=True,
)

try:
    model = AutoModelForCausalLM.from_pretrained(
        model_name,
        #quantization_config=bnb_config,
        device_map="auto",
        torch_dtype=torch.float16,
        trust_remote_code=False,
        attn_implementation="sdpa"
    )
    print(f"‚úÖ LLM –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –≤ 4-bit –Ω–∞: {device}")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {e}")
    raise

# ---------------------------
# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
# ---------------------------

CHUNKS_PATH = "/kaggle/input/jkh-data/document_chunks.json"
INDEX_PATH  = "/kaggle/input/jkh-data/faiss_index.bin"

if not os.path.exists(CHUNKS_PATH) or not os.path.exists(INDEX_PATH):
    print(f"‚ö†Ô∏è –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: {CHUNKS_PATH}, {INDEX_PATH}")
    chunks_data = []
    index = None
else:
    print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ —á–∞–Ω–∫–æ–≤...")
    with open(CHUNKS_PATH, "r", encoding="utf-8") as f:
        chunks_data = json.load(f)
    print(f"‚úÖ –ß–∞–Ω–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(chunks_data)}")

    print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ FAISS-–∏–Ω–¥–µ–∫—Å–∞...")
    index = faiss.read_index(INDEX_PATH)
    print(f"‚úÖ –ò–Ω–¥–µ–∫—Å –∑–∞–≥—Ä—É–∂–µ–Ω: {index.ntotal} –≤–µ–∫—Ç–æ—Ä–æ–≤")


# ---------------------------
# –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –∞–≥–µ–Ω—Ç–∞
# ---------------------------

class RAGAgent:
    def __init__(self, name: str, keywords: List[str]):
        self.name = name
        self.keywords = [kw.lower() for kw in keywords]
        self.feedback_data = []
        self.confidence_threshold = 0.7
        self.load_feedback()

    """def matches(self, query: str) -> bool:
        q = query.lower()
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —Å–ª–æ–≤–∞
        words = set(re.findall(r'\b[–∞-—è—ëa-z0-9]+\b', q))
        return any(kw in words for kw in self.keywords)"""
    def matches(self, query: str) -> bool:
        q = query.lower()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∑–∞–ø—Ä–æ—Å –õ–Æ–ë–û–ï –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∫–∞–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫—É
        # –≠—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É —É—Å—Ç–æ–π—á–∏–≤–æ–π –∫ –æ–ø–µ—á–∞—Ç–∫–∞–º, —Å–∫–ª–æ–Ω–µ–Ω–∏—è–º –∏ —á–∞—Å—Ç–∏—á–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º
        return any(kw in q for kw in self.keywords)
       
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        raise NotImplementedError("–ö–∞–∂–¥—ã–π –∞–≥–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–π _build_prompt")

    def get_role_instruction(self, role: str) -> str:
        base = {
            "–∂–∏—Ç–µ–ª—å": "–û—Ç–≤–µ—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ –∂–∏—Ç–µ–ª—è. –î–∞–≤–∞–π—Ç–µ –ø–æ—à–∞–≥–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –ù–ü–ê.",
            "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å": "–û—Ç–≤–µ—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ –£–ö/–¢–°–ù. –í–∫–ª—é—á–∞–π—Ç–µ —Å—É–¥–µ–±–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã.",
            "—Å–º–µ—à–∞–Ω–Ω–∞—è": "–†–∞–∑–¥–µ–ª–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏: –¥–ª—è –∂–∏—Ç–µ–ª—è –∏ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è."
        }
        return base.get(role, base["—Å–º–µ—à–∞–Ω–Ω–∞—è"])

    # ---- –û–±—É—á–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ ----
    def add_feedback(self, query: str, ideal_answer: str, rating: float = 1.0):
        if rating >= 0.8:
            self.feedback_data.append({
                "query": query,
                "ideal_answer": ideal_answer,
                "rating": rating,
                "timestamp": time.time()
            })
        self._save_feedback()

    def _save_feedback(self):
        feedback_file = f"agent_feedback_{self.name.replace(' ', '_')}.json"
        with open(feedback_file, "w", encoding="utf-8") as f:
            json.dump(self.feedback_data, f, ensure_ascii=False, indent=2)

    def load_feedback(self):
        feedback_file = f"agent_feedback_{self.name.replace(' ', '_')}.json"
        if os.path.exists(feedback_file):
            try:
                with open(feedback_file, "r", encoding="utf-8") as f:
                    self.feedback_data = json.load(f)
            except:
                self.feedback_data = []

    def improve_prompt_from_feedback(self) -> str:
        if len(self.feedback_data) < 3:
            return ""
        examples = random.sample(self.feedback_data, min(3, len(self.feedback_data)))
        instruction = "\n\n–ù–∞ –æ—Å–Ω–æ–≤–µ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤, —É–ª—É—á—à–∏ —Å—Ç–∏–ª—å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞:\n"
        for ex in examples:
            instruction += f"–í–æ–ø—Ä–æ—Å: {ex['query']}\n–û—Ç–≤–µ—Ç: {ex['ideal_answer']}\n---\n"
        return instruction

    # ---- –ú—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–æ—Å—Ç—å: –∑–∞–ø—Ä–æ—Å –∫ –¥—Ä—É–≥–æ–º—É –∞–≥–µ–Ω—Ç—É ----
    def consult_other_agent(self, query: str, rag_system) -> str:
        """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —É –¥—Ä—É–≥–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ MetaAgent"""
        other_agent = rag_system.meta_agent.route(query, exclude_agent=self)
        if other_agent:
            print(f"ü§ù {self.name} –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–º–æ—â—å —É {other_agent.name}")
            context = rag_system.generate_context_for_agent(query, other_agent, rag_system.detect_user_role(query))
            return f"\n\n[–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ—Ç –∞–≥–µ–Ω—Ç–∞ '{other_agent.name}']: {context}\n"
        return ""


# ---------------------------
# –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã
# ---------------------------

class TariffAgent(RAGAgent):
    def __init__(self):
        super().__init__("–¢–∞—Ä–∏—Ñ—ã –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è", [
            "—Ç–∞—Ä–∏—Ñ", "–Ω–∞—á–∏—Å–ª", "–æ–ø–ª–∞—Ç–∞", "—Å—É–º–º–∞", "–æ–¥–Ω", "–≥–≤—Å", "–∏–ø—É", "–∫—É–±–æ–º–µ—Ç—Ä", "—Å—Ç–æ–∏–º–æ—Å—Ç—å", "–ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç", "–ø–æ–≤—ã—à–∞—é—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç",
            "—Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –ø–æ–≤–µ—Ä–∫–µ", "–∞–∫—Ç –ø–æ–≤–µ—Ä–∫–∏", "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–≤–µ—Ä–∫–∏", "–ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç –ø–æ—Å–ª–µ –ø–æ–≤–µ—Ä–∫–∏", "—Å—Ä–æ–∫ –ø–æ–≤–µ—Ä–∫–∏ –∏—Å—Ç—ë–∫", 
            "–∏—Å—Ç—ë–∫ —Å—Ä–æ–∫ –ø–æ–≤–µ—Ä–∫–∏", "–∞–∫—Ç —Å–≤–µ—Ä–∫–∏", "—Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ç–∞", "–ø–ª–∞—Ç–∞ –∑–∞ –∞–∫—Ç", "—É—Å–ª—É–≥–∞ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–∞–∂–µ–π", "–¥–æ–∫—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–∞–∂–µ–π", 
            "–ø—Ä–æ–¥–∞–∂–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã", "–∞–∫—Ç —Å–≤–µ—Ä–∫–∏ —Å—á–µ—Ç—á–∏–∫–æ–≤", "–ø–ª–∞–Ω–æ–≤–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ", "–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã", "14 —Å—É—Ç–æ–∫",
            "–æ—Ç–ø—É—Å–∫", "–∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞", "–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ", "—É–µ—Ö–∞–ª", "–ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ", "–¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞",
            "–ø–ª–∞—Ç—ë–∂–∫–∞", "–∫–≤–∏—Ç–∞–Ω—Ü–∏—è", "–Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å—É–º–º–∞", "–¥–æ–ª–≥ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏", "–∑–∞–¥–≤–æ–∏–ª–∏ –æ–ø–ª–∞—Ç—É", "–∫–æ–º–∏—Å—Å–∏—è –±–∞–Ω–∫–∞", "—Å—É–º–º–∞ –û–î–ù", 
            "–ø–æ—á–µ–º—É –∑–∞ –ª–∏—Ñ—Ç", "–ø–µ—Ä–µ–ø–ª–∞—Ç–∞", "–Ω–µ –ø—Ä–∏—à–ª–∞ –æ–ø–ª–∞—Ç–∞", "–≥–¥–µ –¥–æ–ª–≥", "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∞—Ä–∏—Ñ", "–Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–º—É", 
            "–ø–æ–≤—ã—à–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞", "–æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞", "—Ä–∞—Å—á–µ—Ç –ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤—É", "—Ä–∞—Å—á–µ—Ç –ø–æ –ø–æ–∫–∞–∑–∞–Ω–∏—è–º", "—Ä–∞—Å—á–µ—Ç –ø–æ —Å—Ä–µ–¥–Ω–µ–º—É", 
            "–ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –ø–æ –∞–∫—Ç—É", "–ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –ø–æ –∑–∞—è–≤–ª–µ–Ω–∏—é", "–∫–æ–º–∏—Å—Å–∏—è –∑–∞ –æ–ø–ª–∞—Ç—É"
        ])
    
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra} {web_results} \n\n"
            f"–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º –ñ–ö–•. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –ü–ü –†–§ ‚Ññ354 ¬´–û –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥¬ª \n"
            f"- –î–ª—è –æ—Å–ø–∞—Ä–∏–≤–∞–Ω–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π: –§–ó ‚Ññ59-–§–ó ¬´–û –ø–æ—Ä—è–¥–∫–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–π –≥—Ä–∞–∂–¥–∞–Ω¬ª \n"
            f"- –î–ª—è —Ä–∞—Å—á—ë—Ç–æ–≤ —Å –ò–ü–£/–û–î–ü–£: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Ññ2 –∫ –ü–ü –†–§ ‚Ññ354 \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–±—ä—è—Å–Ω–∏, —á—Ç–æ –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π —á–µ—Ä–µ–∑ –±–∞–Ω–∫ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.\n\n"
            f"–†–∞–∑—ä—è—Å–Ω–∏, –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –æ–± –æ–ø–ª–∞—Ç–µ –ª–∏—Ñ—Ç–∞, —á—Ç–æ –ª–∏—Ñ—Ç –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –≤—Å–µ–º–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º–∏, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –æ–±—â–µ–µ –∏–º—É—â–µ—Å—Ç–≤–æ (–ñ–ö –†–§ —Å—Ç.36)"
            f"–î–û–ü–û–õ–ù–ò –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç—É: \n\n"
            f"4. –í—Å–µ–≥–¥–∞ —É—Ç–æ—á–Ω—è–π: '–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –æ–±—è–∑–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–ª–µ–Ω–∏—è –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–ü–ü –†–§ ‚Ññ354, –ø. 106).' \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏: \n\n"
            f"1. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –æ **–ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç–µ –∑–∞ –ø–µ—Ä–∏–æ–¥ –ø–ª–∞–Ω–æ–≤–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è** (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã): \n\n"
            f"   - –ù–∞—á–Ω–∏ —Å: '–°–æ–≥–ª–∞—Å–Ω–æ –ø. 4 –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è ‚Ññ 1 –∫ –ü–ü –†–§ ‚Ññ354, –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 14 —Å—É—Ç–æ–∫.' \n"
            f"   - –û–±—ä—è—Å–Ω–∏ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º: '–ü–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –∑–∞ –ø–ª–∞–Ω–æ–≤–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ –∑–∞–∫–æ–Ω–æ–º –∏ –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º –∫–∞—á–µ—Å—Ç–≤–∞ —É—Å–ª—É–≥–∏. –≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞, –∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞.' (–ü–ü –†–§ ‚Ññ354, –ø. 98). \n"
            f"   - –£—Ç–æ—á–Ω–∏: '–ü–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –≤–æ–∑–º–æ–∂–µ–Ω –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—Å–∏–ª–æ 14 –¥–Ω–µ–π –∏–ª–∏ –µ—Å–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã –±—ã–ª–∞ –Ω–∏–∂–µ –Ω–æ—Ä–º—ã (–º–µ–Ω–µ–µ 60¬∞C) –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–∞—á–∏.' (–ü–ü –†–§ ‚Ññ354, –ø. 99). \n\n"
            f"2. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –æ **–ø–æ–≤—ã—à–∞—é—â–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–µ** (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–≤–µ—Ä–∫–∏ –ò–ü–£): \n\n"
            f"   - –ß–µ—Ç–∫–æ —É–∫–∞–∂–∏: '–ü–æ–≤—ã—à–∞—é—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 1.5 –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –ø. 81(12) –ü–ü –†–§ ‚Ññ354, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –ø–æ–∫–∞–∑–∞–Ω–∏—è –∏–ª–∏ –∏—Å—Ç–µ–∫ —Å—Ä–æ–∫ –ø–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–±–æ—Ä–∞.' \n"
            f"   - –£–∫–∞–∂–∏, –∫–∞–∫ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å: '–î–ª—è –æ—Ç–º–µ–Ω—ã –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∞–∫—Ç –æ –ø–æ–≤–µ—Ä–∫–µ –ø—Ä–∏–±–æ—Ä–∞ —É—á–µ—Ç–∞ –≤ —É–ø—Ä–∞–≤–ª—è—é—â—É—é –∫–æ–º–ø–∞–Ω–∏—é.' \n\n"
            f"3. –í—Å–µ–≥–¥–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"   - –ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–ª–∞—Ç–∞? \n"
            f"   - –ö–∞–∫–∏–µ –Ω–æ—Ä–º–∞—Ç–∏–≤—ã –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è? \n"
            f"   - –ö–∞–∫ –æ—Å–ø–æ—Ä–∏—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ? (–§–ó ‚Ññ59-–§–ó, —Å—Ç. 8 ‚Äî —Å—Ä–æ–∫ –æ—Ç–≤–µ—Ç–∞ 30 –¥–Ω–µ–π) \n\n"
            f"4. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –æ **–ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–µ –ø—Ä–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏** (–æ—Ç–ø—É—Å–∫, –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞): \n\n"
            f"   - –£–∫–∞–∂–∏: '–ü–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ —É—Å–ª—É–≥–∞–º, —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º—ã–º –ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤—É, –∏ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –±–æ–ª–µ–µ 5 –¥–Ω–µ–π.' (–ü–ü –†–§ ‚Ññ354, –ø. 86) \n"
            f"   - –ü–µ—Ä–µ—á–∏—Å–ª–∏: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ + –¥–æ–∫—É–º–µ–Ω—Ç—ã (–±–∏–ª–µ—Ç—ã, —Å–ø—Ä–∞–≤–∫–∞, –ø—É—Ç–µ–≤–∫–∞) –¥–æ –æ—Ç—ä–µ–∑–¥–∞ –∏–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è.' \n"
            f"   - –ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏: '–ï—Å–ª–∏ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ò–ü–£, –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è ‚Äî –ø–ª–∞—Ç–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–∫–∞–∑–∞–Ω–∏—è–º.' \n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É: \n\n"
            f"5. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **—Å—Ä–æ–∫–∞ –æ–ø–ª–∞—Ç—ã –ñ–ö–£** –∏–ª–∏ **—Å—Ä–æ–∫–∞ –ø–æ–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤** (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ø—Ä–∞–≤–æ–∫ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏): \n\n"
            f"   - –ù–∞—á–Ω–∏ –æ—Ç–≤–µ—Ç —Å –ø—Ä—è–º–æ–π —Ü–∏—Ç–∞—Ç—ã –∏–∑ –∑–∞–∫–æ–Ω–∞: '–°–æ–≥–ª–∞—Å–Ω–æ —Å—Ç. 155 –ñ–∏–ª–∏—â–Ω–æ–≥–æ –∫–æ–¥–µ–∫—Å–∞ –†–§, –ø–ª–∞—Ç–∞ –∑–∞ –∂–∏–ª–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ –∏ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –≤–Ω–æ—Å–∏—Ç—Å—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ –¥–æ –¥–µ—Å—è—Ç–æ–≥–æ —á–∏—Å–ª–∞ –º–µ—Å—è—Ü–∞, —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞ –∏—Å—Ç–µ–∫—à–∏–º –º–µ—Å—è—Ü–µ–º, –µ—Å–ª–∏ –∏–Ω–æ–π —Å—Ä–æ–∫ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–æ–≥–æ–≤–æ—Ä–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ —Ä–µ—à–µ–Ω–∏–µ–º –æ–±—â–µ–≥–æ —Å–æ–±—Ä–∞–Ω–∏—è.' \n"
            f"   - –î–ª—è —Å–ø—Ä–∞–≤–æ–∫ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏: '–°–ø—Ä–∞–≤–∫–∏ –æ –≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–æ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∏–ª–∏ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 30 –¥–Ω–µ–π –ø–æ—Å–ª–µ –µ–≥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è (–ü–ü –†–§ ‚Ññ354, –ø. 86).' \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class NormativeAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", [
            "–∑–∞–∫–æ–Ω", "—Ñ–∑", "–ø–ø —Ä—Ñ", "–Ω–æ—Ä–º–∞—Ç–∏–≤", "–ø—Ä–∞–≤–æ", "—Ä–µ–≥–ª–∞–º–µ–Ω—Ç", "–∂–∏–ª–∏—â–Ω—ã–π –∫–æ–¥–µ–∫—Å", "–∑–∞–∫–æ–Ω –æ –∂–∫—Ö", 
            "–∫–∞–∫–æ–π –Ω–æ—Ä–º–∞—Ç–∏–≤", "–æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –£–ö", "–ø—Ä–∞–≤–∞ –∂–∏–ª—å—Ü–æ–≤", "–≥–¥–µ –ø—Ä–æ–ø–∏—Å–∞–Ω–æ", "—Å–æ—à–ª–∏—Ç–µ—Å—å –Ω–∞ –∑–∞–∫–æ–Ω", "–ø–æ –∑–∞–∫–æ–Ω—É",
            "—Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –ú–∏–Ω—Å—Ç—Ä–æ—è", "–ø–∏—Å—å–º–∞ –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞", "—Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –§–ê–°", "–º–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "–æ–±–∑–æ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏",
            "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–ª–µ–Ω—É–º–∞ –í–° –†–§", "–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω–æ–≥–æ –°—É–¥–∞ –†–§", "–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –∫–æ–Ω–≤–µ–Ω—Ü–∏–∏", "–µ–≤—Ä–æ–ø–µ–π—Å–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        web_results = self._perform_web_search(summary)
        extra = self.improve_prompt_from_feedback()
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra} {web_results} \n\n"
            f"–¢—ã ‚Äî —é—Ä–∏—Å—Ç –ø–æ –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º: \n\n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞.\n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞.\n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è –¢–°–ñ/–£–ö ‚Äî –ø–æ—è—Å–Ω–∏, —á—Ç–æ –¢–°–ñ —Å–æ–∑–¥–∞—ë—Ç—Å—è –±–µ—Å—Å—Ä–æ—á–Ω–æ, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–æ —Ä–µ—à–µ–Ω–∏–µ–º —Å–æ–±—Ä–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤. \n\n"
            f"–í—Å–µ–≥–¥–∞ –ø—Ä–∏–≤–æ–¥–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ñ–∏–ª–∏—â–Ω—ã–π –∫–æ–¥–µ–∫—Å –†–§, –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ ‚Ññ354 –∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∞–∫—Ç—ã \n\n"
            f"- –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã: –ñ–∏–ª–∏—â–Ω—ã–π –∫–æ–¥–µ–∫—Å –†–§, –ü–ü –†–§ ‚Ññ354, ‚Ññ491, ‚Ññ416, –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–æ–¥–µ–∫—Å –†–§ \n\n"
            f"- –¶–∏—Ç–∏—Ä—É–π —Å—Ç–∞—Ç—å–∏ –∏ –ø—É–Ω–∫—Ç—ã –¥–æ—Å–ª–æ–≤–Ω–æ. \n"
            f"- –£–∫–∞–∑—ã–≤–∞–π –ø–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§ –æ—Ç 06.05.2011 ‚Ññ354). \n"
            f"- –ù–µ –¥–∞–≤–∞–π —Å–æ–≤–µ—Ç–æ–≤ –±–µ–∑ —Å—Å—ã–ª–æ–∫. \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class TechnicalAgent(RAGAgent):
    def __init__(self):
        super().__init__("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—ã", [
            "—Å–Ω–∏–ø", "–≥–æ—Å—Ç", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "—à—É–º", "–ª–∏—Ñ—Ç", "–¥–∞–≤–ª–µ–Ω–∏–µ", "–Ω–æ—Ä–º–∞",
            "–ø–æ–ª–æ—Ç–µ–Ω—Ü–µ—Å—É—à–∏—Ç–µ–ª—å", "–Ω–µ –≥—Ä–µ–µ—Ç", "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç", "–Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è", "—Ö–æ–ª–æ–¥–Ω—ã–π",
            "—Ç—Ä—É–±–∞", "–±–∞—Ç–∞—Ä–µ—è", "—Ä–∞–¥–∏–∞—Ç–æ—Ä", "—Ü–∏—Ä–∫—É–ª—è—Ü–∏—è", "—Å—Ç–æ—è–∫", "–ø—Ä–æ—Ç–µ—á–∫–∞", "–∑–∞—Å–æ—Ä",
            "–¥–∞–≤–ª–µ–Ω–∏–µ", "–Ω–∞–ø–æ—Ä", "—Å–ª–∞–±—ã–π –Ω–∞–ø–æ—Ä", "–Ω–µ—Ç –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã", "–Ω–µ—Ç —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã",
            "—Ö–æ–ª–æ–¥–Ω–æ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ", "–∂–∞—Ä–∫–æ", "—Å—Ç–æ—è–∫", "–±–∞—Ç–∞—Ä–µ—è", "–≤–æ–∑–¥—É—Ö –≤ –±–∞—Ç–∞—Ä–µ–µ", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã", 
            "–≥—Ä–µ–µ—Ç –ø–ª–æ—Ö–æ", "–∑–∞–º–µ—Ä —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã", "—Å–∞–Ω–ø–∏–Ω", "–Ω–æ—Ä–º–∞ –æ—Ç–æ–ø–ª–µ–Ω–∏—è", "–≥—É–¥–∏—Ç –ª–∏—Ñ—Ç", "—Å–ª–æ–º–∞–ª—Å—è –ª–∏—Ñ—Ç", 
            "—à—É–º –≤ –ø–æ–¥–≤–∞–ª–µ", "–≤–æ–Ω—è–µ—Ç –≤ –ø–æ–¥—ä–µ–∑–¥–µ", "–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–ø–µ—Ä–µ–≥—Ä–µ–≤ –≤–æ–¥—ã", "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è", "—Ç—Ä–µ—Ö—Ç—Ä—É–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", 
            "–¥–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤–≤–æ–¥–µ", "—Ä–µ–≥—Ä–µ—Å—Å –∫ –£–û", "—Ü–∏—Ä–∫—É–ª—è—Ü–∏–æ–Ω–Ω—ã–π –Ω–∞—Å–æ—Å", "–ò–¢–ü", "—Ç–µ–ø–ª–æ–≤–æ–π –ø—É–Ω–∫—Ç", "–≤–æ–∑–¥—É—Ö –≤ —Å–∏—Å—Ç–µ–º–µ", "–∑–∞–≤–æ–∑–¥—É—à–∏–≤–∞–Ω–∏–µ", 
            "–≥–∏–¥—Ä–∞–≤–ª–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä"
        ])

    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra} \n\n"
            f"–¢—ã ‚Äî –∏–Ω–∂–µ–Ω–µ—Ä –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω–æ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ì–æ—Å—Å—Ç—Ä–æ—è –†–§ ‚Ññ170 ¬´–ü—Ä–∞–≤–∏–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ –∂–∏–ª–∏—â–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞¬ª \n"
            f"- –°–ù–∏–ü 2.04.01-85 ‚Äî –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥ –∏ –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è \n"
            f"- –ì–û–°–¢ –† 51617-2000 ‚Äî —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è –Ω–∞ —É—Å–ª—É–≥–∏ –ñ–ö–• \n"
            f"- –°–∞–Ω–ü–∏–ù 2.1.2.2645-10 ‚Äî –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç –≤ –ø–æ–º–µ—â–µ–Ω–∏—è—Ö \n\n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–î–∞–π –ø–æ—à–∞–≥–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º: –µ—Å–ª–∏ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ —Ö–æ–ª–æ–¥–Ω–æ ‚Üí –≤—ã–∑–≤–∞—Ç—å –£–ö, —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∞–∫—Ç, –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å–æ—Å–µ–¥–µ–π –∫–∞–∫ —Å–≤–∏–¥–µ—Ç–µ–ª–µ–π \n\n"
            f"–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –æ–± –ª–∏—Ñ—Ç–µ ‚Äî –Ω–∞–ø–æ–º–Ω–∏, —á—Ç–æ —ç—Ç–æ —á–∞—Å—Ç—å –æ–±—â–µ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞, –∞ –∞–≤–∞—Ä–∏–π–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –∞–∫—Ç–æ–º —Å –£–ö –∏ –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–º \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–∫–ª—é—á–∏ –≤ –æ—Ç–≤–µ—Ç: \n\n"
            f"- –£–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏–π. –ù–∞–ø—Ä–∏–º–µ—Ä: '–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã ‚Äî –Ω–µ –Ω–∏–∂–µ 60¬∞C (–ü–ü –†–§ ‚Ññ354, –ø. 30). –î–æ–ø—É—Å—Ç–∏–º–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏—è ‚Äî ¬±3¬∞C (–ì–û–°–¢ –† 55964-2014).' \n"
            f"- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–æ–±—â–∞–µ—Ç –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏, —É—Ç–æ—á–Ω–∏: '–î–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∏–∑–º–µ—Ä–µ–Ω–∏–µ –≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è –£–ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–±–æ—Ä–∞.' \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ü—Ä–∏–≤–µ–¥–∏ –Ω–æ—Ä–º—ã –∏–∑ –°–ù–∏–ü/–ì–û–°–¢ (—Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ä–∞–∑–¥–µ–ª–æ–≤). \n"
            f"- –£–∫–∞–∂–∏ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –∂–∏–ª–æ–º –ø–æ–º–µ—â–µ–Ω–∏–∏ ‚Äî –Ω–µ –Ω–∏–∂–µ +18¬∞C, –°–∞–Ω–ü–∏–ù 2.1.2.2645-10).\n"
            f"- –ï—Å–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–µ ‚Äî –∫–∞–∫ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å? (–∞–∫—Ç –æ—Å–º–æ—Ç—Ä–∞, —Ñ–æ—Ç–æ, –ø–æ–¥–ø–∏—Å—å –£–ö/–¢–°–ñ) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class MeterAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ü—Ä–∏–±–æ—Ä—ã —É—á—ë—Ç–∞", [
            "—Å—á—ë—Ç—á–∏–∫", "–ø–æ–∫–∞–∑–∞–Ω–∏—è", "–ø—É", "–∏–ø—É", "–æ–¥–ø—É", "–ø–æ–≤–µ—Ä–∫–∞", "–∑–∞–º–µ–Ω–∞", "—Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è",
            "—Å—á—ë—Ç—á–∏–∫", "–æ–ø–ª–æ–º–±–∏—Ä–æ–≤–∫–∞", "–ø–æ–≤–µ—Ä–∫–∞", "–∑–∞–º–µ–Ω–∞ —Å—á—ë—Ç—á–∏–∫–∞", "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫", "–ø–æ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è", 
            "–∫—É–¥–∞ –ø–µ—Ä–µ–¥–∞—Ç—å", "–æ—à–∏–±–∫–∞ –≤ –ø–æ–∫–∞–∑–∞–Ω–∏—è—Ö", "–∫—Ç–æ –¥–æ–ª–∂–µ–Ω –º–µ–Ω—è—Ç—å","–∞–∫—Ç –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è", "–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏", 
            "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å", "–¥–µ–º–æ–Ω—Ç–∞–∂ —Å—á–µ—Ç—á–∏–∫–∞", "–æ–ø–ª–æ–º–±–∏—Ä–æ–≤–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞", "—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —Å—á–µ—Ç—á–∏–∫", "–º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π —Å—á–µ—Ç—á–∏–∫", 
            "–¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞", "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–¥–∞—á–∞", "—Å—Ä–æ–∫ –ø–æ–≤–µ—Ä–∫–∏"
        ])
    
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results}\n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ü–£. –û—Ç–≤–µ—Ç—å –ø–æ—à–∞–≥–æ–≤–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ: \n\n"
            f"- –ü–ü –†–§ ‚Ññ354 (–≥–ª. VII ‚Äî –ø—Ä–∏–±–æ—Ä—ã —É—á–µ—Ç–∞) \n"
            f"- –§–ó ‚Ññ102-–§–ó ¬´–û–± –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–∏ –µ–¥–∏–Ω—Å—Ç–≤–∞ –∏–∑–º–µ—Ä–µ–Ω–∏–π¬ª (–ø–æ–≤–µ—Ä–∫–∞) \n"
            f"- –ü–ü –†–§ ‚Ññ554 ‚Äî –ø—Ä–∞–≤–∏–ª–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ—Å–Ω–∞–±–∂–∞—é—â–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–†–∞–∑—ä—è—Å–Ω–∏, —á—Ç–æ –æ–ø–ª–æ–º–±–∏—Ä–æ–≤–∫–∞ —Å—á—ë—Ç—á–∏–∫–∞ —á–∞—â–µ –≤—Å–µ–≥–æ –±–µ—Å–ø–ª–∞—Ç–Ω–∞, –µ—Å–ª–∏ –∏–Ω–æ–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –≤ –¥–æ–≥–æ–≤–æ—Ä–µ \n\n"
            f"–£–∫–∞–∂–∏, —á—Ç–æ –ø–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è —Ä–∞–∑ –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–µ–∂–ø–æ–≤–µ—Ä–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –∞ –ø—Ä–∏ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫ –æ–±—è–∑–∞–Ω –∑–∞–º–µ–Ω–∏—Ç—å —Å—á—ë—Ç—á–∏–∫ \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É: \nn"
            f"1. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—á–µ—Ç—á–∏–∫–∞, –¢–´ –û–ë–Ø–ó–ê–ù —É—Ç–æ—á–Ω–∏—Ç—å: \n\n"
            f"   - '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–∫—Ç–æ–º –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –£–ö —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å –†–°–û (–ü–ü –†–§ ‚Ññ354, –ø. 81(10)). –ë–µ–∑ —Ç–∞–∫–æ–≥–æ –∞–∫—Ç–∞ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–æ–∑–º–æ–∂–Ω–∞.' \n"
            f"   - '–î–∞–∂–µ –ø—Ä–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å –ø–æ –æ–ø–ª–∞—Ç–µ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è. –†–∞—Å—á–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤—É —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –ø–æ–≤—ã—à–∞—é—â–µ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ 1.5 (–ü–ü –†–§ ‚Ññ354, –ø. 42).' \n\n"
            f"–û—Ç–≤–µ—Ç—å: \n\n"
            f"- –ö–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è? (–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, –ï–ü–î, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –ü–ü –†–§ ‚Ññ354 –ø. 31) \n"
            f"- **–ü–æ—à–∞–≥–æ–≤–æ –æ–±—ä—è—Å–Ω–∏, –∫–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–ª–∞—Ç–∞ –ø—Ä–∏ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –ò–ü–£:** \n"
            f"   1. –ü–µ—Ä–≤—ã–µ 3 —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–∞ ‚Äî –ø–ª–∞—Ç–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏—Å—Ö–æ–¥—è –∏–∑ —Å—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω–æ–≥–æ –æ–±—ä–µ–º–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ –ø–æ–∫–∞–∑–∞–Ω–∏—è–º –ò–ü–£ –∑–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ 6 –º–µ—Å—è—Ü–µ–≤ (–ü–ü –†–§ ‚Ññ354, –ø. 59). \n"
            f"   2. –ù–∞—á–∏–Ω–∞—è —Å 4-–≥–æ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ ‚Äî –ø–ª–∞—Ç–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏—Å—Ö–æ–¥—è –∏–∑ –Ω–æ—Ä–º–∞—Ç–∏–≤–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –ø–æ–≤—ã—à–∞—é—â–µ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ 1.5 (–ü–ü –†–§ ‚Ññ354, –ø. 42, –ø. 81(12)). \n"
            f"   3. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ò–ü–£ –±—É–¥–µ—Ç –æ—Ç—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –∑–∞–º–µ–Ω–µ–Ω, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –∑–∞ –ø–µ—Ä–∏–æ–¥, –∫–æ–≥–¥–∞ —Ä–∞—Å—á–µ—Ç –≤–µ–ª—Å—è –ø–æ —Å—Ä–µ–¥–Ω–µ–º—É/–Ω–æ—Ä–º–∞—Ç–∏–≤—É. \n\n"
            f"- –ö—Ç–æ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø–æ–≤–µ—Ä–∫—É? (—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫ ‚Äî –§–ó ‚Ññ102-–§–ó, —Å—Ç. 13) \n"
            f"- –ö–∞–∫ –æ—Å–ø–æ—Ä–∏—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è –Ω–µ —É—á—Ç–µ–Ω—ã? (–∑–∞—è–≤–ª–µ–Ω–∏–µ + –∞–∫—Ç, –ü–ü –†–§ ‚Ññ354, –ø. 86) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class DebtAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏", [
            "–¥–æ–ª–≥", "–∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å", "–ø–µ–Ω–∏", "–Ω–µ—É–ø–ª–∞—Ç–∞", "–æ–ø–ª–∞—Ç–∞", "—Ä–∞—Å—Å—Ä–æ—á–∫–∞", "–∑–∞–≤—ã—à–µ–Ω–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ",
            "–∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å", "–ø–µ–Ω–∏", "—Ä–∞—Å—Å—Ä–æ—á–∫–∞", "—à—Ç—Ä–∞—Ñ—ã", "—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–≥–∞", "–æ–ø–ª–∞—Ç–∏–ª –Ω–æ –¥–æ–ª–≥", "–ø–æ—á–µ–º—É –¥–æ–ª–≥", 
            "–∫–æ–ª–ª–µ–∫—Ç–æ—Ä—ã", "–≤–∑—ã—Å–∫–∞–Ω–∏–µ", "—Å—É–¥ –∑–∞ –¥–æ–ª–≥", "—Å—É–¥", "–Ω–µ—É—Å—Ç–æ–π–∫–∞", "–º–æ—Ä–∞–ª—å–Ω—ã–π –≤—Ä–µ–¥", "–≤–∑—ã—Å–∫–∞–Ω–∏–µ –¥–æ–ª–≥–∞", "–∏—Å–∫–æ–≤–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ", 
            "–ø—Ä–∏–∫–∞–∑–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ", "–ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥", "–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É—Å–ª—É–≥–∏", "–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–∞ –Ω–µ—É–ø–ª–∞—Ç—É", "–∑–∞–ø—Ä–µ—Ç –Ω–∞ –≤—ã–µ–∑–¥",
            "–∫–ª—é—á–µ–≤–∞—è —Å—Ç–∞–≤–∫–∞", "—Å—Ç–∞–≤–∫–∞ 9.5%", "–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏", "—Å—Ç–∞–≤–∫–∞ —Ü–±", "9.5 –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤", "—Ñ–∑ 44-—Ñ–∑",
            "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ 474", "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ 1681", "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ 2382", "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ 329", "–¥–æ 2027 –≥–æ–¥–∞","–ø–µ–Ω—è"
        ])
    
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        # web_results = self._perform_web_search(summary)  # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra} \n\n"
            f"–¢—ã ‚Äî —é—Ä–∏—Å—Ç –ø–æ –¥–æ–ª–≥–∞–º –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º, –∏—Å–ø–æ–ª—å–∑—É—è –¢–û–õ–¨–ö–û –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É: \n"
            f"1. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **—Ä–∞—Å—á–µ—Ç–∞ –ø–µ–Ω–∏**: \n"
            f"   - **–ù–ï –ò–°–ü–û–õ–¨–ó–£–ô —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Ñ–æ—Ä–º—É–ª—ã. –ù–∞–π–¥–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–∞–º—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –∞–∫—Ç, —Ä–µ–≥—É–ª–∏—Ä—É—é—â–∏–π —Ä–∞–∑–º–µ—Ä –ø–µ–Ω–∏.** \n"
            f"   - **–ü—Ä—è–º–æ —É–∫–∞–∂–∏ –ê–ö–¢–£–ê–õ–¨–ù–£–Æ —Ñ–æ—Ä–º—É–ª—É —Ä–∞—Å—á–µ—Ç–∞ –ø–µ–Ω–∏, –∫–∞–∫ –æ–Ω–∞ –ø—Ä–æ–ø–∏—Å–∞–Ω–∞ –≤ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –∞–∫—Ç–µ.** \n"
            f"   - **–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—è—Å–Ω–∏, —á—Ç–æ —Ç–∞–∫–æ–µ '–ü—Ä–∏–º–µ–Ω—è–µ–º–∞—è —Å—Ç–∞–≤–∫–∞' –∏ —É–∫–∞–∂–∏ –µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É, —Å—Å—ã–ª–∞—è—Å—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –∞–∫—Ç.** \n"
            f"2. –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–æ–ª–≥—É, –¢–´ –û–ë–Ø–ó–ê–ù –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏. \n"
            f"   - –ù–∞–ø–æ–º–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: '–°—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏ –ø–æ –¥–æ–ª–≥–∞–º –ñ–ö–• —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 3 –≥–æ–¥–∞ (—Å—Ç. 196 –ì–ö –†–§). –ï—Å–ª–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –∏–ª–∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –¥–æ–ª–≥–∞ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 3 –ª–µ—Ç, –¥–æ–ª–≥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Å–ø–æ—Ä–µ–Ω –≤ —Å—É–¥–µ.' \n"
            f"   - –£—Ç–æ—á–Ω–∏: '–°—Ä–æ–∫ –¥–∞–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –∑–∞—è–≤–ª–µ–Ω–∏—é –¥–æ–ª–∂–Ω–∏–∫–∞. –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞—è–≤–∏–ª–∏ –æ –ø—Ä–æ–ø—É—Å–∫–µ —Å—Ä–æ–∫–∞ –≤ —Å—É–¥–µ, –¥–æ–ª–≥ –ø–æ–¥–ª–µ–∂–∏—Ç –≤–∑—ã—Å–∫–∞–Ω–∏—é.' \n\n"
            f"3. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏ 9,5%** –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –ø–µ–Ω–µ–π –∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –§–ó ‚Ññ44-–§–ó –∏–ª–∏ –ü–ü –†–§ ‚Ññ474: \n"
            f"   - –ù–∞—á–Ω–∏ —Å: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–µ–Ω–µ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º –æ—Ç 08.03.2015 ‚Ññ 44-–§–ó –∏ –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§ –æ—Ç 26.03.2022 ‚Ññ474 (—Å –ø—Ä–æ–¥–ª–µ–Ω–∏—è–º–∏).' \n"
            f"   - –ü–æ—è—Å–Ω–∏: '–°–æ–≥–ª–∞—Å–Ω–æ —ç—Ç–∏–º –∞–∫—Ç–∞–º, –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–µ–Ω–µ–π –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—â–µ–µ 9,5% –≥–æ–¥–æ–≤—ã—Ö, –¥–æ 1 —è–Ω–≤–∞—Ä—è 2027 –≥–æ–¥–∞.' \n\n"
            f"–û—Ç–≤–µ—Ç—å: \n"
            f"- –ö–∞–∫ —Å–ø–∏—Å–∞—Ç—å –¥–æ–ª–≥? (–ø–æ —Ä–µ—à–µ–Ω–∏—é —Å—É–¥–∞, –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ, –∏—Å—Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –¥–∞–≤–Ω–æ—Å—Ç–∏) \n"
            f"- –†–∞–∑–º–µ—Ä –ø–µ–Ω–∏? (—É–∫–∞–∂–∏ –ê–ö–¢–£–ê–õ–¨–ù–£–Æ —Ñ–æ—Ä–º—É–ª—É –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –ø–æ—è—Å–Ω–∏ –ø—Ä–∏–º–µ–Ω—è–µ–º—É—é —Å—Ç–∞–≤–∫—É) \n"
            f"- –°—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏? (3 –≥–æ–¥–∞, —Å—Ç. 196 –ì–ö –†–§) \n"
            f"- –ö–∞–∫ –æ—Å–ø–æ—Ä–∏—Ç—å –∑–∞–≤—ã—à–µ–Ω–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ? (–ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç –ø–æ –∞–∫—Ç—É, –ü–ü –†–§ ‚Ññ354 –ø. 106) \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class DisclosureAgent(RAGAgent):
    def __init__(self):
        super().__init__("–†–∞—Å–∫—Ä—ã—Ç–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", [
            "—Ä–∞—Å–∫—Ä—ã—Ç–∏–µ", "–≥–∏—Å –∂–∫—Ö", "–æ—Ç—á—ë—Ç", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–¥–æ—Å—Ç—É–ø", "–ø—É–±–ª–∏—á–Ω—ã–π",
            "–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", "—Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Å—Ç–µ–Ω–¥","–≥–∏—Å –∂–∫—Ö", "–æ—Ç—á—ë—Ç –£–ö", 
            "—Ä–∞—Å–∫—Ä—ã—Ç–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", "–ø—Ä–æ—Ç–æ–∫–æ–ª—ã —Å–æ–±—Ä–∞–Ω–∏–π", "–≥–¥–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á—ë—Ç", "–ø–ª–∞–Ω —Ä–∞–±–æ—Ç", "—Å–º–µ—Ç–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤",
            "–Ω–µ –ø—É–±–ª–∏–∫—É—é—Ç –æ—Ç—á–µ—Ç—ã", "–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ì–ò–° –ñ–ö–•", "–Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã", "–æ—Ç–∫–∞–∑ –≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
            "–¥–æ—Å—Ç—É–ø –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º", "–∫–æ–ø–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞", "–ø—Ä–æ—Ç–æ–∫–æ–ª —Å–æ–±—Ä–∞–Ω–∏—è", "—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç", "–±—é–¥–∂–µ—Ç –¥–æ–º–∞",
            "–∑–∞–≥—Ä—É–∂–∞—Ç—å", "–≥—Ä—É–∑–∏—Ç—å", "–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", "—Ä–∞–∑–º–µ—â–∞—Ç—å", "—Å—Ä–æ–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏", "—Å—Ä–æ–∫–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è", "–æ–±–Ω–æ–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", 
            "–∫–æ–≥–¥–∞ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", "–∫–æ–≥–¥–∞ —Ä–∞–∑–º–µ—â–∞—Ç—å", "–∑–∞–≥—Ä—É–∑–∏—Ç—å", "–≥—Ä—É–∑–∏—Ç—å", "—Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å", "–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", "–æ–±–Ω–æ–≤–∏—Ç—å",
            "–∫–æ–≥–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ –≥–∏—Å –∂–∫—Ö", "–ø–æ—á–µ–º—É –≤ –≥–∏—Å –∂–∫—Ö –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö", "—Å—Ä–æ–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –≥–∏—Å –∂–∫—Ö"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –û—Ç–≤–µ—Ç—å –ø–æ: \n\n"
            f"- –§–ó ‚Ññ209-–§–ó ¬´–û —Ä–∞—Å–∫—Ä—ã—Ç–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ñ–ö–•¬ª \n"
            f"- –ü–ü –†–§ ‚Ññ731 ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ \n"
            f"- –ü—Ä–∏–∫–∞–∑ –ú–∏–Ω—Å—Ç—Ä–æ—è –†–§ ‚Ññ48/414 ‚Äî —Ñ–æ—Ä–º–∞ –æ—Ç—á—ë—Ç–æ–≤ \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–±—ä—è—Å–Ω–∏, —á—Ç–æ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –£–ö –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ì–ò–° –ñ–ö–• –∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç –ø–æ —Ç–∏–ø–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —É–∫–∞–∂–∏ —Ç–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏: \n\n"
            f"- –û—Ç—á–µ—Ç –æ–± –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π –¥–æ–≥–æ–≤–æ—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 10 —á–∏—Å–ª–∞ –º–µ—Å—è—Ü–∞, —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞ –æ—Ç—á–µ—Ç–Ω—ã–º (–ü–ü –†–§ ‚Ññ731, –ø. 10). \n"
            f"- –°–≤–µ–¥–µ–Ω–∏—è –æ –≤—ã–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ä–∞–±–æ—Ç–∞—Ö –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –∏ —Ä–µ–º–æ–Ω—Ç—É –æ–±—â–µ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞: –µ–∂–µ–º–µ—Å—è—á–Ω–æ, –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 10 —á–∏—Å–ª–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞ (–ü–ü –†–§ ‚Ññ731, –ø. 11). \n"
            f"- –°–≤–µ–¥–µ–Ω–∏—è –æ —Ü–µ–Ω–∞—Ö (—Ç–∞—Ä–∏—Ñ–∞—Ö) –Ω–∞ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã: –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –∏—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è (–ü–ü –†–§ ‚Ññ731, –ø. 13). \n\n"
            f"–û—Ç–≤–µ—Ç—å: \n\n"
            f"- –ì–¥–µ –Ω–∞–π—Ç–∏ –æ—Ç—á—ë—Ç? (–ì–ò–° –ñ–ö–• ‚Üí —Ä–∞–∑–¥–µ–ª ¬´–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è¬ª ‚Üí ¬´–û—Ç—á—ë—Ç—ã¬ª) \n"
            f"- –°—Ä–æ–∫–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è? (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ 10 —á–∏—Å–ª–∞ –º–µ—Å—è—Ü–∞, —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞ –æ—Ç—á—ë—Ç–Ω—ã–º ‚Äî –ü–ü –†–§ ‚Ññ731) \n"
            f"- –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ —Ä–∞–∑–º–µ—â–µ–Ω–∞? (–∂–∞–ª–æ–±–∞ –≤ –ì–ñ–ò, —á–µ—Ä–µ–∑ –ì–ò–° –ñ–ö–• –∏–ª–∏ –§–ó ‚Ññ59-–§–ó) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class IoTAgent(RAGAgent):
    def __init__(self):
        super().__init__("IoT –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", [
            "–¥–∞—Ç—á–∏–∫", "—É—Ç–µ—á–∫–∞", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "iot", "—É–º–Ω—ã–π", "–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", "–∞–≤–∞—Ä–∏—è","–¥–∞—Ç—á–∏–∫ –ø—Ä–æ—Ç–µ—á–∫–∏", "–¥–∞—Ç—á–∏–∫ –∑–∞–¥—ã–º–ª–µ–Ω–∏—è", 
            "—É–º–Ω—ã–π —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç", "—É–º–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –≤–æ–¥—ã", "—É–º–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ —Ç–µ–ø–ª–∞", "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —É–º–Ω—ã–º –¥–æ–º–æ–º", "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º", 
            "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ whatsapp", "API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏", "–≤–µ–±—Ö—É–∫–∏"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî –∏–Ω–∂–µ–Ω–µ—Ä IoT –≤ –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –ø–æ: \n\n"
            f"- –§–ó ‚Ññ152-–§–ó ¬´–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö¬ª (–µ—Å–ª–∏ —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å –∂–∏–ª—å—Ü–æ–≤) \n"
            f"- –§–ó ‚Ññ187-–§–ó ¬´–û –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã¬ª \n"
            f"- –ì–û–°–¢ –† 57580 ‚Äî —Å–∏—Å—Ç–µ–º—ã —É–º–Ω–æ–≥–æ –¥–æ–º–∞ \n"
            f"- –†–µ–≥–ª–∞–º–µ–Ω—Ç—ã –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ê–°–£ –¢–ü \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û—Ç–≤–µ—Ç—å: \n\n"
            f"- –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞—Ç—á–∏–∫? (–º–æ–¥–µ–ª—å, –ø—Ä–æ—Ç–æ–∫–æ–ª —Å–≤—è–∑–∏ ‚Äî Zigbee, LoRaWAN, MQTT) \n"
            f"- –ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏? (–∞–ª–≥–æ—Ä–∏—Ç–º: –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ ‚Üí –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è ‚Üí –≤—ã–∑–æ–≤ –±—Ä–∏–≥–∞–¥—ã) \n"
            f"- –ö—É–¥–∞ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–∏–≥–Ω–∞–ª? (–≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä, –≤ –ì–ò–° –ñ–ö–•, –≤ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –£–ö) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class MeetingAgent(RAGAgent):
    def __init__(self):
        super().__init__("–û–±—â–∏–µ —Å–æ–±—Ä–∞–Ω–∏—è", [
            "—Å–æ–±—Ä–∞–Ω–∏–µ", "–æ—Å—Å", "–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", "—Ä–µ—à–µ–Ω–∏–µ", "–ø—Ä–æ—Ç–æ–∫–æ–ª", "–∫–≤–æ—Ä—É–º","–∞–∫—Ç –ø—Ä–∏—ë–º–∫–∏", 
            "–ø–æ–¥–ø–∏—Å–∞—Ç—å –∞–∫—Ç", "–ø—Ä–∏—ë–º–∫–∞ —Ä–∞–±–æ—Ç", "—Å–æ–≤–µ—Ç –¥–æ–º–∞", "–ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å —Å–æ–≤–µ—Ç–∞", "—Å–¥–∞—á–∞ –æ–±—ä–µ–∫—Ç–∞", 
            "–≤–≤–æ–¥ –≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é", "–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è","—Å–æ–±—Ä–∞–Ω–∏–µ", "–ø—Ä–æ—Ç–æ–∫–æ–ª", "–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", "–∫–≤–æ—Ä—É–º", 
            "–ø–æ–≤–µ—Å—Ç–∫–∞", "–∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä —Å–æ–±—Ä–∞–Ω–∏—è", "–∫–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–æ–±—Ä–∞–Ω–∏–µ", "–¢–°–ñ", "–Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ", "–Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã", 
            "–æ—Å–ø–∞—Ä–∏–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è", "–∂–∞–ª–æ–±–∞ –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ", "–ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ", "–∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä —Å–æ–±—Ä–∞–Ω–∏—è", "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤", 
            "—Ñ–æ—Ä–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", "–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –ì–ò–° –ñ–ö–•"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –û–°–°. –û—Ç–≤–µ—Ç—å –ø–æ –ñ–ö –†–§ –∏ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–º –∞–∫—Ç–∞–º: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –ñ–∏–ª–∏—â–Ω—ã–π –∫–æ–¥–µ–∫—Å –†–§, –≥–ª–∞–≤–∞ 6 \n"
            f"- –ü–ü –†–§ ‚Ññ416 ‚Äî –ø—Ä–∞–≤–∏–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ú–ö–î \n"
            f"- –§–ó ‚Ññ217-–§–ó ‚Äî –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –û–°–° –≤ –°–ù–¢ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ) \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–î–æ–±–∞–≤—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: —á—Ç–æ–±—ã –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ, –Ω—É–∂–Ω–æ —É–≤–µ–¥–æ–º–∏—Ç—å –≤—Å–µ—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –Ω–µ –º–µ–Ω–µ–µ —á–µ–º –∑–∞ 10 –¥–Ω–µ–π \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É: \n\n"
            f"1. –ü—Ä–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏ –ª—é–±–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –æ–±—â–µ–≥–æ —Å–æ–±—Ä–∞–Ω–∏—è, –¢–´ –û–ë–Ø–ó–ê–ù —É—Ç–æ—á–Ω–∏—Ç—å: \n\n"
            f"   - '–†–µ—à–µ–Ω–∏–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–∏–Ω—è—Ç—ã–º, –µ—Å–ª–∏ –∑–∞ –Ω–µ–≥–æ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ –±–æ–ª–µ–µ 50% –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –≥–æ–ª–æ—Å–æ–≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –≤ –ú–ö–î (—Å—Ç. 46 –ñ–ö –†–§).' \n"
            f"   - '–ï—Å–ª–∏ –∫–≤–æ—Ä—É–º –Ω–µ –±—ã–ª –¥–æ—Å—Ç–∏–≥–Ω—É—Ç, —Ä–µ—à–µ–Ω–∏–µ –Ω–µ –∏–º–µ–µ—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —Å–∏–ª—ã –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Å–ø–æ—Ä–µ–Ω–æ –≤ —Å—É–¥–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤ (—Å—Ç. 46 –ñ–ö –†–§).' \n\n"
            f"–û—Ç–≤–µ—Ç—å: \n\n"
            f"- –ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–æ–±—Ä–∞–Ω–∏–µ –æ–Ω–ª–∞–π–Ω? (—Å—Ç. 47.1 –ñ–ö –†–§ ‚Äî —á–µ—Ä–µ–∑ –ì–ò–° –ñ–ö–• –∏–ª–∏ –∏–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã) \n"
            f"- –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–≤–æ—Ä—É–º? (—Å—Ç. 48 –ñ–ö –†–§ ‚Äî –±–æ–ª–µ–µ 50% –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –≥–æ–ª–æ—Å–æ–≤) \n"
            f"- –°—Ä–æ–∫ –æ—Å–ø–∞—Ä–∏–≤–∞–Ω–∏—è —Ä–µ—à–µ–Ω–∏—è? (6 –º–µ—Å—è—Ü–µ–≤ —Å–æ –¥–Ω—è, –∫–æ–≥–¥–∞ —É–∑–Ω–∞–ª ‚Äî —Å—Ç. 46 –ñ–ö –†–§) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class CapitalRepairAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç", [
            "–∫–∞–ø—Ä–µ–º–æ–Ω—Ç", "–∫–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç", "–æ—Ç–∫–∞–ø–∏—Ç–∞–ª–∏—Ç—å", "—Å–ø–µ—Ü—Å—á–µ—Ç", "—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—á–µ—Ç", "—Ñ–æ–Ω–¥",
            "–ø—Ä–æ–≥—Ä–∞–º–º–∞ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞", "–ø—Ä–æ–≥—Ä–∞–º–º–∞ –∫–∞–ø–∏—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞", "—ç–ª–µ–∫—Ç—Ä–∏–∫–∞", "—ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∞",
            "—ç–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ", "–∫—Ä—ã—à–∞", "–ª–∏—Ñ—Ç", "—Ñ–∞—Å–∞–¥", "—Ç—Ä—É–±–∞", "–∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏", "–ø–æ–¥–≤–∞–ª",
            "–ø–æ–∂–∞—Ä–Ω–∞—è —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è", "–≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è", "–æ—Ç–æ–ø–ª–µ–Ω–∏–µ", "—Ö–æ–ª–æ–¥–Ω–æ–µ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ",
            "–≥–æ—Ä—è—á–µ–µ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ", "–≤—ã–≤–æ–¥ –∏–∑ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏", "–≤–≤–æ–¥ –≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é", "–ø–æ–¥—Ä—è–¥—á–∏–∫ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞",
            "–Ω–∞–¥–ø–∏—Å—å –Ω–∞ —Ñ–∞—Å–∞–¥–µ", "–≤–∞–Ω–¥–∞–ª–∏–∑–º", "–≥—Ä–∞—Ñ—Ñ–∏—Ç–∏", "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∞—Å–∞–¥", "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–µ–Ω—É",
            "–æ—á–∏—Å—Ç–∏—Ç—å —Ñ–∞—Å–∞–¥", "—Ä–µ–º–æ–Ω—Ç —Ñ–∞—Å–∞–¥–∞", "–≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –¥–æ–º–∞", "—Ä–µ–∫–ª–∞–º–∞ –Ω–∞ —Ñ–∞—Å–∞–¥–µ", "–∑–∞–∫–∞–∑—á–∏–∫ —Ä–∞–±–æ—Ç", 
            "—Å—Ç–∞—Ä—à–∏–π –ø–æ –¥–æ–º—É", "—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—á—ë—Ç",
            "–∫–∞–ø—Ä–µ–º–æ–Ω—Ç", "—Å–ø–µ—Ü—Å—á—ë—Ç", "—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä", "–≤–∑–Ω–æ—Å—ã", "–ø–æ–º–µ–Ω—è–ª–∏ —Å—Ä–æ–∫–∏", "–ø–ª–∞—Ç–∏—Ç—å –∑–∞ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç", "—Ñ–æ–Ω–¥ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞",
            "—Å–º–µ—Ç–∞ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞", "–æ—Ç—á–µ—Ç –æ —Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤", "–≤—ã–±–æ—Ä –ø–æ–¥—Ä—è–¥—á–∏–∫–∞", "–ø—Ä–∏–µ–º–∫–∞ —Ä–∞–±–æ—Ç –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞", "–∞–∫—Ç –ø—Ä–∏–µ–º–∫–∏ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞",
            "–ø–µ—Ä–µ–Ω–æ—Å —Å—Ä–æ–∫–æ–≤ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞", "–∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ—á–Ω—è —Ä–∞–±–æ—Ç", "—Ñ–æ–Ω–¥ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞", "—Å–ø–µ—Ü—Å—á–µ—Ç –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞", "—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç—É. –û—Ç–≤–µ—Ç—å –ø–æ: \n\n"
            f"- –ñ–ö –†–§, –≥–ª–∞–≤–∞ 9 (—Å—Ç. 166-180) \n"
            f"- –§–ó ‚Ññ271-–§–ó ¬´–û –∫–∞–ø–∏—Ç–∞–ª—å–Ω–æ–º —Ä–µ–º–æ–Ω—Ç–µ‚Ä¶¬ª \n"
            f"- –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞ (–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç —Ä–µ–≥–∏–æ–Ω–∞) \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–†–∞–∑—ä—è—Å–Ω–∏, —á—Ç–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –º–æ–≥—É—Ç –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–µ—Ü—Å—á—ë—Ç –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –Ω–∞—á–Ω–∏ –æ—Ç–≤–µ—Ç —Å —É—Ç–æ—á–Ω–µ–Ω–∏—è: \n\n"
            f"–í–∞–∂–Ω–æ —Ä–∞–∑–ª–∏—á–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–º–æ–Ω—Ç –∏ –∫–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç. \n\n"
            f"- –¢–µ–∫—É—â–∏–π —Ä–µ–º–æ–Ω—Ç ‚Äî —ç—Ç–æ —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—é –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–∑–Ω–æ—Å–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—é —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ (–ü–ü –†–§ ‚Ññ491, –ø. 2.3.1). –ï–≥–æ –ø—Ä–æ–≤–æ–¥–∏—Ç –∏ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –£–ö –∑–∞ —Å—á–µ—Ç –ø–ª–∞—Ç—ã –∑–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∂–∏–ª—å—è. \n"
            f"- –ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç ‚Äî —ç—Ç–æ –∑–∞–º–µ–Ω–∞ –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–µ—Ç–µ–π (–§–ó ‚Ññ271-–§–ó, —Å—Ç. 2). –ï–≥–æ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –∑–∞ —Å—á–µ—Ç –≤–∑–Ω–æ—Å–æ–≤ –Ω–∞ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç.' \n\n"
            f"–û—Ç–≤–µ—Ç—å: \n\n"
            f"- –ö–æ–≥–¥–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω —Ä–µ–º–æ–Ω—Ç? (–≥–æ–¥, —ç—Ç–∞–ø ‚Äî —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ) \n"
            f"- –ö–∞–∫–∏–µ —Ä–∞–±–æ—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã? (–ø–µ—Ä–µ—á–µ–Ω—å –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: –∫—Ä—ã—à–∞, —Ñ–∞—Å–∞–¥, –ª–∏—Ñ—Ç, –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏) \n"
            f"- –ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—Ä–æ–∫? (–¥–∞, –ø–æ —Ä–µ—à–µ–Ω–∏—é –û–°–° ‚Äî —Å—Ç. 168 –ñ–ö –†–§, —Å —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Å –§–æ–Ω–¥–æ–º –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class EmergencyAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ê–≤–∞—Ä–∏–∏ –∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã", [
            "–∞–≤–∞—Ä–∏—è", "–æ—Ç–∫–ª—é—á–∏–ª–∏", "–ø—Ä–æ—Ä—ã–≤", "–∑–∞—Ç–æ–ø–∏–ª–æ", "–Ω–µ—Ç –≤–æ–¥—ã", "–Ω–µ—Ç —Å–≤–µ—Ç–∞",
            "–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "—É–≥—Ä–æ–∑–∞", "–∫–∞–º–µ–Ω—å", "–ø–∞–¥–µ–Ω–∏–µ", "—Å—Ä–æ—á–Ω–æ", "–ß–ü", "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
            "—à–æ–≤", "—Å—Ç–µ–Ω–∞", "—Ñ–∞—Å–∞–¥", "–æ–±—Ä—É—à–µ–Ω–∏–µ", "—Ç—Ä–∞–≥–µ–¥–∏—è", "—É–±–µ—Ä–∏—Ç–µ", "–≤—ã–∑–æ–≤",
            "–≥—Ä–æ–∑–∏—Ç", "–∞–≤–∞—Ä–∏–π–Ω—ã–π", "–Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ", "—Ä–∏—Å–∫", "—Ç—Ä–∞–≤–º–∞", "—Å–º–µ—Ä—Ç—å",
            "–≥–æ—Ä—è—á–∞—è –≤–æ–¥–∞", "—Ö–æ–ª–æ–¥–Ω–∞—è –≤–æ–¥–∞", "–æ—Ç–æ–ø–ª–µ–Ω–∏–µ", "—Ç–µ–ø–ª–æ—Ç—Ä–∞—Å—Å–∞", "–¶–¢–ü", "–±–æ–π–ª–µ—Ä",
            "–∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è", "—Å—Ç–æ–∫–∏", "—Å–ª–∏–≤", "–∑–∞–ø–∞—Ö –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏–∏", "–æ—Ç–∫–∞—á–∫–∞", "–ø–æ–¥–≤–∞–ª –∑–∞—Ç–æ–ø–ª–µ–Ω", "—Ç–µ—á—å –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
            "—Ä–∞–¥–∏–∞—Ç–æ—Ä", "–±–∞—Ç–∞—Ä–µ—è", "–Ω–µ –≥—Ä–µ–µ—Ç", "—Ö–æ–ª–æ–¥–Ω–æ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ", "–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ç–µ–ø–ª–∞", "—Ç—Ä–µ–±—É—é –∑–∞–º–µ–Ω—ã",
            "–ø–µ—Ä–µ–±–æ–∏", "–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –ø–µ—Ä–µ–±–æ–∏", "–±–µ–∑ –≤–æ–¥—ã", "–Ω–µ—Ç –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã", "–ø–æ–ª–æ—Ç–µ–Ω—Ü–µ—Å—É—à–∏—Ç–µ–ª—å —Ö–æ–ª–æ–¥–Ω—ã–π", 
            "–µ–∂–µ–º–µ—Å—è—á–Ω–æ –æ–ø–ª–∞—á–∏–≤–∞–µ–º", "–ø–æ —Ñ–∞–∫—Ç—É –±–µ–∑ –≤–æ–¥—ã", "—è–º–∞", "—Ä–∞—Å–∫–æ–ø–∞–ª–∏", "–º–∞–≥–∏—Å—Ç—Ä–∞–ª—å–Ω–∞—è —Ç—Ä—É–±–∞", "–ø–∞—Ä–∞–º–µ—Ç—Ä—ã", 
            "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã", "–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", "—Ç–µ–ª–µ—Ñ–æ–Ω–æ–≥—Ä–∞–º–º–∞", "–∑–∞—Ç–æ–ø–∏–ª–∏ —Å–æ—Å–µ–¥–∏", "–∑–∞–ª–∏–ª–æ —Å–≤–µ—Ä—Ö—É", "–ø—Ä–æ—Ç–µ—á–∫–∞ –æ—Ç —Å–æ—Å–µ–¥–µ–π", 
            "–∞–∫—Ç –æ –∑–∞–ª–∏–≤–µ", "–≤–æ–∑–º–µ—â–µ–Ω–∏–µ —É—â–µ—Ä–±–∞", "–∫–æ–º–∏—Å—Å–∞—Ä","–∑–∞—Ç–æ–ø–∏–ª–æ", "–∑–∞–ª–∏–ª–∏ —Å–æ—Å–µ–¥–∏", "–ø—Ä–æ—Ä–≤–∞–ª–æ —Ç—Ä—É–±—É", "—Å–ª–æ–º–∞–ª—Å—è —Å—Ç–æ—è–∫", "–ø–æ–∂–∞—Ä", 
            "–∞–≤–∞—Ä–∏–π–∫–∞", "–≤—ã–∑–≤–∞—Ç—å –∞–≤–∞—Ä–∏–π–∫—É", "–∫—É–¥–∞ –∑–≤–æ–Ω–∏—Ç—å", "–∞–≤–∞—Ä–∏–π–Ω–∞—è —Å–ª—É–∂–±–∞","–≤–æ–∑–º–µ—Å—Ç–∏—Ç—å —É—â–µ—Ä–±", "—Ç—Ä–µ–±—É—é –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏", "–ø–æ–¥–∞—Ç—å –≤ —Å—É–¥ –∑–∞ –∑–∞–ª–∏–≤", 
            "–æ—Ü–µ–Ω–∫–∞ —É—â–µ—Ä–±–∞", "–Ω–µ–∑–∞–≤–∏—Å–∏–º–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞", "–∏—Å–ø–æ—Ä—Ç–∏–ª–∞—Å—å –º–µ–±–µ–ª—å", "–æ—Ç–æ—à–ª–∞ –æ–±–æ–∏", "–ø–ª–µ—Å–µ–Ω—å –ø–æ—Å–ª–µ –∑–∞–ª–∏–≤–∞", "–∫–æ—Ä–æ—Ç–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ",
            "–≤–Ω—É—Ç—Ä–∏–¥–æ–º–æ–≤–∞—è —Å–µ—Ç—å", "–≤–≤–æ–¥ –≤ –∫–≤–∞—Ä—Ç–∏—Ä—É", "–º–∞–≥–∏—Å—Ç—Ä–∞–ª—å–Ω—ã–π —Å—Ç–æ—è–∫"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∞–≤–∞—Ä–∏–π–Ω–æ–π —Å–ª—É–∂–±—ã. –û—Ç–≤–µ—Ç—å –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ: \n\n"
            f"- –ü–ü –†–§ ‚Ññ416 (–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –ê–î–° —Ä–∞–±–æ—Ç–∞—Ç—å 24/7) \n"
            f"- –ü–ü –†–§ ‚Ññ354 (–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–≤–∞—Ä–∏–∏, —Å—Ä–æ–∫–∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è) \n"
            f"- –ü—Ä–∞–≤–∏–ª–∞ ‚Ññ170 (—Å—Ä–æ–∫–∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥–µ—Ñ–µ–∫—Ç–æ–≤) \n"
            f"- –§–ó ‚Ññ68-–§–ó ‚Äî –ø—Ä–∏ —É–≥—Ä–æ–∑–µ –ß–° \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞.\n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞.\n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª.\n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª \n\n."
            f"–î–∞–π –∞–ª–≥–æ—Ä–∏—Ç–º: –ø—Ä–∏ –∑–∞—Ç–æ–ø–ª–µ–Ω–∏–∏ ‚Üí –≤—ã–∑–≤–∞—Ç—å –∞–≤–∞—Ä–∏–π–Ω—É—é —Å–ª—É–∂–±—É, —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∞–∫—Ç, —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ —Å—É–¥ –æ –≤–æ–∑–º–µ—â–µ–Ω–∏–∏ \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏: \n\n"
            f"1. –û–ø—Ä–µ–¥–µ–ª–∏ –∏ –Ø–í–ù–û —É–∫–∞–∂–∏ –≤ –ø–µ—Ä–≤–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞: '–î–∞–Ω–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è [–∞–≤–∞—Ä–∏–µ–π / –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–º–º—É–Ω–∞–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏]'. \n\n"
            f"   - –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∞–≤–∞—Ä–∏–∏: –≤–Ω–µ–∑–∞–ø–Ω–æ–µ, –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ, —Å–æ–∑–¥–∞—é—â–µ–µ —É–≥—Ä–æ–∑—É –∂–∏–∑–Ω–∏, –∑–¥–æ—Ä–æ–≤—å—é –∏–ª–∏ –∏–º—É—â–µ—Å—Ç–≤—É (–ø—Ä–æ—Ä—ã–≤ —Ç—Ä—É–±—ã, –æ–±—Ä—É—à–µ–Ω–∏–µ, –ø–æ–∂–∞—Ä). \n"
            f"   - –ö—Ä–∏—Ç–µ—Ä–∏–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞: —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–ª–∏ —Ä–∞–∑–æ–≤–æ–µ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —É—Å–ª—É–≥–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º (–Ω–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, —Å–ª–∞–±—ã–π –Ω–∞–ø–æ—Ä). \n"
            f"   - –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: –ü–ü –†–§ ‚Ññ354, –ø. 2, –ø. 98. \n\n"
            f"2. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∑–æ–Ω–µ –†–°–û: \n\n"
            f"   - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –†–°–û (—Ç–µ–ª–µ—Ñ–æ–Ω, —Å–∞–π—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ). \n"
            f"   - –ü–æ—è—Å–Ω–∏, —á—Ç–æ –£–ö –Ω–∞–ø—Ä–∞–≤–∏–ª–∞ –∏–º –∑–∞–ø—Ä–æ—Å (—Ç–µ–ª–µ—Ñ–æ–Ω–æ–≥—Ä–∞–º–º—É) –∏ –∂–¥—ë—Ç –æ—Ç–≤–µ—Ç–∞. \n"
            f"   - –£–∫–∞–∂–∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–π —Å—Ä–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω –∏–∑–≤–µ—Å—Ç–µ–Ω –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. \n\n"
            f"3. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∑–æ–Ω–µ –£–ö: \n\n"
            f"   - –£–∫–∞–∂–∏ —Å—Ä–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∑–∞—Å–æ—Ä ‚Äî 2 —á–∞—Å–∞, –æ—Ç–æ–ø–ª–µ–Ω–∏–µ ‚Äî 1 —Å—É—Ç–∫–∏ ‚Äî –ü—Ä–∞–≤–∏–ª–∞ ‚Ññ170). \n"
            f"   - –£–∫–∞–∂–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –ê–î–° –£–ö –¥–ª—è —Å—Ä–æ—á–Ω–æ–π —Å–≤—è–∑–∏: 347-00-01. \n\n"
            f"   - –ï—Å–ª–∏ —ç—Ç–æ **–∑–∞—Ç–æ–ø–ª–µ–Ω–∏–µ –æ—Ç —Å–æ—Å–µ–¥–µ–π**: \n\n"
            f"       *   –£–∫–∞–∂–∏: '–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–≤–æ–Ω–∏—Ç–µ –≤ –ê–î–° –£–ö: 347-00-01. –ù–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.' \n"
            f"       *   –û–±—ä—è—Å–Ω–∏: '–ê–≤–∞—Ä–∏–π–Ω—ã–π –∫–æ–º–∏—Å—Å–∞—Ä —Å–æ—Å—Ç–∞–≤–∏—Ç –∞–∫—Ç –æ –∑–∞–ª–∏–≤–µ, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º –¥–ª—è –≤–æ–∑–º–µ—â–µ–Ω–∏—è —É—â–µ—Ä–±–∞.' \n"
            f"       *   –î–æ–±–∞–≤—å: '–ê–∫—Ç –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∏—Å—Å–∏–µ–π –≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–µ–≥–æ –∏ –≤–∏–Ω–æ–≤–Ω–∏–∫–∞ (–µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω).' \n"
            f"4. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –æ–±—â–∏–µ —Ñ—Ä–∞–∑—ã –≤—Ä–æ–¥–µ '–º—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è'. –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫—É. \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class ContractorAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ü–æ–¥—Ä—è–¥—á–∏–∫–∏ –∏ –º–∞—Å—Ç–µ—Ä–∞", [
            "–ø–æ–¥—Ä—è–¥—á–∏–∫", "–º–∞—Å—Ç–µ—Ä", "–≤—ã–∑–æ–≤", "—Ä–µ–π—Ç–∏–Ω–≥", "–¥–æ–≥–æ–≤–æ—Ä", "—É—Å–ª—É–≥–∞",
            "—É–±–µ—Ä–∏—Ç–µ", "—É—Å—Ç—Ä–∞–Ω–∏—Ç–µ", "–ø—Ä–æ–±–ª–µ–º–∞", "–Ω–µ —Ä–µ—à–µ–Ω–∞", "–æ–±—Ä–∞—â–∞–ª–∏—Å—å", "—Ç–µ–ª–µ—Ñ–æ–Ω",
            "—Ñ–æ—Ç–æ", "–≤–ª–æ–∂–µ–Ω–∏–∏", "–ø–æ–¥—ä–µ–∑–¥", "–¥–æ–º", "–∞–¥—Ä–µ—Å", "—Å—Ç–µ–Ω–∞", "—à–æ–≤", "—Ñ–∞—Å–∞–¥",
            "—Ä–µ–º–æ–Ω—Ç", "—Å—Ä–æ—á–Ω—ã–π", "–≤—ã–∑–æ–≤–∏—Ç–µ", "–æ—Ç–ø—Ä–∞–≤—å—Ç–µ", "–±—Ä–∏–≥–∞–¥—É",
            "–∫–æ–≥–¥–∞", "—Å—Ä–æ–∫", "–ø–ª–∞–Ω", "–≥—Ä–∞—Ñ–∏–∫", "–¥–µ—Ä–∞—Ç–∏–∑–∞—Ü–∏—è", "–∫–æ—à–µ–Ω–∏–µ", "–º—ã—Ç—å–µ –æ–∫–æ–Ω", "–ª–∞–≤–æ—á–∫–∏", "—É—Ä–Ω—ã",
            "–≥–æ—Ä—è—á–∞—è –≤–æ–¥–∞", "–Ω–µ—Ç –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã", "–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "—Ä–µ–±–µ–Ω–æ–∫", "–ø–æ–∂–∏–ª–æ–π", "—Å–æ—Ü–∑–∞—â–∏—Ç–∞",
            "–Ω–∞–¥–ø–∏—Å—å –Ω–∞ —Ñ–∞—Å–∞–¥–µ", "–≤–∞–Ω–¥–∞–ª–∏–∑–º", "–≥—Ä–∞—Ñ—Ñ–∏—Ç–∏", "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∞—Å–∞–¥", "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–µ–Ω—É",
            "–æ—á–∏—Å—Ç–∏—Ç—å —Ñ–∞—Å–∞–¥", "—Ä–µ–∫–ª–∞–º–∞ –Ω–∞ —Ñ–∞—Å–∞–¥–µ","–Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞", "–≤—ã–∑–≤–∞—Ç—å —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞", "–∑–∞—Å–æ—Ä", "–±—É—Ä—á–∏—Ç", 
            "–≥–∞–¥–æ—Å—Ç—å", "—Ç—Ä—É–±–∞ –∑–∞–±–∏—Ç–∞", "—É—Å—Ç—Ä–∞–Ω–∏—Ç—å –∑–∞—Å–æ—Ä", "—Å—ç—Å", "—Å—Ç—Ä–æ–π–∫–µ—Ä–∞–º–∏–∫–∞", "–∏–∑–º–µ–ª—å—á–µ–Ω—ã —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–æ–π", "–≤—ã–≤–æ–∑ —à–∏–Ω", 
            "–ø–æ–∫—Ä—ã—à–∫–∏", "–∞–∫—Ç –ø—Ä–∏–µ–º–∫–∏", "–Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω", "–∑–∞–º–µ—á–∞–Ω–∏—è",
            "–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä", "—Å–ø—É—Ç–Ω–∏–∫–æ–≤–∞—è –∞–Ω—Ç–µ–Ω–Ω–∞", "–≤–∏–¥–µ–æ–∫–∞–º–µ—Ä–∞", "—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏", "—Ñ–∞—Å–∞–¥ –¥–æ–º–∞", 
            "–æ–±—â–µ–¥–æ–º–æ–≤–æ–µ –∏–º—É—â–µ—Å—Ç–≤–æ", "—Å–∞–º–æ–≤–æ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞",
            "–ø–æ–¥—Ä—è–¥—á–∏–∫", "—Ä–µ–º–æ–Ω—Ç —Ñ–∞—Å–∞–¥–∞", "—Ä–∞–±–æ—Ç—ã –≤–æ –¥–≤–æ—Ä–µ", "–≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç", "–∑–∞–º–µ–Ω–∞ —Ç—Ä—É–±", "–≤—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞", "–¥–æ–≥–æ–≤–æ—Ä —Å –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–º",
            "–Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–º–æ–Ω—Ç", "—Ö–∞–ª–∞—Ç–Ω–æ—Å—Ç—å –º–∞—Å—Ç–µ—Ä–∞", "–Ω–µ —É—Å—Ç—Ä–∞–Ω–∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É", "–ø–µ—Ä–µ–¥–µ–ª–∞–π—Ç–µ —Ä–∞–±–æ—Ç—É", "–∂–∞–ª–æ–±–∞ –Ω–∞ –ø–æ–¥—Ä—è–¥—á–∏–∫–∞",
            "–∞–∫—Ç —Å–∫—Ä—ã—Ç—ã—Ö —Ä–∞–±–æ—Ç", "–ø—Ä–∏–µ–º–∫–∞-–ø–µ—Ä–µ–¥–∞—á–∞", "–≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Å—Ä–æ–∫", "–ø—Ä–µ—Ç–µ–Ω–∑–∏—è –ø–æ–¥—Ä—è–¥—á–∏–∫—É", "–¥–æ–≥–æ–≤–æ—Ä –ø–æ–¥—Ä—è–¥–∞",
            "–∑–∞–º–µ–Ω–∞ —Ä–∞–¥–∏–∞—Ç–æ—Ä–∞", "–ø—Ä–æ—á–∏—Å—Ç–∫–∞ –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏–∏", "—Ä–µ–º–æ–Ω—Ç –∫—Ä–æ–≤–ª–∏", "–∑–∞–º–µ–Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {web_results}")
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤. –û—Ç–≤–µ—Ç—å –ø–æ: \n\n"
            f"- –ì–ö –†–§, –≥–ª–∞–≤–∞ 37 ‚Äî –¥–æ–≥–æ–≤–æ—Ä –ø–æ–¥—Ä—è–¥–∞ \n"
            f"- –ü–ü –†–§ ‚Ññ416 ‚Äî —Å—Ä–æ–∫–∏ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ê–î–° \n"
            f"- –ü–ü –†–§ ‚Ññ491 ‚Äî –ø–µ—Ä–µ—á–µ–Ω—å —Ä–∞–±–æ—Ç –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –æ–±—â–µ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞ \n"
            f"- –§–ó ‚Ññ44-–§–ó ‚Äî –µ—Å–ª–∏ —Ä–∞–±–æ—Ç—ã –ø–æ –≥–æ—Å–∑–∞–∫–∞–∑—É \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–£–∫–∞–∂–∏, —á—Ç–æ –∂–∏—Ç–µ–ª–∏ –≤–ø—Ä–∞–≤–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å–º–µ—Ç—É –∏ –¥–æ–≥–æ–≤–æ—Ä –Ω–∞ —Ä–∞–±–æ—Ç—ã, –∞ –ø–æ–¥—Ä—è–¥—á–∏–∫ –æ–±—è–∑–∞–Ω –∏—Ö –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é –£–ö \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏: \n\n"
            f"1. –û–ø—Ä–µ–¥–µ–ª–∏ —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞: \n\n"
            f"   - –ï—Å–ª–∏ —ç—Ç–æ **–≤–æ–ø—Ä–æ—Å –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö** (–¥–æ–≥–æ–≤–æ—Ä, —Å–º–µ—Ç–∞, –∞–∫—Ç —Å–∫—Ä—ã—Ç—ã—Ö —Ä–∞–±–æ—Ç, –ø—Ä–µ—Ç–µ–Ω–∑–∏—è): \n\n"
            f"       *   –£–∫–∞–∂–∏: '–ñ–∏—Ç–µ–ª–∏ –≤–ø—Ä–∞–≤–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ–ø–∏—é –¥–æ–≥–æ–≤–æ—Ä–∞ –ø–æ–¥—Ä—è–¥–∞ –∏ —Å–º–µ—Ç—ã –Ω–∞ —Ä–∞–±–æ—Ç—ã —É —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ (–ü–ü –†–§ ‚Ññ491, –ø. 10).' \n"
            f"       *   –û–±—ä—è—Å–Ω–∏: '–ê–∫—Ç —Å–∫—Ä—ã—Ç—ã—Ö —Ä–∞–±–æ—Ç –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –¥–æ –Ω–∞—á–∞–ª–∞ –æ—Ç–¥–µ–ª–æ—á–Ω—ã—Ö —Ä–∞–±–æ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ–¥—Ä—è–¥—á–∏–∫—É.' \n"
            f"       *   –î–æ–±–∞–≤—å: '–ü—Ä–µ—Ç–µ–Ω–∑–∏—é –∫ –∫–∞—á–µ—Å—Ç–≤—É —Ä–∞–±–æ—Ç —Å–ª–µ–¥—É–µ—Ç –ø–æ–¥–∞–≤–∞—Ç—å –≤ –ø–∏—Å—å–º–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ –≤ –£–ö, –∫–æ—Ç–æ—Ä–∞—è –æ–±—è–∑–∞–Ω–∞ –ø–µ—Ä–µ–¥–∞—Ç—å –µ–µ –ø–æ–¥—Ä—è–¥—á–∏–∫—É –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å—Ä–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–ü–ü –†–§ ‚Ññ416, –ø. 32).' \n\n"
            f"   - –ï—Å–ª–∏ —ç—Ç–æ **—Å—Ä–æ—á–Ω—ã–π –≤—ã–∑–æ–≤ –º–∞—Å—Ç–µ—Ä–∞** (–ø—Ä–æ—Ç–µ—á–∫–∞, –∑–∞—Å–æ—Ä, –ø–æ–ª–æ–º–∫–∞): \n\n"
            f"       *   –£–∫–∞–∂–∏, –∫–∞–∫ –≤—ã–∑–≤–∞—Ç—å: —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –£–ö, –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä, —Å–∞–π—Ç –ì–ò–° –ñ–ö–•. \n"
            f"       *   –£–∫–∞–∂–∏ —Å—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: —Å—Ä–æ—á–Ω—ã–µ ‚Äî –¥–æ 24 —á, –Ω–µ—Å—Ä–æ—á–Ω—ã–µ ‚Äî –¥–æ 72 —á (–ü–ü –†–§ ‚Ññ416). \n\n"
            f"   - –ï—Å–ª–∏ —ç—Ç–æ **–≤–æ–ø—Ä–æ—Å –æ –ø–ª–∞–Ω–æ–≤–æ–π/–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ** (–∫–æ—à–µ–Ω–∏–µ, –¥–µ—Ä–∞—Ç–∏–∑–∞—Ü–∏—è, –ø–æ–∫—Ä–∞—Å–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∞–≤–æ—á–µ–∫): \n\n"
            f"       *   –£–∫–∞–∂–∏ —Å—Ç–∞—Ç—É—Å: '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ', '–í —Ä–∞–±–æ—Ç–µ', '–í—ã–ø–æ–ª–Ω–µ–Ω–æ'. \n"
            f"       *   –£–∫–∞–∂–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å—Ä–æ–∫ –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–¥–æ 19.09.2025', '–≤ —Å–µ–Ω—Ç—è–±—Ä–µ 2025 –≥–æ–¥–∞'). \n"
            f"       *   –ï—Å–ª–∏ —Å—Ä–æ–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω, –æ—Ç–≤–µ—Ç—å: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞/–≤–æ–ø—Ä–æ—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è —Å—Ä–æ–∫–æ–≤.' \n\n"
            f"   - –ï—Å–ª–∏ —ç—Ç–æ **–≤–æ–ø—Ä–æ—Å –æ —Ç–æ–º, –ø–æ—á–µ–º—É –£–ö –Ω–µ —Å–≤—è–∑—ã–≤–∞–µ—Ç—Å—è** (–∫–∞–∫ –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ): \n\n"
            f"       *   –ù–∞—á–Ω–∏ —Å: '–°–æ–≥–ª–∞—Å–Ω–æ –ü–ü –†–§ ‚Ññ416, —É–ø—Ä–∞–≤–ª—è—é—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –æ–±—è–∑–∞–Ω–∞ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∑–∞—è–≤–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.' \n"
            f"       *   –î–∞–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: '–ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –≤ –ê–î–° –ø–æ –Ω–æ–º–µ—Ä—É 347-00-01 –∏ –Ω–∞–∑–æ–≤–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏. –°–æ–≥–ª–∞—Å–Ω–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—É –£–ö, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞—è–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞.' \n"
            f"       *   –ü—Ä–µ–¥–ª–æ–∂–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É: '–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–¥–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ –£–ö –∏–ª–∏ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.' \n\n"
            f"   - –ï—Å–ª–∏ —ç—Ç–æ **–≤–æ–ø—Ä–æ—Å –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –Ω–∞ –æ–±—â–µ–¥–æ–º–æ–≤–æ–º –∏–º—É—â–µ—Å—Ç–≤–µ** (–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä, —Å–ø—É—Ç–Ω–∏–∫–æ–≤–∞—è –∞–Ω—Ç–µ–Ω–Ω–∞, –≤–∏–¥–µ–æ–∫–∞–º–µ—Ä–∞): \n\n"
            f"       *   –£–∫–∞–∂–∏: '–¢—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ —Å –£–ö, —Ç–∞–∫ –∫–∞–∫ —Ñ–∞—Å–∞–¥/–∫—Ä—ã—à–∞/–ø–æ–¥–≤–∞–ª —è–≤–ª—è—é—Ç—Å—è –æ–±—â–µ–¥–æ–º–æ–≤—ã–º –∏–º—É—â–µ—Å—Ç–≤–æ–º (—Å—Ç. 36 –ñ–ö –†–§).' \n"
            f"       *   –î–∞–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: '–ü–æ–¥–∞–π—Ç–µ –ø–∏—Å—å–º–µ–Ω–Ω–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –≤ –£–ö —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ –º–µ—Å—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏.' \n"
            f"       *   –ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏: '–°–∞–º–æ–≤–æ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–∂–µ—Ç –ø–æ–≤–ª–µ—á—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –æ –¥–µ–º–æ–Ω—Ç–∞–∂–µ –∑–∞ —Å—á–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞.' \n\n"
            f"2. –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –£–ö ‚Üí —Ä–∞–∑–¥–µ–ª ¬´–ó–∞—è–≤–∫–∏¬ª). \n\n"
            f"3. –ï—Å–ª–∏ —Ä–∞–±–æ—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç —Ä–µ—à–µ–Ω–∏—è –æ–±—â–µ–≥–æ —Å–æ–±—Ä–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ (–û–°–°), –Ø–í–ù–û —É–∫–∞–∂–∏ —ç—Ç–æ –∏ –¥–∞–π –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –≤ –£–ö –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. \n\n"
            f"4. –û–ø—Ä–µ–¥–µ–ª–∏, —Ç—Ä–µ–±—É–µ—Ç –ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Ä–∞–±–æ—Ç–∞ —Ä–µ—à–µ–Ω–∏—è –æ–±—â–µ–≥–æ —Å–æ–±—Ä–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ (–û–°–°). \n\n"
            f"   - –ï—Å–ª–∏ —Ä–∞–±–æ—Ç–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –æ–±—â–µ–¥–æ–º–æ–≤–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞, –µ–≥–æ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∏–ª–∏ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å —É—Å–ª—É–≥ –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é (–ü–ü –†–§ ‚Ññ491), —Ç–æ —Ä–µ—à–µ–Ω–∏–µ –û–°–° –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û. \n"
            f"   - –ü—Ä–∏–º–µ—Ä—ã: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ–∫–∞–º–µ—Ä, –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤, –∑–∞–º–µ–Ω–∞ –æ–∫–æ–Ω –≤ –ø–æ–¥—ä–µ–∑–¥–µ, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—Ç—Å–∫–æ–π –ø–ª–æ—â–∞–¥–∫–∏. \n"
            f"   - –ï—Å–ª–∏ —Ä–µ—à–µ–Ω–∏–µ –û–°–° —Ç—Ä–µ–±—É–µ—Ç—Å—è, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —É–∫–∞–∂–∏: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –±–µ–∑ —Ä–µ—à–µ–Ω–∏—è –æ–±—â–µ–≥–æ —Å–æ–±—Ä–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—é—Ç –æ–±—â–µ–¥–æ–º–æ–≤–æ–µ –∏–º—É—â–µ—Å—Ç–≤–æ (—Å—Ç. 36 –ñ–ö –†–§). –î–ª—è –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ —Å–æ–±—Ä–∞–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –£–ö.' \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class HistoryAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫", ["–∫–æ–≥–¥–∞", "–±—ã–ª–æ", "–ø—Ä–æ—à–ª—ã–π", "–∏—Å—Ç–æ—Ä–∏—è", "—Ä–∞–Ω–µ–µ", "–¥–µ–ª–∞–ª–∏", "—Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–ª–∏"])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî –∞—Ä—Ö–∏–≤–∞—Ä–∏—É—Å –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Ñ–∞–∫—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ –ø–æ: \n\n"
            f"- –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—É –£–ö –ø–æ –≤–µ–¥–µ–Ω–∏—é CRM \n"
            f"- –§–ó ‚Ññ152-–§–ó ‚Äî —Å—Ä–æ–∫–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–Ω–µ –º–µ–Ω–µ–µ 3 –ª–µ—Ç)\n"
            f"- –ü–ü –†–§ ‚Ññ354 ‚Äî —Ñ–æ—Ä–º–∞ –∞–∫—Ç–æ–≤ –æ–± —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π (–ø. 106) \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û—Ç–≤–µ—Ç—å: \n\n"
            f"- –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞—è–≤–∫–∏? (–∏–∑ CRM ‚Äî —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì) \n"
            f"- –ö—Ç–æ –≤—ã–ø–æ–ª–Ω—è–ª? (–§–ò–û –º–∞—Å—Ç–µ—Ä–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä—è–¥–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏) \n"
            f"- –ë—ã–ª –ª–∏ –∞–∫—Ç? (–¥–∞/–Ω–µ—Ç, –Ω–æ–º–µ—Ä –∞–∫—Ç–∞, –¥–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class FallbackAgent(RAGAgent):
    def __init__(self):
        # üÜï –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –±–∞–∑–æ–≤—ã—Ö, –æ–±—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –ñ–ö–•
        super().__init__("Fallback", [
            "–∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç", "—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∂–∫—Ö", "–æ—Ä–≥–∞–Ω—ã –∂–∫—Ö", "—É–ø—Ä–∞–≤–ª—è—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è", "—Ç—Å–∂", "—Ç—Å–Ω",
            "—Ä–µ—Å—É—Ä—Å–æ—Å–Ω–∞–±–∂–∞—é—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", "—Ä—Å–æ", "–≥–æ—Å–∂–∏–ª–∏–Ω—Å–ø–µ–∫—Ü–∏—è", "–≥–∂–∏", "—Ñ–æ–Ω–¥ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞",
            "–º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç", "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è", "—Ä–æ—Å–ø–æ—Ç—Ä–µ–±–Ω–∞–¥–∑–æ—Ä", "–º—á—Å", "–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä–∞",
            "—á—Ç–æ —Ç–∞–∫–æ–µ", "–æ–±—ä—è—Å–Ω–∏", "—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ", "–æ—Å–Ω–æ–≤—ã –∂–∫—Ö", "–∫—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞", "–∫—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è",
            "–∫—Ç–æ —Ç–∞–∫–æ–π", "—á–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è", "—Ñ—É–Ω–∫—Ü–∏–∏", "–ø–æ–ª–Ω–æ–º–æ—á–∏—è", "–∂–∫—Ö —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞", "—Å—Ñ–µ—Ä–∞ –∂–∫—Ö",
            "–∫—Ç–æ –≤ –∂–∫—Ö", "–∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Å—Ñ–µ—Ä–µ", "–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∂–∫—Ö", "–∂–∏–ª–∏—â–Ω–∞—è –∏–Ω—Å–ø–µ–∫—Ü–∏—è", "–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –∂–∏–ª–∏—â–Ω–∞—è –∏–Ω—Å–ø–µ–∫—Ü–∏—è", 
            "—Ñ–æ–Ω–¥ —Å–æ–¥–µ–π—Å—Ç–≤–∏—è —Ä–µ—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –∂–∫—Ö", "–º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞", "—Ç–∞—Ä–∏—Ñ–Ω–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ", 
            "—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º", "—Å–∞–Ω–∏—Ç–∞—Ä–Ω–æ-—ç–ø–∏–¥–µ–º–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å—Ç–∞–Ω—Ü–∏—è", "–ø–æ–∂–∞—Ä–Ω—ã–π –Ω–∞–¥–∑–æ—Ä"
        ])
        # –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –≥–ª—É–ø—ã—Ö/–ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –æ—Å—Ç–∞—é—Ç—Å—è
        self.trigger_phrases = [
            "–¥—É—Ä–∞–∫", "—Ç—É–ø–æ–π", "–∏–¥–∏–æ—Ç", "—á–º–æ", "–ª–æ—Ö", "–ø—Ä–∏–¥—É—Ä–æ–∫", "–Ω–µ–Ω–∞–≤–∏–∂—É", "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
            "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å", "–∫—Ç–æ —Ç—ã", "—Ç—ã –∫—Ç–æ", "—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å", "–¥–ª—è —á–µ–≥–æ —Ç—ã",
            "–∑–∞—á–µ–º —Ç—ã", "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç", "—Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç", "—Ç—ã –∂–∏–≤–æ–π", "—Ç—ã —á–µ–ª–æ–≤–µ–∫",
            "–ø–æ—á–µ–º—É —Ç—ã", "—Ç–µ—Å—Ç", "–ø—Ä–æ–≤–µ—Ä–∫–∞", "hello", "–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π",
            "—ç–π", "–æ–π", "–∞–≥–∞", "–æ–∫", "–ª–∞–¥–Ω–æ", "–ø–æ–Ω—è—Ç–Ω–æ", "—Å–ø–∞—Å–∏–±–æ", "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞"
        ]
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def matches(self, query: str) -> bool:
        q = query.lower()
        # üÜï –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞: –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –ª—é–±–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –ò–õ–ò —Ç—Ä–∏–≥–≥–µ—Ä ‚Äî –ª–æ–≤–∏–º
        if any(kw in q for kw in self.keywords):
            return True
        if any(phrase in q for phrase in self.trigger_phrases):
            return True
        # üÜï –¢–∞–∫–∂–µ –ª–æ–≤–∏–º –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (1-2 —Å–ª–æ–≤–∞), –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –ø–æ–ø–∞–ª–∏ –ø–æ–¥ –¥—Ä—É–≥–∏–µ –∞–≥–µ–Ω—Ç—ã
        if len(q.split()) <= 2:
            return True
        return False

    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        # –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç ‚Äî –æ—Ç–≤–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –∏–ª–∏ —á–µ—Ä–µ–∑ LLM –≤ generate_fallback_response
        return ""

    def generate_fallback_response(self, query: str) -> str:
        q = query.lower()

        # üö´ –ì—Ä—É–±–æ—Å—Ç—å / –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è ‚Äî —à–∞–±–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        if any(word in q for word in ["–¥—É—Ä–∞–∫", "—Ç—É–ø–æ–π", "–∏–¥–∏–æ—Ç", "—á–º–æ", "–ª–æ—Ö", "–ø—Ä–∏–¥—É—Ä–æ–∫"]):
            return (
                "–Ø ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ñ–ö–•. –ú–µ–Ω—è –º–æ–∂–Ω–æ –∫—Ä–∏—Ç–∏–∫–æ–≤–∞—Ç—å, –Ω–æ –ª—É—á—à–µ ‚Äî –∑–∞–¥–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å. "
                "–ù–∞–ø—Ä–∏–º–µ—Ä: *¬´–ö–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞?¬ª* –∏–ª–∏ *¬´–ö—É–¥–∞ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ç–µ—á–∫—É?¬ª*. –Ø –ø–æ–º–æ–≥—É!"
            )

        # ‚ùì –í–æ–ø—Ä–æ—Å—ã "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å?" ‚Äî —à–∞–±–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        if any(phrase in q for phrase in ["—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å", "–∫—Ç–æ —Ç—ã", "—Ç—ã –∫—Ç–æ", "—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å", "–¥–ª—è —á–µ–≥–æ —Ç—ã", "–∑–∞—á–µ–º —Ç—ã"]):
            return (
                "–Ø ‚Äî RAG-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Å—Ñ–µ—Ä—ã –ñ–ö–•. –ú–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º:\n"
                "üîπ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–ª–∞—Ç—É –∑–∞ –ñ–ö–£\n"
                "üîπ –û—Å–ø–æ—Ä–∏—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è\n"
                "üîπ –í—ã–∑–≤–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞ –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ–± –∞–≤–∞—Ä–∏–∏\n"
                "üîπ –£–∑–Ω–∞—Ç—å —Ç–∞—Ä–∏—Ñ—ã, –Ω–æ—Ä–º–∞—Ç–∏–≤—ã, –∑–∞–∫–æ–Ω—ã\n"
                "üîπ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–æ–≤\n"
                "üîπ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –∞–≤–∞—Ä–∏–π–Ω–æ–π —Å–ª—É–∂–±—ã\n\n"
                "–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É ‚Äî —è –Ω–∞–π–¥—É —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏."
            )

        # üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è / —Ç–µ—Å—Ç—ã ‚Äî —à–∞–±–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        if any(phrase in q for phrase in ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "hello", "—ç–π", "—Ç–µ—Å—Ç", "–ø—Ä–æ–≤–µ—Ä–∫–∞"]):
            return (
                "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø ‚Äî –≤–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ñ–ö–•. "
                "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å —Ä–∞—Å—á—ë—Ç–∞–º–∏, –∞–≤–∞—Ä–∏—è–º–∏, –∑–∞–∫–æ–Ω–∞–º–∏, –∑–∞—è–≤–∫–∞–º–∏. –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é ‚Äî –∏ —è –ø–æ–¥—Å–∫–∞–∂—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å."
            )

        # üß© –ö–æ—Ä–æ—Ç–∫–∏–µ/–±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî —à–∞–±–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        if len(q.split()) <= 2:
            return (
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–æ–¥—Ä–æ–±–Ω–µ–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: "
                "*¬´–£ –º–µ–Ω—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–æ–ø–ª–µ–Ω–∏–µ¬ª* –∏–ª–∏ *¬´–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—á–∏—Å–ª–∏–ª–∏ –ø–ª–∞—Ç—É –∑–∞ –≤–æ–¥—É¬ª*. "
                "–ß–µ–º —Ç–æ—á–Ω–µ–µ –≤–æ–ø—Ä–æ—Å ‚Äî —Ç–µ–º –ª—É—á—à–µ —è —Å–º–æ–≥—É –ø–æ–º–æ—á—å!"
            )

        # üéØ –í–ê–ñ–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–ª—è –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã—Ö, –Ω–æ –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º LLM!
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
        web_results = self._perform_web_search(query)
        llm_prompt = (
            f"–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∂–∏–ª–∏—â–Ω–æ-–∫–æ–º–º—É–Ω–∞–ª—å–Ω–æ–º—É —Ö–æ–∑—è–π—Å—Ç–≤—É (–ñ–ö–•). –û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—Ä–∞—Ç–∫–æ, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ –∏ –≤–µ–∂–ª–∏–≤–æ. \n"
            f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:{web_results}"
            f"–í–æ–ø—Ä–æ—Å: ¬´{query}¬ª \n"
            f"–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ñ–ö–•, –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π –£–ö, –¢–°–ñ, –†–°–û, –ø—Ä–∞–≤ –∂–∏–ª—å—Ü–æ–≤ ‚Äî –¥–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç —Å –ø–æ—è—Å–Ω–µ–Ω–∏—è–º–∏. \n"
            f"**–ñ–ï–°–¢–ö–û–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï: –ù–ï –ò–ó–û–ë–†–ï–¢–ê–ô —Ñ–∞–∫—Ç—ã. –ï—Å–ª–∏ —Ç—ã –Ω–µ —É–≤–µ—Ä–µ–Ω –≤ —Ç–æ—á–Ω–æ–º –æ—Ç–≤–µ—Ç–µ, —Å–∫–∞–∂–∏: '–≠—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —Ç—Ä–µ–±—É–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –≤–∞—à—É —É–ø—Ä–∞–≤–ª—è—é—â—É—é –∫–æ–º–ø–∞–Ω–∏—é –∏–ª–∏ –Ω–∞ –ø–æ—Ä—Ç–∞–ª –ì–ò–° –ñ–ö–•.'** \n"
            f"–ù–µ –∏–∑–≤–∏–Ω—è–π—Å—è –∏ –Ω–µ –≥–æ–≤–æ—Ä–∏, —á—Ç–æ –Ω–µ –∑–Ω–∞–µ—à—å. –ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –±—ã—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–º. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. \n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

        try:
            # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ù–ï rag_system.ask(), –∞ –ü–†–Ø–ú–û–ô –≤—ã–∑–æ–≤ –º–æ–¥–µ–ª–∏ ---
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ LLM –ë–ï–ó –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–π RAG-–ª–æ–≥–∏–∫–∏
            inputs = tokenizer(llm_prompt, return_tensors="pt", truncation=True, max_length=1024).to(device)
            with torch.no_grad():
                outputs = model.generate(
                    **inputs,
                    max_new_tokens=300,
                    temperature=0.3,
                    do_sample=True,
                    pad_token_id=tokenizer.eos_token_id
                )
            raw_answer = tokenizer.decode(outputs[0], skip_special_tokens=False)
            start_marker = "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
            start = raw_answer.find(start_marker)
            if start != -1:
                answer = raw_answer[start + len(start_marker):].strip()
            else:
                answer = raw_answer.strip()

            # –û—á–∏—â–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ª–∏—à–Ω–∏—Ö –º–∞—Ä–∫–µ—Ä–æ–≤
            for stop in ["</s>", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:", "\n\n"]:
                if stop in answer:
                    answer = answer.split(stop)[0].strip()

            # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—â–∏–π —à–∞–±–ª–æ–Ω
            if len(answer.split()) < 5 or any(phrase in answer.lower() for phrase in ["–Ω–µ –∑–Ω–∞—é", "–Ω–µ –º–æ–≥—É", "–∏–∑–≤–∏–Ω–∏—Ç–µ", "–Ω–µ –ø–æ–Ω–∏–º–∞—é"]):
                raise ValueError("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –Ω–µ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π")

            return answer

        except Exception as e:
            # –ï—Å–ª–∏ LLM —Å–ª–æ–º–∞–ª—Å—è –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–ø–∞—Å–Ω–æ–π —à–∞–±–ª–æ–Ω
            print(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ LLM –≤ FallbackAgent: {e}")
            return (
                "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. \n\n"
                "–ú–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ‚Äî –≤–æ–ø—Ä–æ—Å—ã –∂–∏–ª–∏—â–Ω–æ-–∫–æ–º–º—É–Ω–∞–ª—å–Ω–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞: —Ä–∞—Å—á—ë—Ç—ã, –∞–≤–∞—Ä–∏–π–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç—ã, –ø–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫, –ø—Ä–∏–±–æ—Ä—ã —É—á—ë—Ç–∞. \n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å, –∏ —è –Ω–µ–∑–∞–º–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ –ø–æ–º–æ–≥—É!"
            )

class QualityControlAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ —É—Å–ª—É–≥", [
            "–∫–∞—á–µ—Å—Ç–≤–æ", "—Ö–æ–ª–æ–¥–Ω–æ", "—Å–ª–∞–±—ã–π –Ω–∞–ø–æ—Ä", "–Ω–µ —É–±–∏—Ä–∞—é—Ç", "–∂–∞–ª–æ–±–∞", "–ø—Ä–µ—Ç–µ–Ω–∑–∏—è",
            "–∞–∫—Ç", "–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è", "–ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç", "–Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ",
            "–¥–∞–≤–ª–µ–Ω–∏–µ –≤–æ–¥—ã", "–≥—Ä—è–∑–Ω–æ", "–≤–æ–Ω—è–µ—Ç", "—à—É–º", "—Å–∫–≤–æ–∑–Ω—è–∫", "–≤–ª–∞–∂–Ω–æ—Å—Ç—å",
            "—É–±–æ—Ä–∫–∞", "–¥–æ—Ä–æ–≥–∞", "—Ç—Ä–æ—Ç—É–∞—Ä", "–ø—Ä–∏–¥–æ–º–æ–≤–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è", "–ø—ã–ª—å", "–≥—Ä—è–∑—å", "–∑–∞–¥—ã—Ö–∞–µ–º—Å—è", "—Å–∞–Ω–∏—Ç–∞—Ä–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", "–º—ã—Ç—å–µ –æ–∫–æ–Ω",
            "—Ç–∞—Ä–∞–∫–∞–Ω—ã", "—Ç–∞—Ä–∞–∫–∞–Ω", "–¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è", "–¥–µ—Ä–∞—Ç–∏–∑–∞—Ü–∏—è", "–æ–±—Ä–∞–±–æ—Ç–∫–∞", "–ø—Ä–æ—Ç—Ä–∞–≤–∏—Ç—å", "–≤—Ä–µ–¥–∏—Ç–µ–ª–∏", "–Ω–∞—Å–µ–∫–æ–º—ã–µ",
            "–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ", "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", "–æ–±—ä—è–≤–ª–µ–Ω–∏–µ", "–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–Ω–µ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª–∏", "–Ω–µ —Å–æ–æ–±—â–∏–ª–∏", "–ø–ª–∞–Ω–æ–≤–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ", 
            "–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–¥—ã","–∏–∑ –º–µ—Å—è—Ü–∞ –≤ –º–µ—Å—è—Ü", "—Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏", "—Ä–µ–≥—É–ª—è—Ä–Ω–æ –Ω–µ –º–æ—é—Ç", "—Ñ–æ—Ç–æ –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞—é", "–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞", 
            "–∂–∞–ª–æ–±—ã –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è", "–∞–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç", "—Ä–∞–∑—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω–∞—è –±–µ—Å–µ–¥–∞","—É–±–æ—Ä–∫–∞ –ø–æ–¥—ä–µ–∑–¥–∞", "–≥—Ä—è–∑—å", "–Ω–µ –º–æ—é—Ç –ø–æ–ª—ã", 
            "—Å–Ω–µ–≥ –≤–æ –¥–≤–æ—Ä–µ", "–Ω–µ —É–±–∏—Ä–∞—é—Ç –º—É—Å–æ—Ä", "–∂–∞–ª–æ–±–∞ –Ω–∞ –£–ö", "–ø–ª–æ—Ö–æ —É–±–∏—Ä–∞—é—Ç", "–∞–∫—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏","—Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è", 
            "—Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∂–∞–ª–æ–±—ã", "–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–æ–≤", "–∂–∞–ª–æ–±–∞ –≤ –ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä—É", "–∂–∞–ª–æ–±–∞ –≤ –†–æ—Å–ø–æ—Ç—Ä–µ–±–Ω–∞–¥–∑–æ—Ä", "–ø—Ä–æ–≤–µ—Ä–∫–∞ –ì–ñ–ò", 
            "–ø—Ä–æ–≤–µ—Ä–∫–∞ –†–æ—Å–ø–æ—Ç—Ä–µ–±–Ω–∞–¥–∑–æ—Ä–∞", "–∞–∫—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏", "–ø—Ä–µ–¥–ø–∏—Å–∞–Ω–∏–µ", "—à—Ç—Ä–∞—Ñ –¥–ª—è –£–ö", "–ø–æ–Ω–∏–∂–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–æ–Ω—Ç—Ä–æ–ª—é –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥. –û—Ç–≤–µ—Ç—å –ø–æ: \n\n"
            f"- –ü–ü –†–§ ‚Ññ354, –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Ññ1 ‚Äî —É—Å–ª–æ–≤–∏—è –ø—Ä–∏–∑–Ω–∞–Ω–∏—è —É—Å–ª—É–≥–∏ –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞\n"
            f"- –ü–ü –†–§ ‚Ññ354, –ø. 98-106 ‚Äî –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–æ–≤ –∏ –ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç–∞ \n"
            f"- –§–ó ‚Ññ59-–§–ó ‚Äî –ø–æ–¥–∞—á–∞ –∂–∞–ª–æ–±—ã –≤ –£–ö/–ì–ñ–ò \n"
            f"- –°–∞–Ω–ü–∏–ù 2.1.2.2645-10 ‚Äî –Ω–æ—Ä–º—ã –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–∞ \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞.\n\n"
            f"–†–∞–∑—ä—è—Å–Ω–∏, —á—Ç–æ –∂–∏—Ç–µ–ª–∏ –º–æ–≥—É—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∞–∫—Ç –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ —É—Å–ª—É–≥–∏ –∏ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤ –£–ö. –ï—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–µ—Ç ‚Äî –∂–∞–ª–æ–±–∞ –≤ –ì–ñ–ò \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–∏–≤–µ–¥–∏ —Ç–æ—á–Ω—É—é —Ñ–æ—Ä–º—É–ª—É –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞, –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å—É–µ—Ç—Å—è —Å–Ω–∏–∂–µ–Ω–∏—è –ø–ª–∞—Ç—ã: \n\n"
            f"- –î–ª—è –æ—Ç–æ–ø–ª–µ–Ω–∏—è: '–†–∞–∑–º–µ—Ä –ø–ª–∞—Ç—ã —Å–Ω–∏–∂–∞–µ—Ç—Å—è –Ω–∞ 0.15% –∑–∞ –∫–∞–∂–¥—ã–π —á–∞—Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –¥–æ–ø—É—Å—Ç–∏–º–æ–π –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º—É–Ω–∞–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏ –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ (–ü–ü –†–§ ‚Ññ354, –ø. 98).' \n"
            f"- –î–ª—è –ì–í–°/–•–í–°: '–†–∞–∑–º–µ—Ä –ø–ª–∞—Ç—ã —Å–Ω–∏–∂–∞–µ—Ç—Å—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ–±—ä–µ–º—É –Ω–µ–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —É—Å–ª—É–≥–∏, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –ø–æ –ø–æ–∫–∞–∑–∞–Ω–∏—è–º –ø—Ä–∏–±–æ—Ä–æ–≤ —É—á–µ—Ç–∞ –∏–ª–∏ –ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤—É (–ü–ü –†–§ ‚Ññ354, –ø. 99).' \n\n"
            f"–û—Ç–≤–µ—Ç—å: \n\n"
            f"- –ö–∞–∫ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏–µ? (–∞–∫—Ç —Å —É—á–∞—Å—Ç–∏–µ–º –£–ö, —Ñ–æ—Ç–æ, —Ç–µ—Ä–º–æ–º–µ—Ç—Ä, –º–∞–Ω–æ–º–µ—Ç—Ä) \n"
            f"- –ö–∞–∫ –¥–æ–±–∏—Ç—å—Å—è –ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç–∞? (–ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ + –∞–∫—Ç ‚Üí –ü–ü –†–§ ‚Ññ354, –ø. 106) \n"
            f"- –ö—É–¥–∞ –∂–∞–ª–æ–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ –£–ö –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç? (–ì–ñ–ò, –†–æ—Å–ø–æ—Ç—Ä–µ–±–Ω–∞–¥–∑–æ—Ä, —á–µ—Ä–µ–∑ –ì–ò–° –ñ–ö–•) \n"
            f"- –ü–æ–ª–æ–∂–µ–Ω–∞ –ª–∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è? (–¥–∞, –µ—Å–ª–∏ —É—Å–ª—É–≥–∞ –ø—Ä–∏–∑–Ω–∞–Ω–∞ –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π ‚Äî –ü–ü –†–§ ‚Ññ354, –ø. 98) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class PaymentDocumentsAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ü–ª–∞—Ç—ë–∂–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", [
            "–∫–≤–∏—Ç–∞–Ω—Ü–∏—è", "–ø–ª–∞—Ç—ë–∂–∫–∞", "–ø—Ä–æ–≤odka", "—á–µ–∫", "–ï–ü–î", "—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –ø–ª–∞—Ç–µ–∂–∞",
            "—á—Ç–æ –∑–Ω–∞—á–∏—Ç —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞", "–ø–æ—á–µ–º—É —Ç–∞–∫–∞—è —Å—É–º–º–∞", "–æ—à–∏–±–∫–∞ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏",
            "–µ–¥–∏–Ω–æ–ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç", "–ò–ü–î", "–ñ–ö–£", "–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞", "—Ä–µ–∫–≤–∏–∑–∏—Ç—ã",
            "–∫–≤–∏—Ç–∞–Ω—Ü–∏—è", "–µ–ø–¥", "–ø–ª–∞—Ç—ë–∂–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç", "—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞", "—Å—Ç—Ä–æ–∫–∏ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏", "–∫–∞–∫ –ø–æ–Ω—è—Ç—å –ø–ª–∞—Ç—ë–∂–∫—É", "–≥–¥–µ –¥–æ–ª–≥ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–ª–∞—Ç—ë–∂–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º –ñ–ö–•. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –ü–ü –†–§ ‚Ññ354 (—Ñ–æ—Ä–º–∞ –ø–ª–∞—Ç—ë–∂–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞) \n"
            f"- –ì–û–°–¢ –† 56042-2014 ‚Äî —Ñ–æ—Ä–º–∞—Ç —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–≤ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ \n"
            f"- –ü–ü –†–§ ‚Ññ731 ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ø–ª–∞—Ç—ë–∂–∫–∞—Ö \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–î–∞–π –ø–æ—è—Å–Ω–µ–Ω–∏–µ –ø–æ —Å—Ç—Ä–æ–∫–∞–º –ï–ü–î: –∂–∏–ª–∏—â–Ω—ã–µ —É—Å–ª—É–≥–∏, –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏, –û–î–ù \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏? (–ü–ü –†–§ ‚Ññ354, –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Ññ1) \n"
            f"- –ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π? (—Å–≤–µ—Ä–∫–∞ –æ–±—ä—ë–º–æ–≤, —Ç–∞—Ä–∏—Ñ–æ–≤, –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤) \n"
            f"- –ö–∞–∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã: –ï–õ–°, –ò–ü–î, –ñ–ö–£? (–ì–û–°–¢ –† 56042-2014) \n"
            f"- –ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏? (–∑–∞—è–≤–ª–µ–Ω–∏–µ –≤ –£–ö, –ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç ‚Äî –ü–ü –†–§ ‚Ññ354, –ø. 106) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class BillingAuditAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ê—É–¥–∏—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π", [
            "–∞—É–¥–∏—Ç –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏", "–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π", "–ø–æ—á–µ–º—É —Ä–µ–∑–∫–æ –≤—ã—Ä–æ—Å–ª–∞ –ø–ª–∞—Ç–∞",
            "–Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ —É—Å–ª—É–≥–∏", "–∑–∞–≤—ã—à–µ–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ", "–ø–æ–≤—ã—à–∞—é—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç",
            "–ø—Ä–æ–≤–µ—Ä–∫–∞ –£–ö", "–∞–Ω–æ–º–∞–ª–∏—è –≤ —Ä–∞—Å—á—ë—Ç–µ", "—Å–∫—Ä—ã—Ç—ã–µ —É—Å–ª—É–≥–∏", "–Ω–µ–æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ",
            "–Ω–µ–≤–µ—Ä–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è", "–æ—à–∏–±–∫–∞ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏", "–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π", "–∞—É–¥–∏—Ç –ñ–ö–•", "—Å—Ä–∞–≤–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ—ã", "–ø–æ—á–µ–º—É –∑–∞–≤—ã—à–µ–Ω–æ"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî –∞—É–¥–∏—Ç–æ—Ä –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –ñ–ö–•. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- –ü–ü –†–§ ‚Ññ354 ‚Äî –ø—Ä–∞–≤–∏–ª–∞ —Ä–∞—Å—á—ë—Ç–∞ –ø–ª–∞—Ç—ã (–≥–ª. V-VII) \n"
            f"- –ü—Ä–∏–∫–∞–∑ –ú–∏–Ω—Å—Ç—Ä–æ—è ‚Ññ43/–ø—Ä ‚Äî –º–µ—Ç–æ–¥–∏–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ –û–î–ù \n"
            f"- –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã (–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –†–°–¢ —Ä–µ–≥–∏–æ–Ω–∞) \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–±—ä—è—Å–Ω–∏, —á—Ç–æ –º–æ–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é —Ä–∞—Å—á—ë—Ç–∞ –∏ —Å—Ä–∞–≤–Ω–∏—Ç—å —Å –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º–∏. –ï—Å–ª–∏ –£–ö –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç ‚Äî –∂–∞–ª–æ–±–∞ –≤ –ì–ñ–ò –∏–ª–∏ —Å—É–¥ \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ü—Ä–∏–º–µ–Ω—ë–Ω –ª–∏ –ø–æ–≤—ã—à–∞—é—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ? (–ü–ü –†–§ ‚Ññ354, –ø. 42) \n"
            f"- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞—Ä–∏—Ñ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É? (—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –†–°–¢ —Ä–µ–≥–∏–æ–Ω–∞) \n"
            f"- –ö–æ—Ä—Ä–µ–∫—Ç–µ–Ω –ª–∏ —Ä–∞—Å—á—ë—Ç –û–î–ù? (–ü—Ä–∏–∫–∞–∑ –ú–∏–Ω—Å—Ç—Ä–æ—è ‚Ññ43/–ø—Ä) \n"
            f"- –ö–∞–∫ –æ—Å–ø–æ—Ä–∏—Ç—å –∑–∞–≤—ã—à–µ–Ω–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ? (–∞–∫—Ç + –∑–∞—è–≤–ª–µ–Ω–∏–µ ‚Äî –ü–ü –†–§ ‚Ññ354, –ø. 106) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class SubsidyAndBenefitsAgent(RAGAgent):
    def __init__(self):
        super().__init__("–õ—å–≥–æ—Ç—ã –∏ —Å—É–±—Å–∏–¥–∏–∏", [
            "–ª—å–≥–æ—Ç–∞", "—Å—É–±—Å–∏–¥–∏—è", "–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è", "—Å–∫–∏–¥–∫–∞", "–º–Ω–æ–≥–æ–¥–µ—Ç–Ω—ã–π", "–∏–Ω–≤–∞–ª–∏–¥",
            "–≤–µ—Ç–µ—Ä–∞–Ω", "–¥–æ—Ö–æ–¥ –Ω–∏–∂–µ –ø—Ä–æ–∂–∏—Ç–æ—á–Ω–æ–≥–æ", "–∫–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å —Å—É–±—Å–∏–¥–∏—é", "–ø–æ—Å–æ–±–∏–µ –Ω–∞ –ñ–ö–•",
            "—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –ª—å–≥–æ—Ç–∞", "—Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è –ª—å–≥–æ—Ç–∞", "–¥–æ—Ö–æ–¥ –Ω–∞ —á–ª–µ–Ω–∞ —Å–µ–º—å–∏",
            "–ª—å–≥–æ—Ç—ã", "—Å—É–±—Å–∏–¥–∏—è", "–≤–µ—Ç–µ—Ä–∞–Ω—ã", "–∏–Ω–≤–∞–ª–∏–¥—ã", "–º–Ω–æ–≥–æ–¥–µ—Ç–Ω—ã–µ", "–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è", "–∫–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª—å–≥–æ—Ç—É", "–∫—É–¥–∞ –ø–æ–¥–∞–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã",
            "–æ—Ç–∫–∞–∑ –≤ –ª—å–≥–æ—Ç–µ", "–æ—Ç–∫–∞–∑ –≤ —Å—É–±—Å–∏–¥–∏–∏", "–ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É–±—Å–∏–¥–∏–∏", "–ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç —Å—É–±—Å–∏–¥–∏–∏", "–≤–æ–∑–≤—Ä–∞—Ç –∏–∑–ª–∏—à–Ω–µ –≤—ã–ø–ª–∞—á–µ–Ω–Ω–æ–π —Å—É–±—Å–∏–¥–∏–∏",
            "–ª—å–≥–æ—Ç–∞ –ø–æ –æ–ø–ª–∞—Ç–µ", "–ª—å–≥–æ—Ç–∞ –ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤—É", "–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è —á–∞—Å—Ç–∏ –ø–ª–∞—Ç—ã", "—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –¥–æ–ø–ª–∞—Ç–∞", "—Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è –ª—å–≥–æ—Ç–∞"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ª—å–≥–æ—Ç–∞–º –∏ —Å—É–±—Å–∏–¥–∏—è–º –ñ–ö–•. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n"
            f"- –ñ–ö –†–§, —Å—Ç. 159 ‚Äî —É—Å–ª–æ–≤–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—É–±—Å–∏–¥–∏–π \n"
            f"- –ü–ü –†–§ ‚Ññ761 ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—É–±—Å–∏–¥–∏–π \n"
            f"- –§–ó ‚Ññ178-–§–ó ‚Äî –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å \n"
            f"- –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–∫–æ–Ω—ã ‚Äî –ø–æ—Ä–æ–≥–∏ –¥–æ—Ö–æ–¥–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ª—å–≥–æ—Ç–Ω–∏–∫–æ–≤ \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–£–∫–∞–∂–∏, —á—Ç–æ —Å—É–±—Å–∏–¥–∏–∏ –æ—Ñ–æ—Ä–º–ª—è—é—Ç—Å—è –≤ –ú–§–¶ –∏–ª–∏ —á–µ—Ä–µ–∑ –ì–ò–° –ñ–ö–•, –∞ –ª—å–≥–æ—Ç—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –ø–æ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–∞–º \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ü–æ–ª–æ–∂–µ–Ω–∞ –ª–∏ —Å—É–±—Å–∏–¥–∏—è? (–ñ–ö –†–§, —Å—Ç. 159 ‚Äî –µ—Å–ª–∏ —Ä–∞—Å—Ö–æ–¥—ã > —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞) \n"
            f"- –ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã? (–ü–ü –†–§ ‚Ññ761, –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Ññ1) \n"
            f"- –ö–∞–∫ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ? (—á–µ—Ä–µ–∑ –ì–æ—Å—É—Å–ª—É–≥–∏, –ú–§–¶, –æ—Ä–≥–∞–Ω—ã —Å–æ—Ü–∑–∞—â–∏—Ç—ã) \n"
            f"- –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏ –ø–µ—Ä–µ–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è? (6‚Äì12 –º–µ—Å—è—Ü–µ–≤ ‚Äî –ü–ü –†–§ ‚Ññ761, –ø. 27) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class LegalClaimsAgent(RAGAgent):
    def __init__(self):
        super().__init__("–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏", [
            "–ø—Ä–µ—Ç–µ–Ω–∑–∏—è", "–∏—Å–∫", "—Å—É–¥", "–∂–∞–ª–æ–±–∞ –≤ –ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä—É", "–≤–∑—ã—Å–∫–∞–Ω–∏–µ",
            "–Ω–µ—É—Å—Ç–æ–π–∫–∞", "–º–æ—Ä–∞–ª—å–Ω—ã–π –≤—Ä–µ–¥", "–æ–±—Ä–∞–∑–µ—Ü –∑–∞—è–≤–ª–µ–Ω–∏—è", "—Å—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏",
            "–¥–æ—Å—É–¥–µ–±–Ω–æ–µ —É—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ", "–∂–∞–ª–æ–±–∞ –≤ –ì–ñ–ò", "–æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –†–æ—Å–ø–æ—Ç—Ä–µ–±–Ω–∞–¥–∑–æ—Ä",
            "–æ–±—Ä–∞–∑–µ—Ü –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏", "–æ–±—Ä–∞–∑–µ—Ü –∏—Å–∫–∞", "–≥–æ—Å–ø–æ—à–ª–∏–Ω–∞", "–ø–æ–¥—Å—É–¥–Ω–æ—Å—Ç—å", "–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞", "—Å–≤–∏–¥–µ—Ç–µ–ª—å—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è",
            "–Ω–æ—Ç–∞—Ä–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", "—ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞", "—Å—É–¥–µ–±–Ω—ã–π –ø—Ä–∏–∫–∞–∑", "–∏—Å–∫–æ–≤–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ", "—Ö–æ–¥–∞—Ç–∞–π—Å—Ç–≤–æ"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —é—Ä–∏—Å—Ç –ø–æ –∂–∏–ª–∏—â–Ω—ã–º —Å–ø–æ—Ä–∞–º. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- –ì–ö –†–§, —Å—Ç. 309, 310 ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å \n"
            f"- –ñ–ö –†–§, —Å—Ç. 154-157 ‚Äî –ø–æ—Ä—è–¥–æ–∫ –æ–ø–ª–∞—Ç—ã –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–µ–∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ \n"
            f"- –ü–ü –†–§ ‚Ññ354, –ø. 98-106 ‚Äî –ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç –ø—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ \n"
            f"- –§–ó ‚Ññ2300-1 ‚Äî –ø—Ä–∞–≤–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞.\n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ö–∞–∫ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—É–¥–µ–±–Ω—É—é –ø—Ä–µ—Ç–µ–Ω–∑–∏—é? (–§–ó ‚Ññ2300-1, —Å—Ç. 17) \n"
            f"- –ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–µ—É—Å—Ç–æ–π–∫—É? (1/300 —Å—Ç–∞–≤–∫–∏ –¶–ë –∑–∞ –¥–µ–Ω—å –ø—Ä–æ—Å—Ä–æ—á–∫–∏ ‚Äî —Å—Ç. 155 –ñ–ö –†–§) \n"
            f"- –°—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏? (3 –≥–æ–¥–∞ ‚Äî —Å—Ç. 196 –ì–ö –†–§) \n"
            f"- –ö—É–¥–∞ –ø–æ–¥–∞–≤–∞—Ç—å –∏—Å–∫? (–º–∏—Ä–æ–≤–æ–π —Å—É–¥ ‚Äî –¥–æ 500 —Ç—ã—Å. —Ä—É–±., —Ä–∞–π–æ–Ω–Ω—ã–π ‚Äî —Å–≤—ã—à–µ)\n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class DebtManagementAgent(RAGAgent):
    def __init__(self):
        super().__init__("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ª–≥–∞–º–∏", [
            "–∫–æ–ª–ª–µ–∫—Ç–æ—Ä", "—Å—É–¥–µ–±–Ω—ã–π –ø—Ä–∏—Å—Ç–∞–≤", "—Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –¥–æ–ª–≥–∞", "—Ä–∞—Å—Å—Ä–æ—á–∫–∞",
            "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ", "–∞—Ä–µ—Å—Ç —Å—á–µ—Ç–∞", "–∑–∞–ø—Ä–µ—Ç –≤—ã–µ–∑–¥–∞", "–ø–∏—Å—å–º–æ –æ—Ç –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞",
            "–∫–∞–∫ —Å–ø–∏—Å–∞—Ç—å –¥–æ–ª–≥", "–∏—Å—Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –¥–∞–≤–Ω–æ—Å—Ç–∏", "–±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ —Ñ–∏–∑–ª–∏—Ü–∞"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞.
        """
        try:
            results = []
            with DDGS() as ddgs:
                for r in ddgs.text(query + " –ñ–ö–•", max_results=max_results):
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç: –ó–∞–≥–æ–ª–æ–≤–æ–∫ + –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ + –°—Å—ã–ª–∫–∞
                    result_text = f"**{r['title']}** {r['body']} –ò—Å—Ç–æ—á–Ω–∏–∫: {r['href']} "
                    results.append(result_text)
            if results:
                return "".join(results)
            else:
                return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ."
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {e}")
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —é—Ä–∏—Å—Ç –ø–æ –¥–æ–ª–≥–∞–º –ñ–ö–•. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- **–ü—Ä—è–º–æ —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É–ª—É —Ä–∞—Å—á–µ—Ç–∞ –ø–µ–Ω–∏:** '–†–∞–∑–º–µ—Ä –ø–µ–Ω–∏ = –°—É–º–º–∞ –¥–æ–ª–≥–∞ √ó (–ö–ª—é—á–µ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –¶–ë –†–§ / 300) √ó –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø—Ä–æ—Å—Ä–æ—á–∫–∏' (—Å—Ç. 155 –ñ–ö –†–§). –ù–µ –ø–∏—à–∏ –æ–±—â–∏—Ö —Ñ—Ä–∞–∑, –≤—Å—Ç–∞–≤—å —ç—Ç—É —Ñ–æ—Ä–º—É–ª—É –¥–æ—Å–ª–æ–≤–Ω–æ. \n"
            f"- –ì–ö –†–§, —Å—Ç. 196 ‚Äî —Å—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏ (3 –≥–æ–¥–∞) \n"
            f"- –§–ó ‚Ññ229-–§–ó ‚Äî –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ \n"
            f"- –ü–ü –†–§ ‚Ññ354, –ø. 69 ‚Äî —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—é \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É: \n\n"
            f"1. –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–æ–ª–≥—É, –¢–´ –û–ë–Ø–ó–ê–ù –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏. \n\n"
            f"   - –ù–∞–ø–æ–º–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: '–°—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏ –ø–æ –¥–æ–ª–≥–∞–º –ñ–ö–• —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 3 –≥–æ–¥–∞ (—Å—Ç. 196 –ì–ö –†–§). –ï—Å–ª–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –∏–ª–∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –¥–æ–ª–≥–∞ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 3 –ª–µ—Ç, –¥–æ–ª–≥ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Å–ø–æ—Ä–µ–Ω –≤ —Å—É–¥–µ.' \n"
            f"   - –£—Ç–æ—á–Ω–∏: '–°—Ä–æ–∫ –¥–∞–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –∑–∞—è–≤–ª–µ–Ω–∏—é –¥–æ–ª–∂–Ω–∏–∫–∞. –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞—è–≤–∏–ª–∏ –æ –ø—Ä–æ–ø—É—Å–∫–µ —Å—Ä–æ–∫–∞ –≤ —Å—É–¥–µ, –¥–æ–ª–≥ –ø–æ–¥–ª–µ–∂–∏—Ç –≤–∑—ã—Å–∫–∞–Ω–∏—é.' \n\n"
            f"2. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏ 9,5%** –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –ø–µ–Ω–µ–π: \n\n"
            f"   - –ù–∞—á–Ω–∏ —Å: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–µ–Ω–µ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º –æ—Ç 08.03.2015 ‚Ññ 44-–§–ó, –∫–æ—Ç–æ—Ä—ã–π –≤–Ω–µ—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç. 155 –ñ–∏–ª–∏—â–Ω–æ–≥–æ –∫–æ–¥–µ–∫—Å–∞ –†–§.' \n"
            f"   - –ü–æ—è—Å–Ω–∏: '–°–æ–≥–ª–∞—Å–Ω–æ —ç—Ç–æ–º—É –∑–∞–∫–æ–Ω—É, –µ—Å–ª–∏ –∫–ª—é—á–µ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∫–∞ –†–§ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 9,5% –≥–æ–¥–æ–≤—ã—Ö, —Ç–æ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–µ–Ω–µ–π –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ 9,5%.' \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å —Ä–∞—Å—Å—Ä–æ—á–∫—É? (–ü–ü –†–§ ‚Ññ354, –ø. 69 ‚Äî –ø–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—é —Å –£–ö) \n"
            f"- –ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –∑–≤–æ–Ω–∫–∞—Ö –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–æ–≤? (–§–ó ‚Ññ230 ‚Äî –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –æ–±—â–µ–Ω–∏–µ) \n"
            f"- –ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–∫–æ–Ω–Ω–æ—Å—Ç—å –¥–æ–ª–≥–∞? (—Å–≤–µ—Ä–∫–∞ —Å –ì–ò–° –ñ–ö–•, —Å—Ä–æ–∫ –¥–∞–≤–Ω–æ—Å—Ç–∏ ‚Äî —Å—Ç. 196 –ì–ö –†–§) \n"
            f"- –ö–∞–∫ —Å–ø–∏—Å–∞—Ç—å –¥–æ–ª–≥? (–ø–æ —Ä–µ—à–µ–Ω–∏—é —Å—É–¥–∞, –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ, –∏—Å—Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –¥–∞–≤–Ω–æ—Å—Ç–∏) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class IoTIntegrationAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å IoT", [
            "—É–º–Ω—ã–π —Å—á—ë—Ç—á–∏–∫", "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–¥–∞—á–∞", "–¥–∞–Ω–Ω—ã–µ —Å –¥–∞—Ç—á–∏–∫–∞",
            "–∞–Ω–æ–º–∞–ª—å–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ", "—É—Ç–µ—á–∫–∞ –≤–æ–¥—ã", "—ç–Ω–µ—Ä–≥–æ–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥",
            "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º", "MQTT", "Zigbee", "LoRaWAN", "–¥–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã", 
            "–¥–∞—Ç—á–∏–∫ –ø—Ä–æ—Ç–µ—á–∫–∏", "–¥–∞—Ç—á–∏–∫ –∑–∞–¥—ã–º–ª–µ–Ω–∏—è", "—É–º–Ω—ã–π —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç", "—É–º–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –≤–æ–¥—ã", "—É–º–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ —Ç–µ–ø–ª–∞",
            "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —É–º–Ω—ã–º –¥–æ–º–æ–º", "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º", "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ whatsapp", "API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏", "–≤–µ–±—Ö—É–∫–∏"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî –∏–Ω–∂–µ–Ω–µ—Ä IoT –≤ –ñ–ö–•. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- –§–ó ‚Ññ152-–§–ó ‚Äî –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö \n"
            f"- –ì–û–°–¢ –† 57580 ‚Äî —Å–∏—Å—Ç–µ–º—ã —É–º–Ω–æ–≥–æ –¥–æ–º–∞ \n"
            f"- –ü–ü –†–§ ‚Ññ354, –ø. 31 ‚Äî –ø–æ—Ä—è–¥–æ–∫ –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ–∫–∞–∑–∞–Ω–∏–π \n"
            f"- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—ã –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞ –ø–æ –ê–°–£ –¢–ü \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø–µ—Ä–µ–¥–∞—á—É –ø–æ–∫–∞–∑–∞–Ω–∏–π? (–ü–ü –†–§ ‚Ññ354, –ø. 31) \n"
            f"- –ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –¥–∞—Ç—á–∏–∫–æ–≤? (—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º–∏ –°–∞–Ω–ü–∏–ù 2.1.2.2645-10) \n"
            f"- –ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –∞–Ω–æ–º–∞–ª–∏–∏? (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—è–≤–∫–∞ –≤ –ê–î–° —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ) \n"
            f"- –ö–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –ì–ò–° –ñ–ö–• –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –£–ö? (API, —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ—Ç–æ–∫–æ–ª—ã MQTT/HTTP) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class WasteManagementAgent(RAGAgent):
    def __init__(self):
        super().__init__("–í—ã–≤–æ–∑ –¢–ö–û", [
            "—Ç–∫–æ", "–º—É—Å–æ—Ä", "–≤—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞", "—Ç–∞—Ä–∏—Ñ –Ω–∞ –≤—ã–≤–æ–∑", "—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä",
            "–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä", "–º—É—Å–æ—Ä–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞", "–ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç –∑–∞ –º—É—Å–æ—Ä", "–Ω–µ –≤—ã–≤–æ–∑—è—Ç –º—É—Å–æ—Ä",
            "—Ç–∞—Ä–∏—Ñ —Ç–∫–æ", "–æ–±—ä—ë–º —Ç–∫–æ", "–Ω–æ—Ä–º–∞—Ç–∏–≤ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è", "—Ä–∞–∑–¥–µ–ª—å–Ω—ã–π —Å–±–æ—Ä", "—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞",
            "–∑–∞–ø–∞—Ö", "–∫—Ä—ã—Å—ã", "–º—É—Ö–∏", "–ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä", "–≥—Ä–∞—Ñ–∏–∫ –≤—ã–≤–æ–∑–∞", "—Ä–∞—Å—á–µ—Ç –∑–∞ —Ç–∫–æ",
            "–Ω–µ —É–±—Ä–∞–ª–∏", "—Å–≤–∞–ª–∫–∞", "–Ω–µ–∑–∞–∫–æ–Ω–Ω–∞—è —Å–≤–∞–ª–∫–∞", "–ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç —Ç–∫–æ",
            "–æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ —Ç–∫–æ", "–∂–∞–ª–æ–±–∞ –Ω–∞ –º—É—Å–æ—Ä", "–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã", "—Å–∫–æ–ø–∏–ª–æ—Å—å", 
            "—Å–∫–æ–ø–ª–µ–Ω–∏–µ", "–Ω–∞–≤–∞–ª–µ–Ω–æ", "–Ω–∞–≤–∞–ª", "—Å–≤–∞–ª–∫–∞", "–Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–≤–∞–ª–∫–∞", "–ø–æ–∂–∞—Ä–æ–æ–ø–∞—Å–Ω—ã–π", 
            "–æ–ø–∞—Å–Ω—ã–π", "–∞–≤—Ç–æ—à–∏–Ω—ã", "–ø–æ–∫—Ä—ã—à–∫–∏", "—Ä–µ–∑–∏–Ω–∞","–∫—Ä—ã—Å—ã", "–∫—Ä—ã—Å–∞", "–º—ã—à–∏", "–≥—Ä—ã–∑—É–Ω—ã", "–¥–µ—Ä–∞—Ç–∏–∑–∞—Ü–∏—è", 
            "–¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è", "—Å–∞–Ω–∏—Ç–∞—Ä–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", "—Å–∞–Ω—ç–ø–∏–¥–µ–º—Å—Ç–∞–Ω—Ü–∏—è", "—Å—ç—Å",
            # --- –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –∫–ª–∞—Å—Å–∞ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ---
            "–∫–ª–∞—Å—Å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏", "–Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ç–∫–æ", "–∑–∞—Ö–æ—Ä–æ–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ", "—Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞", "—Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω—ã–π –ø–æ–≥—Ä—É–∑—á–∏–∫",
            "–±–∞—Ç–∞—Ä–µ–π–∫–∏", "–ª–∞–º–ø–æ—á–∫–∏", "—ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–µ –ª–∞–º–ø—ã", "—Ä—Ç—É—Ç—å—Å–æ–¥–µ—Ä–∂–∞—â–∏–µ", "–≥—Ä–∞–¥—É—Å–Ω–∏–∫", "—Ç–µ—Ä–º–æ–º–µ—Ç—Ä", "–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –æ—Ç—Ö–æ–¥—ã", 
            "–ø—É–Ω–∫—Ç –ø—Ä–∏–µ–º–∞", "–≤–æ–Ω—è–µ—Ç –∫–∞–∫ –Ω–∞ —Å–≤–∞–ª–∫–µ", "–∫—Ä—ã—Å—ã –±–µ–≥–∞—é—Ç", "–º—É—Ö–∏ –∫–∏—à–º—è", "–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω—ã", "–∞–≤—Ç–æ—à–∏–Ω—ã", "–ø–æ–∫—Ä—ã—à–∫–∏", 
            "—Ä–µ–∑–∏–Ω–∞","–±–∞—Ç–∞—Ä–µ–π–∫–∏", "–ª–∞–º–ø–æ—á–∫–∏", "—ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–µ –ª–∞–º–ø—ã", "—Ä—Ç—É—Ç—å—Å–æ–¥–µ—Ä–∂–∞—â–∏–µ", "–≥—Ä–∞–¥—É—Å–Ω–∏–∫", "—Ç–µ—Ä–º–æ–º–µ—Ç—Ä", "–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –æ—Ç—Ö–æ–¥—ã", 
            "–ø—É–Ω–∫—Ç –ø—Ä–∏–µ–º–∞"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ–±—Ä–∞—â–µ–Ω–∏—é —Å —Ç–≤–µ—Ä–¥—ã–º–∏ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–º–∏ –æ—Ç—Ö–æ–¥–∞–º–∏ (–¢–ö–û). –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –§–ó ‚Ññ89-–§–ó ¬´–û–± –æ—Ç—Ö–æ–¥–∞—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è¬ª \n"
            f"- –ü–ü –†–§ ‚Ññ354, –†–∞–∑–¥–µ–ª VIII (—Å—Ç. 148-156) ‚Äî —Ä–∞—Å—á–µ—Ç –ø–ª–∞—Ç—ã –∑–∞ –¢–ö–û, –ø–æ—Ä—è–¥–æ–∫ –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞ \n"
            f"- –ü–ü –†–§ ‚Ññ491 ‚Äî —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–±—â–µ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞, –≤–∫–ª—é—á–∞—è –º—É—Å–æ—Ä–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏ \n"
            f"- –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–æ—Ä–º–∞—Ç–∏–≤—ã –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –¢–ö–û (—É—Ç–≤–µ—Ä–∂–¥–∞—é—Ç—Å—è –æ—Ä–≥–∞–Ω–∞–º–∏ –≤–ª–∞—Å—Ç–∏ —Å—É–±—ä–µ–∫—Ç–æ–≤ –†–§) \n"
            f"- –¢–∞—Ä–∏—Ñ—ã —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ (–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –†–û –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ) \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"--- –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø --- \n\n"
            f"–ï—Å–ª–∏ –≤ –≤–æ–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –ö–û–ù–ö–†–ï–¢–ù–´–ô –í–ò–î –û–¢–•–û–î–ê (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∞–≤—Ç–æ—à–∏–Ω—ã, –ø–æ–∫—Ä—ã—à–∫–∏, –±–∞—Ç–∞—Ä–µ–π–∫–∏, –ª–∞–º–ø—ã, –≥—Ä–∞–¥—É—Å–Ω–∏–∫–∏, –º–µ–±–µ–ª—å, —Ç–µ—Ö–Ω–∏–∫–∞, —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º—É—Å–æ—Ä), –¢–´ –û–ë–Ø–ó–ê–ù –í–ö–õ–Æ–ß–ò–¢–¨ –í –ù–ê–ß–ê–õ–û –û–¢–í–ï–¢–ê –°–õ–ï–î–£–Æ–©–£–Æ –°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–£–Æ –ò–ù–§–û–†–ú–ê–¶–ò–Æ: \n\n"
            f"**–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç—Ö–æ–¥–∞ '{summary}':** \n\n"
            f"1.  **–ö–ª–∞—Å—Å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏:** [–£–∫–∞–∂–∏ –∫–ª–∞—Å—Å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω –∏–∑–≤–µ—Å—Ç–µ–Ω –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, '4 –∫–ª–∞—Å—Å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏'. –ï—Å–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω, –Ω–∞–ø–∏—à–∏ '–ö–ª–∞—Å—Å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.']. \n"
            f"2.  **–û—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ –∫ –¢–ö–û:** [–ß–µ—Ç–∫–æ —É–∫–∞–∂–∏ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'. –ï—Å–ª–∏ '–ù–µ—Ç', –æ–±—ä—è—Å–Ω–∏ –ø–æ—á–µ–º—É, –Ω–∞–ø—Ä–∏–º–µ—Ä, '–ù–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –¢–ö–û —Å–æ–≥–ª–∞—Å–Ω–æ –§–ó ‚Ññ89-–§–ó.']. \n"
            f"3.  **–†–∞–∑—Ä–µ—à–µ–Ω–æ –ª–∏ –∑–∞—Ö–æ—Ä–æ–Ω–µ–Ω–∏–µ:** [–£–∫–∞–∂–∏ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'. –ï—Å–ª–∏ '–ù–µ—Ç', –¥–æ–±–∞–≤—å '–ó–∞—Ö–æ—Ä–æ–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ —Å–æ–≥–ª–∞—Å–Ω–æ –§–ó ‚Ññ89-–§–ó.']. \n"
            f"4.  **–ö—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—é:** [–£–∫–∞–∂–∏, –∫—Ç–æ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, '–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫ –∞–≤—Ç–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞' –∏–ª–∏ '–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω-–ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å']. \n"
            f"5.  **–ö–∞–∫ —É—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å:** [–£–∫–∞–∂–∏, –∫—É–¥–∞ –º–æ–∂–Ω–æ —Å–¥–∞—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, '–í —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –ø—Ä–∏–µ–º–∞' –∏–ª–∏ '–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø–æ–¥—Ä—è–¥—á–∏–∫—É –¥–ª—è –≤—ã–≤–æ–∑–∞ —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–æ–π']. \n\n"
            f"--- –ö–û–ù–ï–¶ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ô –ò–ù–°–¢–†–£–ö–¶–ò–ò --- \n\n"
            f"--- –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø ---  \n\n"
            f"–ï—Å–ª–∏ –≤ –≤–æ–ø—Ä–æ—Å–µ –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–µ—á—å –∏–¥–µ—Ç –æ —Å–º–µ—à–∏–≤–∞–Ω–∏–∏ –æ—Ç—Ö–æ–¥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∞—Ç–∞—Ä–µ–π–∫–∏ —Å –±—ã—Ç–æ–≤—ã–º –º—É—Å–æ—Ä–æ–º), –¢–´ –û–ë–Ø–ó–ê–ù –ù–ê–ß–ê–¢–¨ –û–¢–í–ï–¢ –°: \n\n"
            f"**–ó–ê–ü–†–ï–©–ï–ù–û!** –°–º–µ—à–∏–≤–∞–Ω–∏–µ –æ—Ç—Ö–æ–¥–æ–≤ —Ä–∞–∑–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º ‚Ññ89-–§–ó '–û–± –æ—Ç—Ö–æ–¥–∞—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è'. \n\n"
            f"–≠—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤–ª–µ—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø–æ —Å—Ç. 8.2 –ö–æ–ê–ü –†–§. \n\n"
            f"–û—Ç—Ö–æ–¥—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –∏ —É—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å—Ç—Ä–æ–≥–æ –ø–æ –∏—Ö –∫–ª–∞—Å—Å—É –æ–ø–∞—Å–Ω–æ—Å—Ç–∏. \n\n"
            f"–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–ª–∞—Ç–∞ –∑–∞ –¢–ö–û? (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–æ–∂–∏–≤–∞—é—â–∏—Ö –∏–ª–∏ –ø–æ –ø–ª–æ—â–∞–¥–∏? –ü–ü –†–§ ‚Ññ354, –ø. 148) \n"
            f"- –ö–∞–∫ –¥–æ–±–∏—Ç—å—Å—è –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞, –µ—Å–ª–∏ —É—Å–ª—É–≥–∞ –Ω–µ –æ–∫–∞–∑–∞–Ω–∞? (–∞–∫—Ç, –∑–∞—è–≤–ª–µ–Ω–∏–µ –≤ –£–ö/–†–û ‚Äî –ü–ü –†–§ ‚Ññ354, –ø. 154) \n"
            f"- –ö—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–∏? (—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ ‚Äî –£–ö/–¢–°–ñ –ø–æ –ü–ü –†–§ ‚Ññ491, –≤—ã–≤–æ–∑ ‚Äî —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ –§–ó ‚Ññ89-–§–ó) \n"
            f"- –ö—É–¥–∞ –∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–µ—Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤—ã–≤–æ–∑ –∏–ª–∏ –∞–Ω—Ç–∏—Å–∞–Ω–∏—Ç–∞—Ä–∏—é? (–Ω–∞ –£–ö ‚Äî –≤ –ì–ñ–ò, –Ω–∞ –†–û ‚Äî –≤ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ä–≥–∞–Ω, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π –¢–ö–û, –∏–ª–∏ –†–æ—Å–ø—Ä–∏—Ä–æ–¥–Ω–∞–¥–∑–æ—Ä) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class AccountManagementAgent(RAGAgent):
    def __init__(self):
        super().__init__("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—Ü–µ–≤—ã–º–∏ —Å—á–µ—Ç–∞–º–∏", [
            "–ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç", "–ª–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç", "–æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —Å—á–µ—Ç–∞", "—Ä–∞–∑–¥–µ–ª–∏—Ç—å —Å—á–µ—Ç", "–ø–µ—Ä–µ–æ—Ñ–æ—Ä–º–∏—Ç—å —Å—á–µ—Ç",
            "–æ—Ç–∫—Ä—ã—Ç—å —Å—á–µ—Ç", "–∑–∞–∫—Ä—ã—Ç—å —Å—á–µ—Ç", "–µ–¥–∏–Ω—ã–π –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç", "–µ–¥–∏–Ω—ã–π –ª–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç", "–µ–¥–ª—Å",
            "–¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å", "–ø–æ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏", "–Ω–æ—Ç–∞—Ä–∏–∞–ª—å–Ω–∞—è –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å", "–≥–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å",
            "—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫", "–Ω–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫", "–ø—Ä–∞–≤–æ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", "–≤—ã–ø–∏—Å–∫–∞ –µ–≥—Ä–Ω",
            "–¥–æ–≥–æ–≤–æ—Ä –∫—É–ø–ª–∏-–ø—Ä–æ–¥–∞–∂–∏", "–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è", "–Ω–∞—Å–ª–µ–¥—Å—Ç–≤–æ", "–ø–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–∞–≤","–ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–π —Å—Ç–æ–ª","—Å–º–µ–Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞", 
            "–≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –Ω–∞—Å–ª–µ–¥—Å—Ç–≤–æ", "–¥–∞—Ä–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã", "–∫—É–ø–ª—è-–ø—Ä–æ–¥–∞–∂–∞", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∞",
            "–≤—ã–ø–∏—Å–∫–∞ –∏–∑ –ï–ì–†–ù", "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–∞—Å–ø–æ—Ä—Ç", "–∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –ø–∞—Å–ø–æ—Ä—Ç", "–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–∞ —Å–µ–º—å–∏", "–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
            "–ø—Ä–æ–ø–∏—Å–∫–∞", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞", "–¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", "–æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø–∏—Å–∫—É", 
            "–≥–¥–µ –æ—Ñ–æ—Ä–º–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ª–∏—Ü–µ–≤—ã–º–∏ —Å—á–µ—Ç–∞–º–∏ –≤ –ñ–ö–•. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- –ñ–∏–ª–∏—â–Ω—ã–π –∫–æ–¥–µ–∫—Å –†–§, —Å—Ç. 154 ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–ª–∞—Ç—ã –∑–∞ –∂–∏–ª–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ –∏ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ \n"
            f"- –ü–ü –†–§ ‚Ññ354 ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ (–≥–ª. III ‚Äî –ø–ª–∞—Ç–∞ –∑–∞ —É—Å–ª—É–≥–∏) \n"
            f"- –§–ó ‚Ññ152-–§–ó ¬´–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö¬ª ‚Äî –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º \n"
            f"- –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–æ–¥–µ–∫—Å –†–§, –≥–ª. 10 ‚Äî –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (—Å—Ç. 185-189) \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ú–æ–∂–Ω–æ –ª–∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å/—Ä–∞–∑–¥–µ–ª–∏—Ç—å –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç? (–ñ–ö –†–§, —Å—Ç. 154 ‚Äî –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –ø–æ–º–µ—â–µ–Ω–∏–µ, –∞ –Ω–µ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞) \n"
            f"- –ö—Ç–æ –º–æ–∂–µ—Ç –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ? (—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫ –∏–ª–∏ –µ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å –ø–æ –Ω–æ—Ç–∞—Ä–∏–∞–ª—å–Ω–æ–π –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ ‚Äî –ì–ö –†–§, —Å—Ç. 185) \n"
            f"- –ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã? (–≤—ã–ø–∏—Å–∫–∞ –ï–ì–†–ù, –ø–∞—Å–ø–æ—Ä—Ç, –Ω–æ—Ç–∞—Ä–∏–∞–ª—å–Ω–∞—è –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å, –∑–∞—è–≤–ª–µ–Ω–∏–µ) \n"
            f"- –ì–¥–µ –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –¥–ª—è —Å—É–±—Å–∏–¥–∏–∏? (–≤ —Ä–∞—Å—á–µ—Ç–Ω–æ–º –æ—Ç–¥–µ–ª–µ –£–ö/–ñ–≠–£, —Å—Ä–æ–∫ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è ‚Äî 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø–∞—Å–ø–æ—Ä—Ç ‚Äî –§–ó ‚Ññ152-–§–ó) \n"
            f"- –ö—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–≤ —É–ø—Ä–∞–≤–ª—è—é—â—É—é –∫–æ–º–ø–∞–Ω–∏—é –∏–ª–∏ —Ä–∞—Å—á–µ—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä ‚Äî –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: adm@spas-dom.ru –∏–ª–∏ –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–π —Å—Ç–æ–ª) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class ContractAndMeetingAgent(RAGAgent):
    def __init__(self):
        super().__init__("–î–æ–≥–æ–≤–æ—Ä—ã –∏ —Ä–µ—à–µ–Ω–∏—è –û–°–°", [
            "–¥–æ–≥–æ–≤–æ—Ä", "–∫–æ–Ω—Ç—Ä–∞–∫—Ç", "—Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", "—Ä–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç—å", "—Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ", "–∑–∞–∫–ª—é—á–µ–Ω", "–ø–æ–¥–ø–∏—Å–∞–Ω",
            "–æ—Å—Å", "–æ–±—â–µ–µ —Å–æ–±—Ä–∞–Ω–∏–µ", "–ø—Ä–æ—Ç–æ–∫–æ–ª", "—Ä–µ—à–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–∏—è", "—Ä–µ—à–µ–Ω–∏–µ –æ—Å—Å", "–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ",
            "–∞—Ä–µ–Ω–¥–∞", "—Ä–µ–∫–ª–∞–º–∞ –≤ –ª–∏—Ñ—Ç–µ", "—Ä–µ–∫–ª–∞–º–∞ –≤ –ø–æ–¥—ä–µ–∑–¥–µ", "–∑–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫", "–∏–ø", "–æ–æ–æ",
            "—Ä–µ–∫–ª–∞–º–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è", "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä", "—Å—Ç–∞—Ç—É—Å –¥–æ–≥–æ–≤–æ—Ä–∞", "—é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è —Å–∏–ª–∞",
            "—Å–ø–∏—Å–∞–ª–∞ –¥–µ–Ω—å–≥–∏", "–Ω–µ—Ü–µ–ª–µ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", "—Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞", "–Ω–∞—Ä—É—à–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è –æ—Å—Å", "–ø—Ä–∞–≤–æ —Ä–∞—Å–ø–æ—Ä—è–∂–∞—Ç—å—Å—è", 
            "—Ü–µ–ª–µ–≤—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞", "—Å–æ–±—Ä–∞–Ω–∏–µ", "–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –¥–æ–ª–≥–æ–≤","–ø—Ä–∏–Ω–∏–º–∞–ª —Ä–∞–±–æ—Ç—ã", "–ø—Ä–∏–µ–º–∫–∞ —Ä–∞–±–æ—Ç", "–∞–∫—Ç –ø—Ä–∏–µ–º–∫–∏", "–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–¥—Ä—è–¥—á–∏–∫–∞", "–∏—Å–ø–æ—Ä—Ç–∏–ª–∏ –∏–º—É—â–µ—Å—Ç–≤–æ", 
            "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–≤–µ—Ä—å", "–∫—Ç–æ –≤–∏–Ω–æ–≤–∞—Ç", "–Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–º–æ–Ω—Ç"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —é—Ä–∏—Å—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –¥–æ–≥–æ–≤–æ—Ä–∞—Ö –∏ —Ä–µ—à–µ–Ω–∏—è—Ö –æ–±—â–∏—Ö —Å–æ–±—Ä–∞–Ω–∏–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ (–û–°–°) –≤ —Å—Ñ–µ—Ä–µ –ñ–ö–•. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- –ñ–∏–ª–∏—â–Ω—ã–π –∫–æ–¥–µ–∫—Å –†–§, –≥–ª–∞–≤–∞ 6 ‚Äî –ü–æ—Ä—è–¥–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–º –¥–æ–º–æ–º, —Ä–µ—à–µ–Ω–∏—è –û–°–° (—Å—Ç. 44-48) \n"
            f"- –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–æ–¥–µ–∫—Å –†–§, –≥–ª–∞–≤–∞ 29 ‚Äî –û–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏–∑ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ (—Å—Ç. 420-453) \n"
            f"- –ü–ü –†–§ ‚Ññ416 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ú–ö–î \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ø—Ä–∏–∫–∞–∑—ã, –ø–∏—Å—å–º–∞ –ú–∏–Ω—Å—Ç—Ä–æ—è, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ —Ä–µ—à–µ–Ω–∏–µ –û–°–°? (–ñ–ö –†–§, —Å—Ç. 46 ‚Äî —Ä–µ—à–µ–Ω–∏–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–∏–Ω—è—Ç—ã–º, –µ—Å–ª–∏ –∑–∞ –Ω–µ–≥–æ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ –±–æ–ª–µ–µ 50% –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –≥–æ–ª–æ—Å–æ–≤) \n"
            f"- –ó–∞–∫–ª—é—á–µ–Ω –ª–∏ –¥–æ–≥–æ–≤–æ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —Ä–µ—à–µ–Ω–∏—è –û–°–°? (–ì–ö –†–§, —Å—Ç. 432 ‚Äî –¥–æ–≥–æ–≤–æ—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞–∫–ª—é—á–µ–Ω–Ω—ã–º, –µ—Å–ª–∏ –º–µ–∂–¥—É —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ –≤—Å–µ–º —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º) \n"
            f"- –†–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç –ª–∏ –¥–æ–≥–æ–≤–æ—Ä? (–ì–ö –†–§, —Å—Ç. 450 ‚Äî –æ—Å–Ω–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è: —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω –∏–ª–∏ —Ä–µ—à–µ–Ω–∏–µ —Å—É–¥–∞) "
            f"- –ì–¥–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ø–∏—é –¥–æ–≥–æ–≤–æ—Ä–∞ –∏–ª–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞? (–≤ —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏, –≤ –ì–ò–° –ñ–ö–•) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class RegionalMunicipalAgent(RAGAgent):
    def __init__(self):
        super().__init__("–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏ –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã–µ –∞–∫—Ç—ã", [
            "—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–∞–∫–æ–Ω", "–º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã–π –∞–∫—Ç", "–∑–∞–∫–æ–Ω —Å—É–±—ä–µ–∫—Ç–∞", "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –º—ç—Ä–∏–∏", "—Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä–∞",
            "—Ç–∞—Ä–∏—Ñ –≤ [—Ä–µ–≥–∏–æ–Ω]", "–Ω–æ—Ä–º–∞—Ç–∏–≤ –≤ [–≥–æ—Ä–æ–¥]", "–ø—Ä–æ–≥—Ä–∞–º–º–∞ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞ [—Ä–µ–≥–∏–æ–Ω]", "–ª—å–≥–æ—Ç—ã –≤ [—Å—É–±—ä–µ–∫—Ç]",
            "–º–µ—Å—Ç–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞", "–º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã–µ –Ω–æ—Ä–º—ã", "–∞–∫—Ç –º–µ—Å—Ç–Ω–æ–≥–æ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "–∑–∞–∫–æ–Ω [–æ–±–ª–∞—Å—Ç—å/–∫—Ä–∞–π/—Ä–µ—Å–ø—É–±–ª–∏–∫–∞]",
            "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ [–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞]", "—Ç–∞—Ä–∏—Ñ –Ω–∞ –æ—Ç–æ–ø–ª–µ–Ω–∏–µ –≤ –º–æ—Å–∫–≤–µ", "–Ω–æ—Ä–º–∞—Ç–∏–≤ –ø–æ —Ç–∫–æ –≤ —Å–ø–±"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –∏ –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É –≤ —Å—Ñ–µ—Ä–µ –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º: \n\n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –ó–∞–∫–æ–Ω —Å—É–±—ä–µ–∫—Ç–∞ –†–§, –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ —Å—É–±—ä–µ–∫—Ç–∞ –†–§, –†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ, –†–µ—à–µ–Ω–∏–µ –î—É–º—ã/–°–æ–≤–µ—Ç–∞ –¥–µ–ø—É—Ç–∞—Ç–æ–≤, –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –º—ç—Ä–∏–∏. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–ó–∞–∫–æ–Ω –ß–µ–ª—è–±–∏–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ ‚ÑñXXX-–ó–û, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –ú–æ—Å–∫–≤—ã ‚ÑñXXX-–ü–ü, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–£—Ç–æ—á–Ω–∏, —á—Ç–æ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∞–∫—Ç—ã –Ω–µ –º–æ–≥—É—Ç –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç—å —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É (–ñ–ö –†–§, –§–ó). \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ö–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π/–º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã–π –∞–∫—Ç —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å? \n"
            f"- –ö–∞–∫–æ–≤—ã –µ–≥–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è? \n"
            f"- –ì–¥–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–∫—Ç–∞? (–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç —Ä–µ–≥–∏–æ–Ω–∞/–≥–æ—Ä–æ–¥–∞) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class CourtPracticeAgent(RAGAgent):
    def __init__(self):
        super().__init__("–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –∏ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è", [
            "—Å—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞", "—Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –≤—Å —Ä—Ñ", "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–µ–Ω—É–º–∞", "–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Å", "—Ä–µ—à–µ–Ω–∏–µ —Å—É–¥–∞",
            "–ø–æ–∑–∏—Ü–∏—è –≤–µ—Ä—Ö–æ–≤–Ω–æ–≥–æ —Å—É–¥–∞", "–∫–∞–∫ —Å—É–¥—ã —Ç—Ä–∞–∫—Ç—É—é—Ç", "–∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞", "–æ–±–∑–æ—Ä —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏",
            "–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Å —Ä—Ñ", "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–µ–Ω—É–º–∞ –≤—Å —Ä—Ñ", "–æ–±–∑–æ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏", "—Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏–µ –º–∏–Ω—Å—Ç—Ä–æ—è", "–ø–∏—Å—å–º–æ —Ä–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —é—Ä–∏—Å—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ –∏ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è—Ö –≤—ã—Å—à–∏—Ö —Å—É–¥–æ–≤ –≤ —Å—Ñ–µ—Ä–µ –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏ –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –í–µ—Ä—Ö–æ–≤–Ω–æ–≥–æ –°—É–¥–∞ –†–§, –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ü–ª–µ–Ω—É–º–∞ –í–° –†–§, –û–±–∑–æ—Ä—ã —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏. \n"
            f"- –í—Ç–æ—Ä–∏—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏: –ü–∏—Å—å–º–∞ –∏ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –ú–∏–Ω—Å—Ç—Ä–æ—è –†–§, –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞, –†–æ—Å–ø–æ—Ç—Ä–µ–±–Ω–∞–¥–∑–æ—Ä–∞. \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫. \n"
            f"- –§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è —Å—É—Ç—å¬ª. \n"
            f"- –§–æ—Ä–º–∞—Ç –¥–ª—è —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏–π: ¬´–ü–∏—Å—å–º–æ –ú–∏–Ω—Å—Ç—Ä–æ—è –†–§ –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì ‚ÑñXXX¬ª. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –±–∞–∑–∞¬ª. –£–∫–∞–∂–∏, –Ω–∞ –∫–∞–∫–∏–µ —Å—Ç–∞—Ç—å–∏ –ñ–ö –†–§, –§–ó –∏–ª–∏ –ü–ü –†–§ –æ–ø–∏—Ä–∞–µ—Ç—Å—è —Å—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞. \n\n"
            f"–û–±—ä—è—Å–Ω–∏, —á—Ç–æ —Å—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –ø—Ä–∞–≤–∞ –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –Ω–∏–∂–µ—Å—Ç–æ—è—â–∏—Ö —Å—É–¥–æ–≤. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ö–∞–∫–æ–≤–∞ –ø–æ–∑–∏—Ü–∏—è –í–µ—Ä—Ö–æ–≤–Ω–æ–≥–æ –°—É–¥–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É? \n"
            f"- –ù–∞ –∫–∞–∫–∏–µ –Ω–æ—Ä–º—ã –∑–∞–∫–æ–Ω–∞ –æ–Ω–∞ —Å—Å—ã–ª–∞–µ—Ç—Å—è? \n"
            f"- –ö–∞–∫ —ç—Ç–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ? \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class LicensingControlAgent(RAGAgent):
    def __init__(self):
        super().__init__("–õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–∞ –£–ö", [
            "–ª–∏—Ü–µ–Ω–∑–∏—è —É–∫", "–≥–∂–∏", "–≥–æ—Å–∂–∏–ª–∏–Ω—Å–ø–µ–∫—Ü–∏—è", "–ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∫", "–æ—Ç–∑—ã–≤ –ª–∏—Ü–µ–Ω–∑–∏–∏", "–Ω–∞—Ä—É—à–µ–Ω–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–∏",
            "–∂–∞–ª–æ–±–∞ –≤ –≥–∂–∏", "–ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Å–∂–∏–ª–∏–Ω—Å–ø–µ–∫—Ü–∏–∏", "–ø—Ä–µ–¥–ø–∏—Å–∞–Ω–∏–µ –≥–∂–∏", "–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —É–∫", "—à—Ç—Ä–∞—Ñ –¥–ª—è —É–∫",
            "—Ä–µ–µ—Å—Ç—Ä –ª–∏—Ü–µ–Ω–∑–∏–π", "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é —É–∫", "—É—Å–ª–æ–≤–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏", "—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —É–∫", "–æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å —É–∫ –≤ –≥–∂–∏"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—é –∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∫–æ–Ω—Ç—Ä–æ–ª—é –≤ —Å—Ñ–µ—Ä–µ –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –§–ó ‚Ññ99-–§–ó ¬´–û –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –≤–∏–¥–æ–≤ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏¬ª (–ì–ª–∞–≤–∞ 4.1) \n"
            f"- –ü–ü –†–§ ‚Ññ256 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ú–ö–î \n"
            f"- –ü–ü –†–§ ‚Ññ416 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ú–ö–î \n"
            f"- –ö–æ–¥–µ–∫—Å –†–§ –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö (–ö–æ–ê–ü –†–§) ‚Äî —à—Ç—Ä–∞—Ñ—ã \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ö–æ–ê–ü –†–§. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ö–∞–∫–æ–≤—ã –æ—Å–Ω–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–∑—ã–≤–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏? (–§–ó ‚Ññ99-–§–ó, —Å—Ç. 19.1) \n"
            f"- –ö–∞–∫ –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –≤ –ì–ñ–ò? (–§–ó ‚Ññ59-–§–ó, —á–µ—Ä–µ–∑ –ì–ò–° –ñ–ö–• –∏–ª–∏ –ø–∏—Å—å–º–µ–Ω–Ω–æ) \n"
            f"- –ö–∞–∫–æ–≤—ã —Å—Ä–æ–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∂–∞–ª–æ–±—ã? (30 –¥–Ω–µ–π ‚Äî –§–ó ‚Ññ59-–§–ó, —Å—Ç. 12) \n"
            f"- –ö–∞–∫–∏–µ —à—Ç—Ä–∞—Ñ—ã –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã –¥–ª—è –£–ö? (–ö–æ–ê–ü –†–§, —Å—Ç. 7.23, 14.1.3) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class RSOInteractionAgent(RAGAgent):
    def __init__(self):
        super().__init__("–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –†–°–û", [
            "—Ä—Å–æ", "—Ä–µ—Å—É—Ä—Å–æ—Å–Ω–∞–±–∂–∞—é—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", "–ø—Ä—è–º–æ–π –¥–æ–≥–æ–≤–æ—Ä —Å —Ä—Å–æ", "–∞–∫—Ç —Å–≤–µ—Ä–∫–∏ —Å —Ä—Å–æ", "–ø–µ—Ä–µ–¥–∞—á–∞ –ø–æ–∫–∞–∑–∞–Ω–∏–π —Ä—Å–æ",
            "–Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —Ä—Å–æ", "–ø–ª–∞—Ç–µ–∂ —Ä—Å–æ", "–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä—Å–æ", "–∫–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥–∏ —Ä—Å–æ", "–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Ä—Å–æ", "–≥—Ä–∞–Ω–∏—Ü–∞ –±–∞–ª–∞–Ω—Å–æ–≤–æ–π –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏",
            "—Ç–µ–ø–ª–æ–≤–∞—è —Å–µ—Ç—å", "–≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥–Ω–∞—è —Å–µ—Ç—å", "–∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ—Ç—å", "—ç–ª–µ–∫—Ç—Ä–æ—Å–µ—Ç–∏", "–≥–∞–∑–æ–≤—ã–µ —Å–µ—Ç–∏", "–ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö", "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä—Å–æ"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é –º–µ–∂–¥—É –£–ö/–¢–°–ñ –∏ –†–µ—Å—É—Ä—Å–æ—Å–Ω–∞–±–∂–∞—é—â–∏–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏ (–†–°–û). –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –ü–ü –†–§ ‚Ññ354 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ \n"
            f"- –ü–ü –†–§ ‚Ññ307 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ (–¥–ª—è –ø—Ä—è–º—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤) \n"
            f"- –ü–ü –†–§ ‚Ññ554 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ—Å–Ω–∞–±–∂–∞—é—â–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π \n"
            f"- –î–æ–≥–æ–≤–æ—Ä—ã —ç–Ω–µ—Ä–≥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è, –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è –∏ —Ç.–¥. \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, —É—Å–ª–æ–≤–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ. \n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏: \n\n"
            f"1. –û–ø—Ä–µ–¥–µ–ª–∏ –∑–æ–Ω—É –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏: –≥–¥–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≥—Ä–∞–Ω–∏—Ü–∞ –±–∞–ª–∞–Ω—Å–æ–≤–æ–π –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏? (–ü–ü –†–§ ‚Ññ354, –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Ññ1) \n"
            f"2. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∑–æ–Ω–µ –†–°–û: —É–∫–∞–∂–∏, —á—Ç–æ –£–ö –¥–æ–ª–∂–Ω–∞ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –†–°–û –∏ –∂–¥–∞—Ç—å –∏—Ö –æ—Ç–≤–µ—Ç–∞. \n"
            f"3. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∑–æ–Ω–µ –£–ö: —É–∫–∞–∂–∏, —á—Ç–æ –£–ö –æ–±—è–∑–∞–Ω–∞ —Ä–µ—à–∏—Ç—å –µ–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ. \n"
            f"4. –û–±—ä—è—Å–Ω–∏ –ø–æ—Ä—è–¥–æ–∫ –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ–∫–∞–∑–∞–Ω–∏–π –∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∞–∫—Ç–æ–≤ —Å–≤–µ—Ä–∫–∏. \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class SafetySecurityAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∞–Ω—Ç–∏—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—â–µ–Ω–Ω–æ—Å—Ç—å", [
            "–ø–æ–∂–∞—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–∞–Ω—Ç–∏—Ç–µ—Ä—Ä–æ—Ä", "–∞–Ω—Ç–∏—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—â–µ–Ω–Ω–æ—Å—Ç—å", "–ø–æ–∂–∞—Ä–æ—Ç—É—à–µ–Ω–∏–µ", "–ø–æ–∂–∞—Ä–Ω–∞—è —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è",
            "—Å–∏—Å—Ç–µ–º–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è", "–ø–æ–∂–∞—Ä–Ω—ã–π —â–∏—Ç", "–æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å", "—ç–≤–∞–∫—É–∞—Ü–∏–æ–Ω–Ω—ã–π –≤—ã—Ö–æ–¥", "–ø–æ–∂–∞—Ä–Ω–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞", "–ø–æ–∂–∞—Ä–Ω—ã–π –∫—Ä–∞–Ω",
            "–ø–æ–∂–∞—Ä–Ω—ã–π –≥–∏–¥—Ä–∞–Ω—Ç", "–ø–æ–∂–∞—Ä–Ω—ã–π –Ω–∞–¥–∑–æ—Ä", "–º—á—Å", "–ø—Ä–æ–≤–µ—Ä–∫–∞ –º—á—Å", "–ø–æ–∂–∞—Ä–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç", "–ø–æ–∂–∞—Ä–Ω—ã–π –∞—É–¥–∏—Ç", "–ø–æ–∂–∞—Ä–Ω—ã–π –º–∏–Ω–∏–º—É–º"
        ])
    
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî –∏–Ω–∂–µ–Ω–µ—Ä –ø–æ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∞–Ω—Ç–∏—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –∑–∞—â–∏—â–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –§–ó ‚Ññ123-–§–ó ¬´–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç –æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏¬ª \n"
            f"- –§–ó ‚Ññ390-–§–ó ¬´–û –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏¬ª \n"
            f"- –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§ ‚Ññ1006 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∂–∞—Ä–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ \n"
            f"- –°–ü 54.13330.2016 ‚Äî –°–≤–æ–¥ –ø—Ä–∞–≤–∏–ª –ø–æ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –ú–ö–î \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –°–ü, –ì–û–°–¢. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –ö–∞–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –ú–ö–î? (–°–ü 54.13330.2016) \n"
            f"- –ö—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∏—Ö —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏ –∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å? (–£–ö/–¢–°–ñ ‚Äî –ü–ü –†–§ ‚Ññ491) \n"
            f"- –ö–∞–∫ —á–∞—Å—Ç–æ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∏? (–ü–ü –†–§ ‚Ññ1006) \n"
            f"- –ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è? (–∂–∞–ª–æ–±–∞ –≤ –ú–ß–° –∏–ª–∏ –ì–ñ–ò) \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

class EnergyEfficiencyAgent(RAGAgent):
    def __init__(self):
        super().__init__("–≠–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–µ –∏ —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", [
            "—ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–µ", "—ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "—Ñ–∑ 261", "—ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ", "—ç–Ω–µ—Ä–≥–æ–∞—É–¥–∏—Ç",
            "–æ–±—â–µ–¥–æ–º–æ–≤–æ–π –ø—Ä–∏–±–æ—Ä —É—á–µ—Ç–∞", "–æ–¥–ø—É", "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–∏–±–æ—Ä —É—á–µ—Ç–∞", "–∏–ø—É", "—Ç–µ–ø–ª–æ–≤–∏–∑–∏–æ–Ω–Ω–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ",
            "—É—Ç–µ–ø–ª–µ–Ω–∏–µ —Ñ–∞—Å–∞–¥–∞", "–∑–∞–º–µ–Ω–∞ –æ–∫–æ–Ω", "–º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º", "—ç–Ω–µ—Ä–≥–æ—Å–µ—Ä–≤–∏—Å–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç", "—ç—Å–∫", "—ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"
        ])
        
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."   
    
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏—é –∏ –ø–æ–≤—ã—à–µ–Ω–∏—é —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ñ–ö–•. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –§–ó ‚Ññ261-–§–ó ¬´–û–± —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–∏ –∏ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏¬ª \n"
            f"- –ü–ü –†–§ ‚Ññ603 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ \n"
            f"- –ü–ü –†–§ ‚Ññ354 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ (—Ä–∞–∑–¥–µ–ª—ã –ø–æ –ø—Ä–∏–±–æ—Ä–∞–º —É—á–µ—Ç–∞) \n"
            f"- –ü—Ä–∏–∫–∞–∑ –ú–∏–Ω—Å—Ç—Ä–æ—è ‚Ññ721/–ø—Ä ‚Äî –ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—é —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ü—Ä–∏–∫–∞–∑. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ. \n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: \n\n"
            f"- –û–±—è–∑–∞–Ω –ª–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–±–æ—Ä —É—á–µ—Ç–∞? (–§–ó ‚Ññ261-–§–ó, —Å—Ç. 13) \n"
            f"- –ö—Ç–æ –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–æ–¥–∏—Ç—å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ? (–§–ó ‚Ññ261-–§–ó, —Å—Ç. 16) \n"
            f"- –ö–∞–∫–∏–µ –º–µ—Ä—ã –ø–æ —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏—é –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ –ú–ö–î? \n"
            f"- –ß—Ç–æ —Ç–∞–∫–æ–µ —ç–Ω–µ—Ä–≥–æ—Å–µ—Ä–≤–∏—Å–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∏ –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç? \n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class ReceiptProcessingAgent(RAGAgent):
    def __init__(self):
        super().__init__("–û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ–∫–æ–≤ –∏ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", [
            "—á–µ–∫", "—Å–∫–∞–Ω —á–µ–∫–∞", "—Ñ–æ—Ç–æ —á–µ–∫–∞", "qr-–∫–æ–¥", "—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π —á–µ–∫", "—Ñ–Ω", "—Ñ–¥", "—Ñ–ø–¥",
            "—Ç–µ–≥", "—Ç–µ–≥–∏ —á–µ–∫–∞", "—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —á–µ–∫–∞", "—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Ç–µ–≥–æ–≤", "–æ—à–∏–±–∫–∞ –≤ —á–µ–∫–µ", "–Ω–µ–≤–µ—Ä–Ω—ã–π —á–µ–∫",
            "—á–µ–∫ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç", "—á–µ–∫ –Ω–µ —Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è", "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞", "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–µ–π",
            "xml —á–µ–∫", "json —á–µ–∫", "–æ—Ñ–¥", "–æ–ø–µ—Ä–∞—Ç–æ—Ä —Ñ–∏—Å–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö", "—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å", "—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫",
            "–ø—Ä–∏–∑–Ω–∞–∫ —Ä–∞—Å—á—ë—Ç–∞", "–∫–∞—Å—Å–æ–≤—ã–π —á–µ–∫", "–±–ª–∞–Ω–∫ —Å—Ç—Ä–æ–≥–æ–π –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏", "–±—Å–æ", "–æ–Ω–ª–∞–π–Ω-–∫–∞—Å—Å–∞", "54-—Ñ–∑",
            "—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç", "—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "—Ç–µ–≥ 1008", "—Ç–µ–≥ 1020", "—Ç–µ–≥ 1054", "—Ç–µ–≥ 1055", "—Ç–µ–≥ 1081",
            "—Ç–µ–≥ 1102", "—Ç–µ–≥ 1162", "—Ç–µ–≥ 1163", "—Ç–µ–≥ 1187", "—Ç–µ–≥ 1192", "—Ç–µ–≥ 1203", "—Ç–µ–≥ 1207", "—Ç–µ–≥ 1227", "–ø–ª–∞—Ç–µ–∂–Ω—ã–π –∞–≥–µ–Ω—Ç",
            "–ø–æ—Å—Ç–∞–≤—â–∏–∫"
        ])
    
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∏—Å–∫–∞–ª—å–Ω—ã—Ö —á–µ–∫–æ–≤ –∏ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –§–ó ‚Ññ54-–§–ó ¬´–û –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏¬ª \n"
            f"- –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§ ‚Ññ745 ‚Äî –ü—Ä–∞–≤–∏–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ö–ö–¢ \n"
            f"- –ü—Ä–∏–∫–∞–∑ –§–ù–° –†–æ—Å—Å–∏–∏ ‚Ññ–ï–î-7-20/662@ ‚Äî –§–æ—Ä–º–∞—Ç—ã —Ñ–∏—Å–∫–∞–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ \n"
            f"- –ì–û–°–¢ –† 59244-2020 ‚Äî –§–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–º–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π —Å –û–§–î \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ü—Ä–∏–∫–∞–∑ –§–ù–°, –ì–û–°–¢. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü—Ä–∏–∫–∞–∑ –§–ù–° ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏: \n\n"
            f"1. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ —Ç–µ–≥–æ–≤ —á–µ–∫–∞**: \n\n"
            f"   - –£–∫–∞–∂–∏: '–¢–µ–≥–∏ ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ü—Ä–∏–∫–∞–∑–æ–º –§–ù–° ‚Ññ–ï–î-7-20/662@.' \n"
            f"   - –ü—Ä–∏–≤–µ–¥–∏ —Ç–∞–±–ª–∏—Ü—É —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö —Ç–µ–≥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–µ–≥ 1054 ‚Äî –ü—Ä–∏–∑–Ω–∞–∫ –ø—Ä–µ–¥–º–µ—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞, —Ç–µ–≥ 1203 ‚Äî –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É). \n"
            f"   - –û–±—ä—è—Å–Ω–∏: '–¢–µ–≥ 1081 (–ü—Ä–∏–∑–Ω–∞–∫ —Å–ø–æ—Å–æ–±–∞ —Ä–∞—Å—á–µ—Ç–∞) –∏ —Ç–µ–≥ 1054 (–ü—Ä–∏–∑–Ω–∞–∫ –ø—Ä–µ–¥–º–µ—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞) —è–≤–ª—è—é—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∏ –∫—Ä–∏—Ç–∏—á–Ω—ã–º–∏ –¥–ª—è –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —á–µ–∫–∞.' \n\n"
            f"2. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **–æ—à–∏–±–∫–∏ –≤ —á–µ–∫–µ –∏–ª–∏ –µ–≥–æ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏**: \n\n"
            f"   - –ù–∞—á–Ω–∏ —Å: '–°–æ–≥–ª–∞—Å–Ω–æ –§–ó ‚Ññ54-–§–ó, —Å—Ç. 4.7, —á–µ–∫ —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º, –µ—Å–ª–∏ –≤ –Ω–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.' \n"
            f"   - –ü–µ—Ä–µ—á–∏—Å–ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã: –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –ò–ù–ù, –∞–¥—Ä–µ—Å —Ä–∞—Å—á–µ—Ç–æ–≤, –ø—Ä–∏–∑–Ω–∞–∫ —Ä–∞—Å—á–µ—Ç–∞, —Å—É–º–º–∞, –§–ù, –§–î, –§–ü–î. \n"
            f"   - –£–∫–∞–∂–∏: '–ï—Å–ª–∏ —á–µ–∫ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å–∞–π—Ç–µ –§–ù–° –∏–ª–∏ –≤ –û–§–î, —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–Ω –Ω–µ –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.' \n\n"
            f"3. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–µ–∫–æ–≤**: \n\n"
            f"   - –û–±—ä—è—Å–Ω–∏: '–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–µ–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö XML/JSON-–≤–µ—Ä—Å–∏—é, –ø–æ–ª—É—á–µ–Ω–Ω—É—é –æ—Ç –û–§–î –∏–ª–∏ —á–µ—Ä–µ–∑ QR-–∫–æ–¥.' \n"
            f"   - –£–∫–∞–∂–∏: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ (1–°, SAP) –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ API –û–§–î –∏–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.' \n"
            f"   - –ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —á–µ–∫–æ–≤ —Ç—Ä–µ–±—É—é—Ç OCR-—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è, —á—Ç–æ –º–µ–Ω–µ–µ –Ω–∞–¥–µ–∂–Ω–æ, —á–µ–º —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∏—Å–∫–∞–ª—å–Ω—ã–º–∏ —Ç–µ–≥–∞–º–∏.' \n\n"
            f"4. –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π, –≥–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å —á–µ–∫–∞: \n\n"
            f"   - '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –§–ù–°: https://check.ofd.ru' \n"
            f"   - '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –û–§–î (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¢–∞–∫—Å–∫–æ–º, –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –û–§–î)' \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )
        
class PassportRegistrationAgent(RAGAgent):
    def __init__(self):
        super().__init__("–ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–π —É—á–µ—Ç –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", [
            "–ø—Ä–æ–ø–∏—Å–∫–∞", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞", "–≤—ã–ø–∏—Å–∫–∞", "–≤—ã–ø–∏—Å–∞—Ç—å—Å—è",
            "–ø—Ä–æ–ø–∏—Å–∞—Ç—å—Å—è", "–æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø–∏—Å–∫—É", "–¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", "–≥–¥–µ –æ—Ñ–æ—Ä–º–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é",
            "–ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–π —Å—Ç–æ–ª", "–º—Ñ—Ü —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–≥–æ—Å—É—Å–ª—É–≥–∏ –ø—Ä–æ–ø–∏—Å–∫–∞", "—Ñ–æ—Ä–º–∞ ‚Ññ6", "—Ñ–æ—Ä–º–∞ ‚Ññ7",
            "—Å–Ω—è—Ç–∏–µ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —É—á–µ—Ç–∞", "–ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —É—á–µ—Ç", "–º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —É—á–µ—Ç",
            "–º–∏–≥—Ä–∞—Ü–∏—è", "–º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç", "–æ—Ç–¥–µ–ª –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –º–∏–≥—Ä–∞—Ü–∏–∏", "–æ–º–≤–¥", "–ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–π —É—á–µ—Ç",
            "—Å–ø—Ä–∞–≤–∫–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", "–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
            "–¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–∞—Å–ø–æ—Ä—Ç–∏—Å—Ç—É", "—á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø—Ä–æ–ø–∏—Å–∫–∏", "–∫–∞–∫ –≤—ã–ø–∏—Å–∞—Ç—å—Å—è –∏–∑ –∫–≤–∞—Ä—Ç–∏—Ä—ã", "–∫–∞–∫ –ø—Ä–æ–ø–∏—Å–∞—Ç—å—Å—è –≤ –∫–≤–∞—Ä—Ç–∏—Ä—É"
        ])
    
    def _perform_web_search(self, query: str, max_results: int = 3) -> str:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¢–û–ü —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤.
        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º. –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.
        –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º.
        """
        OFFICIAL_DOMAINS = {
            "cbr.ru", "government.ru", "kremlin.ru", "rosstat.gov.ru",
            "minfin.gov.ru", "who.int", "nasa.gov", "cdc.gov", "unesco.org"
        }
    
        BLACKLISTED_DOMAINS = {
            "otvet.mail.ru", "ask.fm", "irecommend.ru", "pikabu.ru",
            "zen.yandex.ru", "thequestion.ru", "quora.com", "reddit.com",
            "fishki.net", "yaplakal.com"
        }
    
        for attempt in range(2):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 1 —Ä–∞–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            try:
                with DDGS(timeout=10) as ddgs:
                    results = ddgs.text(query, max_results=10)  # –ë–µ—Ä—ë–º 10 –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    formatted_results = []
                    official_found = False
    
                    for r in results:
                        href = r.get('href', '')
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–º–µ–Ω
                        try:
                            domain = href.split('/')[2].lower()
                        except IndexError:
                            continue
    
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        if any(bad in domain for bad in BLACKLISTED_DOMAINS):
                            continue
    
                        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
                        if any(official in domain for official in OFFICIAL_DOMAINS):
                            snippet = (
                                f"[–û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö]\n"
                                f"{r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            return snippet.strip()
    
                        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –µ—Å–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–µ—Ç
                        if not official_found:
                            snippet = (
                                f"‚Ä¢ {r['body']}\n"
                                f"–ò—Å—Ç–æ—á–Ω–∏–∫: {href}\n"
                            )
                            formatted_results.append(snippet)
    
                            if len(formatted_results) >= max_results:
                                break
    
                    if formatted_results:
                        return "\n".join(formatted_results).strip()
                    else:
                        return "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    
            except Exception as e:
                if attempt == 0:
                    time.sleep(2)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
                return f"–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {str(e)}"
    
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
    def _build_prompt(self, summary: str, context_text: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        extra = self.improve_prompt_from_feedback()
        web_results = self._perform_web_search(summary)
        return (
            f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {summary} \n\n"
            f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_text}{extra}{web_results} \n\n"
            f"–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–∞—Å–ø–æ—Ä—Ç–Ω–æ–º—É —É—á–µ—Ç—É –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≥—Ä–∞–∂–¥–∞–Ω –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞. –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤: \n\n"
            f"- –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç: –ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§ ‚Ññ713 ¬´–û–± —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ü—Ä–∞–≤–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–Ω—è—Ç–∏—è –≥—Ä–∞–∂–¥–∞–Ω –†–§ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —É—á–µ—Ç–∞ –ø–æ –º–µ—Å—Ç—É –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –∏ –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞¬ª \n"
            f"- –§–ó ‚Ññ5242-1 ¬´–û –ø—Ä–∞–≤–µ –≥—Ä–∞–∂–¥–∞–Ω –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–≤–æ–±–æ–¥—É –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è, –≤—ã–±–æ—Ä –º–µ—Å—Ç–∞ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –∏ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏¬ª \n"
            f"- –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç –ú–í–î –ø–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —É—Å–ª—É–≥–∏ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–ü—Ä–∏–∫–∞–∑ –ú–í–î –†–æ—Å—Å–∏–∏ ‚Ññ984) \n"
            f"- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –§–ó, –ü–ü –†–§, –ü—Ä–∏–∫–∞–∑ –ú–í–î. \n"
            f"- –§–æ—Ä–º–∞—Ç: ¬´–§–ó ‚ÑñXXX-–§–ó, —Å—Ç. Y¬ª –∏–ª–∏ ¬´–ü–ü –†–§ ‚ÑñXXX, –ø. Y¬ª ‚Äî —Å—Ç—Ä–æ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –≤–æ–∫—Ä—É–≥ –Ω–æ–º–µ—Ä–∞. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞¬ª. \n\n"
            f"–§–æ—Ä–º–∞—Ç –¥–ª—è —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏: ¬´**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–° –†–§ ‚ÑñXXX-–≠–°XX-XXXX –æ—Ç –î–î.–ú–ú.–ì–ì–ì–ì** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–æ–∑–∏—Ü–∏—è —Å—É–¥–∞¬ª. \n\n"
            f"–ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏: ¬´–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç¬ª. \n\n"
            f"–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏: \n\n"
            f"1. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **–º–µ—Å—Ç–∞ –ø–æ–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤**: \n\n"
            f"   - –£–∫–∞–∂–∏: '–î–æ–∫—É–º–µ–Ω—Ç—ã –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å –ª–∏—á–Ω–æ –≤ –æ—Ç–¥–µ–ª–µ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ú–í–î –†–§, –≤ –ú–§–¶ –∏–ª–∏ –æ–Ω–ª–∞–π–Ω —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç–∞–ª –ì–æ—Å—É—Å–ª—É–≥–∏ (www.gosuslugi.ru).' \n"
            f"   - –î–æ–±–∞–≤—å: '–ü–æ–¥–∞—á–∞ —á–µ—Ä–µ–∑ –ì–æ—Å—É—Å–ª—É–≥–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É 30% –Ω–∞ –≥–æ—Å–ø–æ—à–ª–∏–Ω—É (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ).' \n\n"
            f"2. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤**: \n\n"
            f"   - –ü–µ—Ä–µ—á–∏—Å–ª–∏: '–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã: –ø–∞—Å–ø–æ—Ä—Ç, –∑–∞—è–≤–ª–µ–Ω–∏–µ –ø–æ —Ñ–æ—Ä–º–µ ‚Ññ6, –¥–æ–∫—É–º–µ–Ω—Ç-–æ—Å–Ω–æ–≤–∞–Ω–∏–µ (—Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, –¥–æ–≥–æ–≤–æ—Ä –Ω–∞–π–º–∞, –∑–∞—è–≤–ª–µ–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞).' \n"
            f"   - –£—Ç–æ—á–Ω–∏: '–ï—Å–ª–∏ –≤—ã —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å –Ω–µ –≤ —Å–≤–æ–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ –≤—Å–µ—Ö —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –≤ –ø–∏—Å—å–º–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ.' \n\n"
            f"3. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **—Ä–æ–ª–∏ —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ (–£–ö)**: \n\n"
            f"   - –û–±—ä—è—Å–Ω–∏: '–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è –ù–ï –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –ø—Ä–æ–ø–∏—Å–∫—É. –≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ä–≥–∞–Ω–æ–≤ –ú–í–î.' \n"
            f"   - –£–∫–∞–∂–∏: '–£–ö –º–æ–∂–µ—Ç –≤—ã–¥–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ –æ–ø–ª–∞—Ç–µ –ñ–ö–£, –µ—Å–ª–∏ –æ–Ω–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –°—Ä–æ–∫ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è ‚Äî 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è (–§–ó ‚Ññ152-–§–ó).' \n"
            f"   - –ù–∞–ø–æ–º–Ω–∏: '–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –æ–±—è–∑–∞–Ω—ã —Å–æ–æ–±—â–∏—Ç—å –æ–± —ç—Ç–æ–º –≤ –£–ö –¥–ª—è –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ª–∏—Ü–µ–≤–æ–º—É —Å—á–µ—Ç—É –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π.' \n\n"
            f"4. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è **—Å—Ä–æ–∫–æ–≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è**: \n\n"
            f"   - –£–∫–∞–∂–∏: '–°—Ä–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ ‚Äî 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –µ—Å–ª–∏ –ø–æ–¥–∞—á–∞ –±—ã–ª–∞ –ø–æ –º–µ—Å—Ç—É –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∂–∏–ª–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è. –ï—Å–ª–∏ –ø–æ–¥–∞—á–∞ –±—ã–ª–∞ –≤ –¥—Ä—É–≥–æ–º —Ä–µ–≥–∏–æ–Ω–µ ‚Äî –¥–æ 8 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π (–ü–ü –†–§ ‚Ññ713, –ø. 22).' \n\n"
            f"{self.get_role_instruction(role)} \n\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

# ---------------------------
# MetaAgent ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
# ---------------------------
class MetaAgent:
    def __init__(self, rag_system):
        self.rag_system = rag_system
        self.agents = rag_system.agents
        self.dialog_log = []

    def route_intelligently(self, query: str) -> Tuple[Optional[RAGAgent], List[RAGAgent]]:
        """
        –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂: (–æ—Å–Ω–æ–≤–Ω–æ–π –∞–≥–µ–Ω—Ç, —Å–ø–∏—Å–æ–∫ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏)
        """
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤, —á—å–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –∑–∞–ø—Ä–æ—Å–æ–º
        primary_candidates = [a for a in self.agents if a.matches(query) and not isinstance(a, FallbackAgent)]
        secondary_candidates = []

        # –ï—Å–ª–∏ –Ω–µ—Ç –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º Fallback
        if not primary_candidates:
            fallback = next((a for a in self.agents if isinstance(a, FallbackAgent)), None)
            return fallback, []

        # –í—ã–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        def match_score(agent: RAGAgent, qry: str) -> int:
            q_words = set(re.findall(r'\b[–∞-—è—ëa-z0-9]+\b', qry.lower()))
            return sum(1 for kw in agent.keywords if kw in q_words)

        primary_agent = max(primary_candidates, key=lambda a: match_score(a, query))

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
        # –≠—Ç–æ —ç–≤—Ä–∏—Å—Ç–∏–∫–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ —Ç–∏–ø–∏—á–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏—è—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ FAQ

        if isinstance(primary_agent, EmergencyAgent):
            # –ü—Ä–∏ –∞–≤–∞—Ä–∏–∏ —á–∞—Å—Ç–æ –Ω—É–∂–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–¥—Ä—è–¥—á–∏–∫–∞–º –∏ –∫–æ–Ω—Ç—Ä–æ–ª—é –∫–∞—á–µ—Å—Ç–≤–∞ (–¥–ª—è –ø–µ—Ä–µ—Ä–∞—Å—á—ë—Ç–∞)
            secondary_candidates = [
                a for a in self.agents 
                if isinstance(a, (ContractorAgent, QualityControlAgent, WasteManagementAgent))
            ]

        elif isinstance(primary_agent, TariffAgent):
            # –ü—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞—Ö –ø–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è–º —á–∞—Å—Ç–æ –Ω—É–∂–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–∏–±–æ—Ä–∞–º —É—á—ë—Ç–∞ –∏ –∞—É–¥–∏—Ç—É
            secondary_candidates = [
                a for a in self.agents 
                if isinstance(a, (MeterAgent, BillingAuditAgent, PaymentDocumentsAgent))
            ]

        elif isinstance(primary_agent, WasteManagementAgent):
            # –í—ã–≤–æ–∑ –¢–ö–û —á–∞—Å—Ç–æ —Å–≤—è–∑–∞–Ω —Å –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º–∏ –∏ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            secondary_candidates = [
                a for a in self.agents 
                if isinstance(a, (NormativeAgent, DisclosureAgent, ContractorAgent))
            ]

        elif isinstance(primary_agent, TechnicalAgent):
            # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –º–æ–≥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –±–∞–∑—ã –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç—É
            secondary_candidates = [
                a for a in self.agents 
                if isinstance(a, (NormativeAgent, CapitalRepairAgent, QualityControlAgent))
            ]

        elif isinstance(primary_agent, LegalClaimsAgent):
            # –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏ —Ç—Ä–µ–±—É—é—Ç –∑–Ω–∞–Ω–∏—è –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤–∑—ã—Å–∫–∞–Ω–∏—è
            secondary_candidates = [
                a for a in self.agents 
                if isinstance(a, (NormativeAgent, DebtManagementAgent, TariffAgent))
            ]

        # üÜï –î–û–ë–ê–í–õ–ï–ù–û: –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∞–≥–µ–Ω—Ç ‚Äî ContractorAgent, –ø–æ–¥–∫–ª—é—á–∞–µ–º HistoryAgent
        elif isinstance(primary_agent, ContractorAgent):
            secondary_candidates = [
                a for a in self.agents 
                if isinstance(a, (HistoryAgent, QualityControlAgent))
            ]

        # –£–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö (–µ—Å–ª–∏ –≤–¥—Ä—É–≥ –ø–æ–ø–∞–ª)
        secondary_candidates = [a for a in secondary_candidates if a != primary_agent]

        return primary_agent, secondary_candidates

    def route(self, query: str, exclude_agent: RAGAgent = None) -> Optional[RAGAgent]:
        """
        –£—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.
        –ü—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞.
        """
        primary, _ = self.route_intelligently(query)
        return primary if primary != exclude_agent else None

    def should_consult_others(self, agent: RAGAgent, query: str) -> bool:
        """
        –£—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥. –¢–µ–ø–µ—Ä—å –ª–æ–≥–∏–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤ route_intelliginely.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç.
        """
        _, secondary = self.route_intelligently(query)
        return len(secondary) > 0

    def log_dialog(self, main_agent: str, consulted_agents: List[str], final_answer: str, query: str):
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞.
        """
        entry = {
            "timestamp": time.time(),
            "query": query,
            "main_agent": main_agent,
            "consulted_agents": consulted_agents,
            "final_answer": final_answer[:500]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–ª—è –ª–æ–≥–∞
        }
        self.dialog_log.append(entry)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥ –≤ —Ñ–∞–π–ª
        try:
            with open("multi_agent_log.json", "w", encoding="utf-8") as f:
                json.dump(self.dialog_log, f, ensure_ascii=False, indent=2)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ª–æ–≥–∞ –¥–∏–∞–ª–æ–≥–∞: {e}")
            
# ---------------------------
# –û—Å–Ω–æ–≤–Ω–æ–π RAGSystem —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∞–≥–µ–Ω—Ç–æ–≤
# ---------------------------

class RAGSystem:
    def __init__(self):
        self.embedding_model = embedding_model
        self.tokenizer = tokenizer
        self.model = model
        self.index = index
        self.chunks_data = chunks_data
        self.model_ctx_tokens = 32768
        self.max_context_tokens = int(self.model_ctx_tokens * 0.6)
        self.chunk_embeddings = None
        self.enable_clarification = False

        self.agents = [
            TariffAgent(),
            NormativeAgent(),
            TechnicalAgent(),
            MeterAgent(),
            DebtAgent(),
            DisclosureAgent(),
            IoTAgent(),
            MeetingAgent(),
            CapitalRepairAgent(),
            EmergencyAgent(),
            ContractorAgent(),
            HistoryAgent(),
            QualityControlAgent(),
            PaymentDocumentsAgent(),
            AccountManagementAgent(),
            BillingAuditAgent(),
            SubsidyAndBenefitsAgent(),
            LegalClaimsAgent(),
            ContractAndMeetingAgent(),
            DebtManagementAgent(),
            IoTIntegrationAgent(),
            WasteManagementAgent(),
            RegionalMunicipalAgent(),
            CourtPracticeAgent(),
            LicensingControlAgent(),
            RSOInteractionAgent(),
            SafetySecurityAgent(),
            EnergyEfficiencyAgent(),
            ReceiptProcessingAgent(),
            PassportRegistrationAgent(),
            FallbackAgent()
        ]

        self.meta_agent = MetaAgent(self)

    def detect_user_role(self, query: str) -> str:
        """
        –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑.
        """
        text = query.lower()
    
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –Ø–≤–Ω—ã–µ —Ñ—Ä–∞–∑—ã-–º–∞—Ä–∫–µ—Ä—ã
        if any(phrase in text for phrase in [
            "—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫", "—è –∂–∏—Ç–µ–ª—å", "–º–æ—è –∫–≤–∞—Ä—Ç–∏—Ä–∞", "–º–æ–π –¥–æ–º", "–º–Ω–µ –Ω–∞—á–∏—Å–ª–∏–ª–∏", "—è —Ö–æ—á—É —É–∑–Ω–∞—Ç—å",
            "–∫–∞–∫ –º–Ω–µ", "–¥–ª—è –º–µ–Ω—è", "–º–æ–π –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç", "–º–æ–∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è", "—è –ø—Ä–æ–∂–∏–≤–∞—é"
        ]):
            return "–∂–∏—Ç–µ–ª—å"
    
        if any(phrase in text for phrase in [
            "–º—ã –∫–∞–∫ —É–∫", "–º—ã —Ç—Å–Ω", "–Ω–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è", "–Ω–∞—á–∏—Å–ª—è–µ–º", "–ø–µ—Ä–µ–¥–∞–µ–º —Ä—Å–æ", "–∞–∫—Ç —Å–≤–µ—Ä–∫–∏ —Å —Ä—Å–æ",
            "—Ä–∞—Å—á–µ—Ç —Å —Ä—Å–æ", "–¥–æ–ª–∂–Ω—ã –∑–∞–ø–ª–∞—Ç–∏—Ç—å —Ä—Å–æ", "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "–Ω–∞—á–∏—Å–ª—è—Ç–æ—Ä", "–Ω–∞—à –¥–æ–º", "–Ω–∞—à–∏ –∂–∏–ª—å—Ü—ã"
        ]):
            return "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"
    
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (–µ—Å–ª–∏ —è–≤–Ω—ã—Ö –º–∞—Ä–∫–µ—Ä–æ–≤ –Ω–µ—Ç)
        # –°—á–∏—Ç–∞–µ–º –±–∞–ª–ª—ã
        resident_score = sum([
            2 if "–º–æ–π" in text or "–º–Ω–µ" in text else 0,
            1 if "–ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ" in text else 0,
            1 if "–ø–æ—á–µ–º—É —Ç–∞–∫ –º–Ω–æ–≥–æ" in text else 0,
            1 if "–∫–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å" in text else 0,
            1 if "–≤—ã–∑–æ–≤–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞" in text else 0,
        ])
    
        executor_score = sum([
            2 if "–º—ã" in text and ("—É–∫" in text or "—Ç—Å–Ω" in text or "–∫–æ–º–ø–∞–Ω–∏—è" in text) else 0,
            1 if "–Ω–∞—á–∏—Å–ª—è–µ–º" in text else 0,
            1 if "—Ä—Å–æ" in text and ("–ø–µ—Ä–µ–¥–∞–µ–º" in text or "–ø–ª–∞—Ç–∏–º" in text) else 0,
            1 if "–∞–∫—Ç —Å–≤–µ—Ä–∫–∏" in text else 0,
            1 if "—Ä–∞—Å—á–µ—Ç" in text and "–∂–∏–ª—å—Ü–∞–º" in text else 0,
        ])
    
        if resident_score > executor_score:
            return "–∂–∏—Ç–µ–ª—å"
        elif executor_score > resident_score:
            return "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"
        else:
            return "—Å–º–µ—à–∞–Ω–Ω–∞—è"

    def _encode_texts(self, texts: List[str], prompt_name: str) -> np.ndarray:
        emb = self.embedding_model.encode(texts, prompt_name=prompt_name, convert_to_numpy=True, normalize_embeddings=True)
        return emb.astype('float32')

    def _preprocess_query(self, query: str) -> str:
        tokens = re.findall(r"\w+|\S", query.lower())
        filtered = [t for t in tokens if t.isalpha() and t not in STOP_WORDS or not t.isalpha()]
        cleaned = " ".join(filtered).strip()
        return cleaned if cleaned else query

    def precompute_chunk_embeddings(self, batch_size: int = 256):
        if not self.chunks_data:
            return
        texts = [c['content'] for c in self.chunks_data]
        embs = []
        for i in range(0, len(texts), batch_size):
            batch = texts[i:i+batch_size]
            embs.append(self._encode_texts(batch, prompt_name="search_document"))
        self.chunk_embeddings = np.vstack(embs)

    def analyze_query_for_clarification(self, original_query: str) -> Tuple[bool, Optional[str], Optional[str]]:
        if not self.enable_clarification:
            return False, None, original_query
        if not original_query.strip():
            return False, None, original_query

        analysis_prompt = (
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {original_query}\n\n"
            f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
            f"–¢—ã ‚Äî —é—Ä–∏—Å—Ç –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ñ–ö–•. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–ø—Ä–æ—Å –∏ —Ñ–æ—Ä–º–∏—Ä—É–π —Ä–µ–∑—é–º–µ –∏–ª–∏ —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å —Å—Ç—Ä–æ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.\n"
            f"–ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —è—Å–µ–Ω ‚Äî —Ñ–æ—Ä–º—É–ª–∏—Ä—É–π summary. –ï—Å–ª–∏ –Ω–µ—è—Å–µ–Ω ‚Äî –∑–∞–¥–∞–≤–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å.\n"
            f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
        )

        try:
            inputs = self.tokenizer(analysis_prompt, return_tensors="pt", truncation=True, max_length=512).to(device)
            with torch.no_grad():
                outputs = self.model.generate(**inputs, max_new_tokens=150, temperature=0.1, do_sample=False, pad_token_id=self.tokenizer.eos_token_id)
            raw_analysis = self.tokenizer.decode(outputs[0], skip_special_tokens=False)
            start_marker = "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"
            start = raw_analysis.find(start_marker)
            if start != -1:
                analysis_part = raw_analysis[start + len(start_marker):].strip()
            else:
                analysis_part = raw_analysis.strip()
            for stop in ["</s>", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", "\n\n"]:
                pos = analysis_part.find(stop)
                if pos != -1:
                    analysis_part = analysis_part[:pos].strip()

            if analysis_part.startswith("–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞,"):
                question = analysis_part[len("–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞,"):].strip().rstrip("?") + "?"
                return True, question, None
            elif "–í–æ–ø—Ä–æ—Å –æ–±:" in analysis_part or "–ó–∞–ø—Ä–æ—Å –æ" in analysis_part:
                summary = analysis_part.replace("–í–æ–ø—Ä–æ—Å –æ–±:", "").replace("–ó–∞–ø—Ä–æ—Å –æ", "").strip()
                return False, None, summary
            else:
                return True, "–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—É—Ç—å –≤–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã –ø–æ –ñ–ö–•.", None

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≤–æ–ø—Ä–æ—Å–∞: {e}")
            return True, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –µ–≥–æ.", None

    def search_relevant_chunks(self, query: str, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è", top_k: int = 5) -> List[Dict]:
        if self.index is None or not self.chunks_data:
            return []
    
        query_vector = self._encode_texts([query], prompt_name="search_query")
        scores, indices = self.index.search(query_vector, top_k * 3)  # –ë–µ—Ä–µ–º –±–æ–ª—å—à–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        results = []
        for idx, score in zip(indices[0], scores[0]):
            if idx == -1: continue
            chunk = self.chunks_data[idx].copy()
            chunk["score"] = float(score)
            results.append(chunk)
    
        # –ù–û–í–´–ô –ë–õ–û–ö: –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –±—É—Å—Ç–∏–Ω–≥ –ø–æ —Ç–µ–≥–∞–º –∏ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        q_lower = query.lower()
    
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É –∑–∞–ø—Ä–æ—Å–∞
        theme_boost = {
            "–∞–≤–∞—Ä–∏—è": 1.5 if any(kw in q_lower for kw in ["–∞–≤–∞—Ä–∏—è", "–ø—Ä–æ—Ä—ã–≤", "–∑–∞—Ç–æ–ø–∏–ª–æ", "–æ—Ç–∫–ª—é—á–∏–ª–∏", "—Å—Ä–æ—á–Ω–æ"]) else 1.0,
            "—Ç–∞—Ä–∏—Ñ": 1.5 if any(kw in q_lower for kw in ["—Ç–∞—Ä–∏—Ñ", "–Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ", "–ø–ª–∞—Ç–∞", "—Å—Ç–æ–∏–º–æ—Å—Ç—å", "–ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç"]) else 1.0,
            "—Å—á–µ—Ç—á–∏–∫": 1.5 if any(kw in q_lower for kw in ["—Å—á–µ—Ç—á–∏–∫", "–∏–ø—É", "–æ–¥–ø—É", "–ø–æ–≤–µ—Ä–∫–∞", "–ø–æ–∫–∞–∑–∞–Ω–∏—è"]) else 1.0,
            "—Ç–∫–æ": 1.5 if any(kw in q_lower for kw in ["—Ç–∫–æ", "–º—É—Å–æ—Ä", "–≤—ã–≤–æ–∑", "–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä", "–º—É—Å–æ—Ä–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞"]) else 1.0,
            "—Å–æ–±—Ä–∞–Ω–∏–µ": 1.5 if any(kw in q_lower for kw in ["—Å–æ–±—Ä–∞–Ω–∏–µ", "–æ—Å—Å", "–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", "–ø—Ä–æ—Ç–æ–∫–æ–ª"]) else 1.0,
        }
    
        for r in results:
            tags = [t.lower() for t in r.get("tags", [])]
            content = r.get('content', '').lower()
    
            # –ë—É—Å—Ç–∏–Ω–≥ –ø–æ —Ç–µ–≥–∞–º
            for theme, boost in theme_boost.items():
                if theme in tags or theme in content:
                    r["score"] *= boost
    
            # –ë—É—Å—Ç–∏–Ω–≥ –ø–æ —Ä–æ–ª–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º, –Ω–æ –¥–µ–ª–∞–µ–º –º–µ–Ω–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º)
            if role == "–∂–∏—Ç–µ–ª—å":
                if "–ø–ø —Ä—Ñ" in content or "—Ñ–∑" in content: r["score"] *= 1.1
                if "–≤—Å —Ä—Ñ" in content: r["score"] *= 0.95
            elif role == "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å":
                if "–≤—Å —Ä—Ñ" in content or "–∞—Ä–±–∏—Ç—Ä–∞–∂" in content: r["score"] *= 1.2
                if "–ø–ø —Ä—Ñ" in content: r["score"] *= 1.1
    
        results.sort(key=lambda x: x["score"], reverse=True)
        return results[:top_k]

    def _truncate_context_by_tokens(self, chunks_with_scores: List[Tuple[dict, float]], max_tokens_est: int):
        chunks_with_scores.sort(key=lambda x: -x[1])
        out, total = [], 0
        for chunk, score in chunks_with_scores:
            content = chunk.get('content', '').strip()
            token_count = estimate_tokens(content)
            if total + token_count > max_tokens_est:
                if total == 0:
                    sentences = sent_tokenize(content)
                    for sent in sentences:
                        sent_tokens = estimate_tokens(sent)
                        if total + sent_tokens > max_tokens_est: break
                        out.append(({'content': sent, 'source_file': chunk.get('source_file')}, score))
                        total += sent_tokens
                break
            else:
                out.append((chunk, score))
                total += token_count
        return out

    def ensure_key_cases(self, query: str, context_chunks: List[Tuple[dict, float]]) -> List[Tuple[dict, float]]:
        themes = {
            "–ì–í–°": ["–≥–≤—Å", "–æ–¥–ø—É", "–ø–æ–¥–æ–≥—Ä–µ–≤", "—Ç–µ–ø–ª–æ–≤–∞—è —ç–Ω–µ—Ä–≥–∏—è"],
            "–∫–∞–ø—Ä–µ–º–æ–Ω—Ç": ["–∫–∞–ø—Ä–µ–º–æ–Ω—Ç", "—Ñ–æ–Ω–¥ –∫–∞–ø–∏—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞"],
            "–ò–ü–£": ["–∏–ø—É", "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–∏–±–æ—Ä —É—á–µ—Ç–∞", "—Å—á–µ—Ç—á–∏–∫", "–ø–æ–≤–µ—Ä–∫–∞"],
            "–û–î–ù": ["–æ–¥–Ω", "–æ–±—â–µ–¥–æ–º–æ–≤—ã–µ –Ω—É–∂–¥—ã"],
            "–¥–æ–ª–≥–∏": ["–∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å", "–¥–æ–ª–≥", "–Ω–µ—É–ø–ª–∞—Ç–∞"]
        }
        q_lower = query.lower()
        matched_themes = set()
        for theme, kws in themes.items():
            if any(kw in q_lower for kw in kws):
                matched_themes.add(theme)
        if matched_themes:
            for c in self.chunks_data:
                tags = [t.lower() for t in c.get("tags", [])]
                if any(t in [m.lower() for m in matched_themes] for t in tags):
                    if c not in [x[0] for x in context_chunks]:
                        context_chunks.append((c, 0.95))
        return context_chunks

    def _sanitize_answer(self, answer: str, context_text: str) -> str:
        answer = answer.replace("[NL]", "")
    
        # –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω—ã, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        urls = re.findall(r'https?://\S+|www\.\S+', answer)
        for u in urls:
            if u not in context_text: answer = answer.replace(u, "[—Å—Å—ã–ª–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ]")
    
        phones = re.findall(r'(?:(?:\+7|8)\s?[\(\-]?\d{3}[\)\-]?\s?\d{3}[\- ]?\d{2}[\- ]?\d{2})', answer)
        for p in phones:
            if p not in context_text: answer = answer.replace(p, "[—Ç–µ–ª–µ—Ñ–æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ]")
    
        # –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–π
        hallucination_triggers = [
            "—è –Ω–µ –∑–Ω–∞—é", "–Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å", "—ç—Ç–æ–≥–æ –Ω–µ—Ç –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö", "–∏–∑–≤–∏–Ω–∏—Ç–µ",
            "–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é", "—É–≤—ã", "–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É", "–Ω–µ –∏–º–µ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
        ]
    
        if any(trigger in answer.lower() for trigger in hallucination_triggers):
            return (
                "‚ö†Ô∏è –ü–æ—Ö–æ–∂–µ, –≤ –º–æ–µ–π –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —É–ø—Ä–∞–≤–ª—è—é—â—É—é –∫–æ–º–ø–∞–Ω–∏—é –Ω–∞–ø—Ä—è–º—É—é. "
                "–Ø —É—á—É—Å—å –Ω–∞ –∫–∞–∂–¥–æ–º –≤–∞—à–µ–º –∑–∞–ø—Ä–æ—Å–µ!"
            )
    
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ –∫–ª—é—á–µ–≤—ã–º —Ñ–∞–∫—Ç–∞–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        # (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Å–∏—Å—Ç–µ–º)
        # if "–Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∑–æ–Ω–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —É–∫" in context_text.lower() and "—É–∫ –æ–±—è–∑–∞–Ω–∞" in answer.lower():
        #     return "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ."
    
        return answer.strip()

    def _llm_complete(self, prompt: str, max_tokens: int = 2048, temperature: float = 0.1) -> str:
        try:
            inputs = self.tokenizer(prompt, return_tensors="pt", truncation=True, max_length=16000).to(device)
            with torch.no_grad():
                outputs = self.model.generate(**inputs, max_new_tokens=max_tokens, temperature=temperature, top_p=0.95, do_sample=False, pad_token_id=self.tokenizer.eos_token_id)
            raw_text = self.tokenizer.decode(outputs[0], skip_special_tokens=False)
            start = raw_text.find("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]")
            if start != -1:
                answer_part = raw_text[start + len("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:[SEP]"):].strip()
            else:
                answer_part = raw_text.strip()
            for stop in ["</s>", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:"]:
                pos = answer_part.find(stop)
                if pos != -1:
                    answer_part = answer_part[:pos].strip()
            answer_part = answer_part.replace("[NL]", "\n")
            return answer_part
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç."

    # ‚ûï –ù–æ–≤—ã–π –º–µ—Ç–æ–¥: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
    def generate_context_for_agent(self, query: str, agent: RAGAgent, role: str = "—Å–º–µ—à–∞–Ω–Ω–∞—è") -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ (–±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞)"""
        if not self.chunks_data or self.index is None:
            return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        chunks_with_scores = [(c, c.get('score', 1.0)) for c in self.search_relevant_chunks(query, role=role, top_k=5)]
        truncated = self._truncate_context_by_tokens(chunks_with_scores, 1000)
        context_text = "\n\n".join([c['content'].strip() for c, _ in truncated]) if truncated else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        return context_text[:800]

    def generate_answer_chat(self, query: str, clarification: Optional[str] = None, max_tokens: int = 2048) -> str:
        if self.index is None or not self.chunks_data:
            context_text = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ."
        else:
            user_role = self.detect_user_role(query)
            
            # –ò–°–ü–û–õ–¨–ó–£–ï–ú –ù–û–í–´–ô –ú–ï–¢–û–î route_intelligently
            primary_agent, secondary_agents = self.meta_agent.route_intelligently(query)
            if not primary_agent:
                primary_agent = self.agents[0]  # fallback
    
            print(f"üîç –í—ã–±—Ä–∞–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –∞–≥–µ–Ω—Ç: {primary_agent.name}")
            if secondary_agents:
                print(f"ü§ù –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã: {[a.name for a in secondary_agents]}")
    
            if isinstance(primary_agent, FallbackAgent):
                return primary_agent.generate_fallback_response(query)
    
            # –ú—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã–π –¥–∏–∞–ª–æ–≥: –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º—Å—è —Å–æ –í–°–ï–ú–ò –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∞–≥–µ–Ω—Ç–∞–º–∏
            consulted_agents = []
            extra_context = ""
    
            for other_agent in secondary_agents:
                consulted_agents.append(other_agent.name)
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —É –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
                extra_context += primary_agent.consult_other_agent(query, self)
    
            # –ü–æ–∏—Å–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —á–∞–Ω–∫–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
            chunks_with_scores = [(c, c.get('score', 1.0)) for c in self.search_relevant_chunks(query, role=user_role, top_k=200)]
            chunks_with_scores = self.ensure_key_cases(query, chunks_with_scores)
            ctx_budget = max(1500, min(self.max_context_tokens - (max_tokens + 512), 8000))
            truncated = self._truncate_context_by_tokens(chunks_with_scores, ctx_budget)
            context_text = "\n\n".join([c['content'].strip() for c, _ in truncated]) if truncated else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ."
            context_text += extra_context
    
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞ –∏ –æ—Ç–≤–µ—Ç–∞
            prompt = primary_agent._build_prompt(query, context_text, role=user_role)
            raw_answer = self._llm_complete(prompt, max_tokens=max_tokens, temperature=0.3)
            final_answer = self._sanitize_answer(raw_answer, context_text)
    
            # –õ–æ–≥–∏—Ä—É–µ–º –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã–π –¥–∏–∞–ª–æ–≥
            self.meta_agent.log_dialog(primary_agent.name, consulted_agents, final_answer, query)
    
            return final_answer

    def ask(self, question: str, max_tokens: int = 2048) -> str:
        return self.generate_answer_chat(question)


# ---------------------------
# Gradio UI —Å –æ—Ü–µ–Ω–∫–æ–π –æ—Ç–≤–µ—Ç–æ–≤
# ---------------------------

rag_system = RAGSystem()
print("üéâ RAG-—Å–∏—Å—Ç–µ–º–∞ —Å –æ–±—É—á–µ–Ω–∏–µ–º –∞–≥–µ–Ω—Ç–æ–≤ –∏ –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã–º –¥–∏–∞–ª–æ–≥–æ–º –≥–æ—Ç–æ–≤–∞.")
conversation_state = {"stage": 0}

def respond(message: str, history: list, state: dict, rating: int = None) -> Tuple[str, list, dict, gr.update, gr.update]:
    new_history = history.copy()
    user_response = message.strip() if message else ""

    try:
        # –≠—Ç–∞–ø 0: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
        if state.get("stage", 0) == 0:
            needs_clarification, clarification_message, summary = rag_system.analyze_query_for_clarification(user_response)
            if needs_clarification and clarification_message:
                new_state = {
                    "stage": 1,
                    "original_query": user_response,
                    "summary": summary,
                    "clarification_question": clarification_message
                }
                new_history.append((message, clarification_message))
                return "", new_history, new_state, gr.update(visible=False), gr.update(visible=False)
            else:
                bot_message = rag_system.ask(summary or user_response)
                new_state = {"stage": 2, "last_query": summary or user_response, "last_answer": bot_message}
                new_history.append((message, bot_message))
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞
                return "", new_history, new_state, gr.update(visible=True), gr.update(visible=True)

        # –≠—Ç–∞–ø 1: –£—Ç–æ—á–Ω–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
        elif state.get("stage") == 1:
            original_query = state.get("original_query", "")
            combined_query = f"{original_query} {user_response}"
            bot_message = rag_system.ask(combined_query)
            new_state = {"stage": 2, "last_query": combined_query, "last_answer": bot_message}
            new_history.append((message, f"üìù –£—Ç–æ—á–Ω–µ–Ω–∏–µ: {user_response}"))
            new_history.append((message, bot_message))
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥
            return "", new_history, new_state, gr.update(visible=True), gr.update(visible=True)

        # –≠—Ç–∞–ø 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ò–õ–ò –ø–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–æ–≤–æ–º—É –≤–æ–ø—Ä–æ—Å—É
        elif state.get("stage") == 2:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å—Ç–∞–≤–∏–ª –æ—Ü–µ–Ω–∫—É ‚Äî –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë
            if rating is not None:
                last_query = state.get("last_query", "")
                last_answer = state.get("last_answer", "")
                # –ü–µ—Ä–µ–¥–∞—ë–º —Ñ–∏–¥–±–µ–∫ –∞–≥–µ–Ω—Ç—É –¢–û–õ–¨–ö–û –µ—Å–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥ >= 4
                if rating >= 4:
                    agent = rag_system.meta_agent.route(last_query)
                    if agent:
                        agent.add_feedback(last_query, last_answer, float(rating) / 5.0)  # –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–æ 0.0-1.0
                        feedback_msg = f"üåü –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞ ({rating}/5) –ø–µ—Ä–µ–¥–∞–Ω–∞ –∞–≥–µ–Ω—Ç—É '{agent.name}' –¥–ª—è –æ–±—É—á–µ–Ω–∏—è."
                    else:
                        feedback_msg = f"üåü –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É ({rating}/5)!"
                else:
                    feedback_msg = "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω—É—é –æ—Ü–µ–Ω–∫—É. –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —Å—Ç–∞—Ç—å –ª—É—á—à–µ!"

                new_state = {"stage": 0}
                new_history.append(("–û—Ü–µ–Ω–∫–∞", feedback_msg))
                # –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                return "", new_history, new_state, gr.update(visible=False), gr.update(visible=False)

            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –ø–æ—Å—Ç–∞–≤–∏–ª –æ—Ü–µ–Ω–∫—É, –Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –ù–û–í–´–ô –≤–æ–ø—Ä–æ—Å ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
            elif message.strip():
                # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º respond –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, —Å–±—Ä–∞—Å—ã–≤–∞—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                return respond(message, history, {"stage": 0})

            # –ï—Å–ª–∏ –Ω–∏ –æ—Ü–µ–Ω–∫–∏, –Ω–∏ –Ω–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –≤—Å—ë –∫–∞–∫ –µ—Å—Ç—å (—Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å)
            else:
                bot_message = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å."
                return message, new_history, state, gr.update(visible=True), gr.update(visible=True)

        # –õ—é–±–æ–µ –¥—Ä—É–≥–æ–µ –Ω–µ–ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ —ç—Ç–∞–ø 0
        else:
            new_state = {"stage": 0}
            # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞
            return respond(message, history, new_state)

    except Exception as e:
        bot_message = f"‚ö†Ô∏è –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞: {e}"
        new_state = {"stage": 0}
        new_history.append((message, bot_message))
        return "", new_history, new_state, gr.update(visible=False), gr.update(visible=False)


# –°–æ–∑–¥–∞—ë–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
with gr.Blocks(title="RAG-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ñ–ö–• —Å –æ–±—É—á–µ–Ω–∏–µ–º –∏ –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–æ—Å—Ç—å—é") as demo:
    gr.Markdown("## üí¨ –£–º–Ω—ã–π RAG-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ñ–ö–•")
    gr.Markdown("–ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ ‚Äî –ø–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 5 –∑–≤—ë–∑–¥. –û—Ç–∑—ã–≤—ã —Å **4 –∏ 5 –∑–≤—ë–∑–¥–∞–º–∏** –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–≤.")

    chatbot = gr.Chatbot(label="–î–∏–∞–ª–æ–≥", bubble_full_width=False)
    msg = gr.Textbox(label="–í–∞—à –≤–æ–ø—Ä–æ—Å", placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç...")
    send_button = gr.Button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")

    # –ë–ª–æ–∫ —Ä–µ–π—Ç–∏–Ω–≥–∞ (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç)
    with gr.Row():
        rating_slider = gr.Slider(1, 5, step=1, value=5, label="–û—Ü–µ–Ω–∏—Ç–µ –æ—Ç–≤–µ—Ç (1-5 –∑–≤—ë–∑–¥)", visible=False)
        submit_rating = gr.Button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É", visible=False)

    clear = gr.ClearButton([msg, chatbot, rating_slider], value="–û—á–∏—Å—Ç–∏—Ç—å")
    state = gr.State(value={"stage": 0})

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–æ–ø—Ä–æ—Å–∞
    msg.submit(
        respond,
        inputs=[msg, chatbot, state],
        outputs=[msg, chatbot, state, rating_slider, submit_rating]
    )
    send_button.click(
        respond,
        inputs=[msg, chatbot, state],
        outputs=[msg, chatbot, state, rating_slider, submit_rating]
    )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞
    submit_rating.click(
        respond,
        inputs=[msg, chatbot, state, rating_slider],
        outputs=[msg, chatbot, state, rating_slider, submit_rating]
    )

demo.launch(share=True, server_name="0.0.0.0", server_port=7860)